[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "geo-track-analyzer"
description = "Analyze geospacial data tracks"
version="1.7.0"
authors = [
  { name = "Korbinian Schweiger", email = "korbinian.schweiger@gmail.com" },
]
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Topic :: Scientific/Engineering :: GIS",
  "Topic :: Scientific/Engineering :: Visualization",
  "Topic :: Software Development :: Libraries",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3 :: Only",
]
keywords = ["fit", "gpx", "visualization", "analysis"]
requires-python = ">=3.11"
dependencies = [
  "numpy>=1,<2",
  "gpxpy~=1.6",
  "requests>=2,<3",
  "plotly>=5,<6",
  "pandas>=2,<3",
  "fitparse~=1.2",
  "pydantic>=2,<3",
  "pydantic-numpy>=5,<6",
]

[project.urls]
Home = "https://github.com/kschweiger/track_analyzer"
Documentation = "https://kschweiger.github.io/track_analyzer/"
Source = "https://github.com/kschweiger/track_analyzer"

[project.scripts]
extract-fit-track = 'geo_track_analyzer:extract_track'
enhance-elevation = 'geo_track_analyzer:update_elevation'

[project.optional-dependencies]
cli = ["click>=8,<9", "rich"]
postgis = ["SQLAlchemy"]
full = ["geo-track-analyzer[cli,postgis]", "psycopg2"]

[tool.pytest.ini_options]
testpaths = ["tests/"]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
  "E",
  "F",
  "I",
  "PD",
  "PT",
  "NPY",
  "N",
  "W",
  "RET",
  "ANN",
  "RUF",
  "SIM",
  "PERF",
]
unfixable = ["F841", "RUF015"]
ignore = [
  "ANN202",
  "ANN205",
  "ANN001",
  "ANN002",
  "ANN003",
  "ANN401",
  "RET502",
  "RET503",
  "RET504",
  "RET505",
  "RUF005",
  "RUF009",
  "E731",
]
[tool.mypy]
strict_optional = true
check_untyped_defs = true
exclude = "tests"

[[tool.mypy.overrides]]
module = "fitparse.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "plotly.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "coloredlogs.*"
ignore_missing_imports = true

[tool.git-changelog]
output = "CHANGELOG.md"
convention = "conventional"
template = "angular"

[dependency-groups]
dev = [
    "bpython>=0.25",
    "debugpy>=1.8.12",
    "pre-commit>=4.1.0",
    "ruff>=0.9.7",
    "uv>=0.6.2",
    "geo-track-analyzer[full]",
    "python-dotenv>=1.1.0",
]
doc = [
    "mkdocs>=1.6.1",
    "mkdocs-click>=0.8.1",
    "mkdocs-material>=9.6.5",
    "mkdocstrings[python]>=0.28.2",
]
test = [
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-dependency>=0.6.0",
    "pytest-mock>=3.14.0",
    "pytest-retry>=1.7.0",
    "pytest-sugar>=1.0.0",
    "python-dotenv>=1.1.0",
]
[tool.uv]
default-groups = ["dev", "test"]
