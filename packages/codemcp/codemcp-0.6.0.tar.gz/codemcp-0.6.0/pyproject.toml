[project]
name = "codemcp"
version = "0.6.0"
description = "MCP server for file operations"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
dependencies = [
    "mcp[cli]>=1.2.0",
    "ruff>=0.9.10",
    "toml>=0.10.2",
    "tomli>=2.1.1",
    "anyio>=3.7.0",
    "pyyaml>=6.0.0",
    "editorconfig>=0.17.0",
    "click>=8.1.8",
    "agno>=1.2.16",
    "anthropic>=0.49.0",
    "fastapi>=0.115.12",
    "uvicorn>=0.28.0",
    "starlette>=0.35.1",
    "google-genai>=1.10.0",
    "pathspec>=0.12.1",
]

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-xdist>=3.6.1",
    "pytest-asyncio>=0.23.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "expecttest>=0.1.4",
    "ruff>=0.1.5",
    "pyright>=1.1.350",
    "tomli_w>=1.0.0",
    "requests>=2.30.0",
]

[project.scripts]
codemcp = "codemcp:cli"
codemcp-multi = "codemcp.multi_entry:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]

[tool.ruff]
# Enable the formatter
target-version = "py312"
line-length = 88
indent-width = 4

# Enabled linters
[tool.ruff.lint]
select = ["ASYNC"]

# Exclude test files from ASYNC lints
[tool.ruff.lint.per-file-ignores]
"test/**/*.py" = ["ASYNC"]

[tool.ruff.format]
# Formatter settings
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
# Pytest configuration
testpaths = ["tests", "e2e"]
addopts = "-n auto --tb=native"
asyncio_default_fixture_loop_scope = "function"

[tool.pyright]
# Pyright configuration with strict settings
include = ["codemcp"]
exclude = ["**/node_modules", "**/__pycache__", "dist"]
venvPath = "."
venv = ".venv"
reportMissingImports = true
reportMissingTypeStubs = true
pythonVersion = "3.12"
pythonPlatform = "All"
typeCheckingMode = "strict"
reportUnknownMemberType = true
reportUnknownParameterType = true
reportUnknownVariableType = true
reportUnknownArgumentType = true
reportPrivateImportUsage = true
reportUntypedFunctionDecorator = true
reportFunctionMemberAccess = true
reportIncompatibleMethodOverride = true
stubPath = "./stubs"

# Type stub package mappings
stubPackages = [
    { source = "tomli", stub = "tomli_stubs" },
    { source = "mcp", stub = "mcp_stubs" }
]

# For testing code specific ignores
[[tool.pyright.ignoreExtraErrors]]
path = "codemcp/hot_reload_entry.py"
errorCodes = ["reportUnknownMemberType"]

[[tool.pyright.ignoreExtraErrors]]
path = "codemcp/testing.py"
errorCodes = ["reportUnknownMemberType", "reportUnknownArgumentType", "reportUnknownVariableType"]

[[tool.pyright.ignoreExtraErrors]]
path = "codemcp/main.py"
errorCodes = ["reportUnknownMemberType", "reportUnknownArgumentType", "reportUnknownVariableType", "reportUnknownParameterType", "reportMissingParameterType"]

[[tool.pyright.ignoreExtraErrors]]
path = "codemcp/agno.py"
errorCodes = ["reportUnknownMemberType", "reportUnknownArgumentType", "reportUnknownVariableType", "reportUnknownParameterType", "reportMissingParameterType", "reportPrivateImportUsage"]

[[tool.pyright.ignoreExtraErrors]]
path = "codemcp/config.py"
errorCodes = ["reportUnknownVariableType"]

[[tool.pyright.ignoreExtraErrors]]
path = "codemcp/multi_entry.py"
errorCodes = ["reportUnknownParameterType", "reportUnknownArgumentType", "reportMissingTypeArgument"]
