name: ME2AI MCP Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov flake8 black isort mypy
        pip install -e .[all]
        if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
    
    - name: Check code formatting with Black
      run: |
        black --check --line-length=100 me2ai_mcp tests examples
    
    - name: Sort imports with isort
      run: |
        isort --check-only --profile black me2ai_mcp tests examples
    
    - name: Lint with flake8
      run: |
        flake8 me2ai_mcp tests examples --count --max-complexity=10 --max-line-length=100 --statistics
    
    - name: Type checking with mypy
      run: |
        mypy me2ai_mcp
    
    - name: Test with pytest and generate coverage report
      run: |
        pytest --cov=me2ai_mcp --cov-report=xml --cov-report=term tests/
    
    - name: Check test coverage meets 80% minimum
      run: |
        echo "Checking that code coverage is at least 80%"
        coverage_percent=$(pytest --cov=me2ai_mcp tests/ | grep TOTAL | awk '{print $NF}' | sed 's/%//')
        if (( $(echo "$coverage_percent < 80" | bc -l) )); then
          echo "Code coverage is less than 80% ($coverage_percent%). Please add more tests."
          exit 1
        else
          echo "Code coverage is $coverage_percent%, which meets the 80% requirement."
        fi
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
