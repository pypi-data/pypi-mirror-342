# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ...core.serialization import FieldMetadata
import typing
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class UserMetadataPatch(UniversalBaseModel):
    user_email: typing_extensions.Annotated[str, FieldMetadata(alias="userEmail")]
    metadata: typing.Optional[typing.Any] = pydantic.Field(default=None)
    """
    Key-value object of metadata for user. Keys will be merged with any existing values but can also be set to `null` to effectively remove
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
