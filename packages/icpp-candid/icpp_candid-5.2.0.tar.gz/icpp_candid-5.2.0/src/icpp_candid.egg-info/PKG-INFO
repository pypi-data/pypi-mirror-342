Metadata-Version: 2.4
Name: icpp-candid
Version: 5.2.0
Summary: C++ Candid Library
Author-email: icpp-pro <icpp@icpp.world>
Maintainer-email: icpp-pro <icpp@icpp.world>
License: MIT License
        
        Copyright (c) 2023 icppWorld
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://www.onicai.com/
Project-URL: Documentation, https://docs.icpp.world/
Project-URL: Repository, https://github.com/icppWorld/icpp-candid
Project-URL: Issues, https://github.com/icppWorld/icpp-candid/issues
Project-URL: Changelog, https://docs.icpp.world/release-notes.html#changelog
Keywords: C++ Candid Library,Internet Computer,C++,Candid,blockchain
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: dev
Requires-Dist: black==23.12.1; extra == "dev"
Requires-Dist: pylint==2.13.9; extra == "dev"
Requires-Dist: mypy==1.8.0; extra == "dev"
Requires-Dist: build==1.2.2; extra == "dev"
Requires-Dist: twine==6.0.1; extra == "dev"
Requires-Dist: mkdocs==1.5.3; extra == "dev"
Requires-Dist: types-requests==2.31.0.10; extra == "dev"
Dynamic: license-file

# C++ Candid Library

The C++ Candid Library of [icpp-pro](https://docs.icpp.world/)

- [API Reference](https://docs.icpp.world/api-reference.html#candidtypes)
- The C++ Candid Library is extensively tested in our [QA Canister](https://github.com/icppWorld/icpp-pro/tree/main/test/canisters/canister_1).
- If you want to contribute, please reach out.

  
## How to use

### C++ Smart Contracts

To write a C++ smart contract that runs in a Canister, you do not use  `icpp-candid` directly, but you install icpp-pro, which is a full-blown C++ Canister Development Kit.

Simply [install](https://docs.icpp.world/installation.html) & [Get Started](https://docs.icpp.world/getting-started.html) !

### C++ Rich Clients

If you want to use the C++ Candid Library in your Rich Client, you need to include it in your application and then compile it to a native executable.

We already do this ourselves as part of `icpp-pro` to enable interactive debugging with VS Code, as described [here](https://docs.icpp.world/getting-started.html#debug-icpp-pro-only).

The command we use is:

```bash
icpp build-native
```

Which uses the Clang++ compiler to create a native debug executable named `mockic.exe` 


## Support

For support, kindly create a GitHub Issue as outlined in the [Support](https://docs.icpp.world/support.html) documentation page.

