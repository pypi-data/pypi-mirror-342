openapi: 3.0.3
info:
  title: Carapis API
  version: 1.0.0
  description: |
    # Koreancar API ‚Äì Premium Korean Vehicle Data API

    ## Access 130,000+ Korean Car Listings with Structured Data from Encar.com

    **Koreancar API** by **[Unrealos](https://unrealos.com/)** delivers structured data from Korea's leading vehicle marketplace, Encar.com. Our automated system provides up-to-date information on pricing, specifications, options, photos, accident history, inspection reports, and more.

    ### Key Features

    *   **Comprehensive Data**: VIN, mileage, trim level, options, history, inspection & more.
    *   **Rich Media**: High-resolution exterior, interior, and option photos.
    *   **Regular Updates**: Frequent data refreshes ensure timely information.
    *   **Developer-Friendly**: RESTful API with OpenAPI 3.0 schema (JSON responses).
    *   **Translation Option**: Korean data available with optional English translation.

    ### Getting Started: API Key Authentication

    Access to vehicle data requires authentication using an API key (provided after subscribing).

    **Methods:**

    1.  **Swagger UI / OpenAPI Docs:**
        *   Click "Authorize".
        *   Enter your key in the `ApiKeyAuth` section as `ApiKey YOUR_API_KEY_UUID` (e.g., `ApiKey 5f7ca728-fbb0-4bab-9a5d-d18c008852d0`).
        *   Authorize and close the popup.

    2.  **Direct API Calls (e.g., `curl`):**
        *   Include the `Authorization` header:
            ```bash
            curl -X GET \
              'https://carsapi.unrealos.com/api/encar/v2/vehicles/' \
              -H 'accept: application/json' \
              -H 'Authorization: ApiKey YOUR_API_KEY_UUID'
            ```

    **Scope:** Your API key grants access to both the vehicle list (`/api/encar/v2/vehicles/`) and detail (`/api/encar/v2/vehicles/{pk}/`) endpoints, based on your plan.

    ### API Structure & Plans

    The API provides detailed vehicle information. The core data includes:
    *   Basic Specifications (Make, Model, Year, Grade, Engine, Transmission, Color, Mileage, Price)
    *   Dealer Information
    *   Photos (Exterior, Interior, Options)
    *   Vehicle Options (Factory & Aftermarket)

    Different subscription plans offer varying levels of access depth and additional data modules:

    | Feature              | Free        | Starter         | Growth          | Professional       | Enterprise      |
    | :------------------- | :---------- | :-------------- | :-------------- | :----------------- | :-------------- |
    | **Price/month**      | $0          | $49             | $99            | $299               | Custom          |
    | **Records Limit**    | 1,000       | Unlimited       | Unlimited       | Unlimited          | Unlimited       |
    | **History Module**   | ‚úÖ          | ‚ùå              | ‚úÖ              | ‚úÖ                 | ‚úÖ              |
    | **Inspection Module**| ‚úÖ          | ‚ùå              | ‚ùå              | ‚úÖ                 | ‚úÖ              |
    | **English Translation**| ‚ùå          | ‚ùå              | ‚ùå              | ‚ùå                 | ‚úÖ     |
    | **Refresh Rate**     | 24h      | 24h       | 24h       | 24h          | 3h        |
    | **Support**          | Community   | Email           | Priority email  | Business hours     | Dedicated       |

    *   **Free Tier:** Access to the latest 1,000 vehicles with core data.
    *   **Starter Tier:** Unlimited access to core vehicle data and photos.
    *   **Growth Tier:** Adds the **History Module** (accident/repair history, owner changes).
    *   **Professional Tier:** Adds the **Inspection Module** (detailed reports, component status) and **English Translation**.
    *   **Enterprise Tier:** Adds analytics, custom fields, multi-language support, and dedicated support.

    ### Use Cases

    *   Car dealerships managing Korean imports.
    *   Automotive marketplaces expanding inventory.
    *   Fleet management companies.
    *   Price analytics platforms.
    *   Pre-owned vehicle certification services.

    ### Next Steps

    *   [Try the demo](https://encar-marketplace.vercel.app/) (Example Next.js template using this API)
    *   [View API Documentation](/schema/redoc/)

    ### Contact

    *   **Telegram:** [https://t.me/markinmatrix](https://t.me/markinmatrix)
    *   **Email:** [markolofsen@gmail.com](mailto:markolofsen@gmail.com)

    **üöÄ Power your Korean car business with Koreancar API today!**
paths:
  /api/encar/v2/business/dealers/:
    get:
      operationId: encar_v2_business_dealers_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
          enum:
          - client
          - company
          - dealer
          - private
          - repeat
        description: |-
          * `dealer` - Dealer
          * `private` - Private
          * `company` - Company
          * `client` - Client
          * `repeat` - Repeat
      tags:
      - Encar Data API
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDealerList'
          description: ''
  /api/encar/v2/business/dealers/{user_id}/:
    get:
      operationId: encar_v2_business_dealers_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
        description: A unique value identifying this dealer.
        required: true
      tags:
      - Encar Data API
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dealer'
          description: ''
  /api/encar/v2/business/diagnosis-centers/:
    get:
      operationId: encar_v2_business_diagnosis_centers_list
      parameters:
      - in: query
        name: dealer
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Encar Data API
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiagnosisCenterList'
          description: ''
  /api/encar/v2/business/diagnosis-centers/{code}/:
    get:
      operationId: encar_v2_business_diagnosis_centers_retrieve
      parameters:
      - in: path
        name: code
        schema:
          type: string
        description: A unique value identifying this diagnosis center.
        required: true
      tags:
      - Encar Data API
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosisCenter'
          description: ''
  /api/encar/v2/catalog/manufacturers/:
    get:
      operationId: encar_v2_catalog_manufacturers_list
      parameters:
      - in: query
        name: country
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Encar Data API
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedManufacturerList'
          description: ''
  /api/encar/v2/catalog/manufacturers/{code}/:
    get:
      operationId: encar_v2_catalog_manufacturers_retrieve
      parameters:
      - in: path
        name: code
        schema:
          type: string
        description: A unique value identifying this manufacturer.
        required: true
      tags:
      - Encar Data API
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
          description: ''
  /api/encar/v2/catalog/manufacturers/stats/:
    get:
      operationId: encar_v2_catalog_manufacturers_stats_retrieve
      description: Get manufacturer statistics
      tags:
      - Encar Data API
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
          description: ''
  /api/encar/v2/catalog/model-groups/:
    get:
      operationId: encar_v2_catalog_model_groups_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: manufacturer
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Encar Data API
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedModelGroupList'
          description: ''
  /api/encar/v2/catalog/model-groups/{code}/:
    get:
      operationId: encar_v2_catalog_model_groups_retrieve
      parameters:
      - in: path
        name: code
        schema:
          type: string
        description: A unique value identifying this model group.
        required: true
      tags:
      - Encar Data API
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelGroup'
          description: ''
  /api/encar/v2/catalog/models/:
    get:
      operationId: encar_v2_catalog_models_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: model_group
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Encar Data API
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVehicleModelList'
          description: ''
  /api/encar/v2/catalog/models/{code}/:
    get:
      operationId: encar_v2_catalog_models_retrieve
      parameters:
      - in: path
        name: code
        schema:
          type: string
        description: A unique value identifying this vehicle model.
        required: true
      tags:
      - Encar Data API
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleModel'
          description: ''
  /api/encar/v2/vehicles/:
    get:
      operationId: encar_v2_vehicles_list
      parameters:
      - in: query
        name: body_type
        schema:
          type: string
          nullable: true
          enum:
          - large
          - micro
          - micro_van
          - mid
          - other
          - rv
          - semi_mid
          - small
          - sports
          - suv
          - truck
          - van
        description: |-
          * `rv` - RV
          * `suv` - SUV
          * `micro_van` - Micro Van
          * `micro` - Micro Car
          * `large` - Large Car
          * `small` - Small Car
          * `van` - Van
          * `semi_mid` - Semi-medium Car
          * `mid` - Medium Car
          * `truck` - Truck
          * `sports` - Sports Car
          * `other` - Other
      - in: query
        name: color
        schema:
          type: string
          nullable: true
          enum:
          - beige
          - black
          - black_two_tone
          - blue
          - bright_silver
          - brown
          - brown_two_tone
          - dark_green
          - galaxy
          - gold
          - gold_two_tone
          - gray
          - green
          - light_blue
          - light_gold
          - light_green
          - maroon
          - orange
          - other
          - pearl
          - pearl_two_tone
          - pink
          - purple
          - red
          - silver
          - silver_gray
          - silver_two_tone
          - teal
          - white
          - white_two_tone
          - yellow
        description: |-
          * `black` - Black
          * `red` - Red
          * `silver` - Silver
          * `gray` - Gray
          * `pearl` - Pearl
          * `blue` - Blue
          * `white` - White
          * `green` - Green
          * `yellow` - Yellow
          * `orange` - Orange
          * `pink` - Pink
          * `purple` - Purple
          * `brown` - Brown
          * `gold` - Gold
          * `beige` - Beige
          * `light_green` - Light Green
          * `light_blue` - Light Blue
          * `maroon` - Maroon
          * `silver_gray` - Silver Gray
          * `teal` - Teal
          * `dark_green` - Dark Green
          * `bright_silver` - Bright Silver
          * `light_gold` - Light Gold
          * `galaxy` - Galaxy
          * `black_two_tone` - Black Two-Tone
          * `brown_two_tone` - Brown Two-Tone
          * `gold_two_tone` - Gold Two-Tone
          * `silver_two_tone` - Silver Two-Tone
          * `pearl_two_tone` - Pearl Two-Tone
          * `white_two_tone` - White Two-Tone
          * `other` - Other
      - in: query
        name: fuel_type
        schema:
          type: string
          nullable: true
          enum:
          - cng
          - diesel
          - electric
          - gasoline
          - gasoline_cng
          - gasoline_lpg
          - hybrid
          - hydrogen
          - lpg
          - lpg_electric
          - none
          - other
        description: |-
          * `none` - Not specified
          * `gasoline` - Gasoline
          * `diesel` - Diesel
          * `lpg` - LPG
          * `hybrid` - Hybrid
          * `electric` - Electric
          * `gasoline_lpg` - Gasoline+LPG
          * `hydrogen` - Hydrogen
          * `gasoline_cng` - Gasoline+CNG
          * `cng` - CNG
          * `lpg_electric` - LPG+Electric
          * `other` - Other
      - in: query
        name: grade
        schema:
          type: string
      - in: query
        name: has_accidents
        schema:
          type: boolean
      - in: query
        name: has_repairs
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: manufacturer
        schema:
          type: string
      - in: query
        name: max_mileage
        schema:
          type: integer
      - in: query
        name: max_price
        schema:
          type: integer
      - in: query
        name: max_year
        schema:
          type: integer
      - in: query
        name: min_mileage
        schema:
          type: integer
      - in: query
        name: min_price
        schema:
          type: integer
      - in: query
        name: min_year
        schema:
          type: integer
      - in: query
        name: model
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: transmission
        schema:
          type: string
          nullable: true
          enum:
          - auto
          - code_001
          - cvt
          - manual
          - other
          - semi_auto
        description: |-
          * `manual` - Manual
          * `auto` - Automatic
          * `semi_auto` - Semi-Automatic
          * `cvt` - CVT
          * `code_001` - Code 001
          * `other` - Other
      - in: query
        name: vehicle_id
        schema:
          type: integer
      - in: query
        name: vehicle_no
        schema:
          type: string
      - in: query
        name: vin
        schema:
          type: string
      - in: query
        name: warranty_type
        schema:
          type: string
          nullable: true
          enum:
          - insurance
          - none
          - self
        description: |-
          * `none` - Not specified
          * `insurance` - Insurance
          * `self` - Self
      tags:
      - Encar Data API
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVehicleListList'
          description: ''
  /api/encar/v2/vehicles/{vehicle_id}/:
    get:
      operationId: encar_v2_vehicles_retrieve
      description: Checks if the user has access to this specific vehicle detail.
      parameters:
      - in: path
        name: vehicle_id
        schema:
          type: integer
        description: A unique value identifying this vehicle.
        required: true
      tags:
      - Encar Data API
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleDetail'
          description: ''
  /api/encar/v2/vehicles/enums/:
    get:
      operationId: encar_v2_vehicles_enums_retrieve
      description: Get all vehicle-related enumerations
      tags:
      - Encar Data API
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleDetail'
          description: ''
  /api/encar/v2/vehicles/stats/:
    get:
      operationId: encar_v2_vehicles_stats_retrieve
      description: Get vehicle statistics
      tags:
      - Encar Data API
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleDetail'
          description: ''
components:
  schemas:
    BodyTypeEnum:
      enum:
      - rv
      - suv
      - micro_van
      - micro
      - large
      - small
      - van
      - semi_mid
      - mid
      - truck
      - sports
      - other
      type: string
      description: |-
        * `rv` - RV
        * `suv` - SUV
        * `micro_van` - Micro Van
        * `micro` - Micro Car
        * `large` - Large Car
        * `small` - Small Car
        * `van` - Van
        * `semi_mid` - Semi-medium Car
        * `mid` - Medium Car
        * `truck` - Truck
        * `sports` - Sports Car
        * `other` - Other
    ColorEnum:
      enum:
      - black
      - red
      - silver
      - gray
      - pearl
      - blue
      - white
      - green
      - yellow
      - orange
      - pink
      - purple
      - brown
      - gold
      - beige
      - light_green
      - light_blue
      - maroon
      - silver_gray
      - teal
      - dark_green
      - bright_silver
      - light_gold
      - galaxy
      - black_two_tone
      - brown_two_tone
      - gold_two_tone
      - silver_two_tone
      - pearl_two_tone
      - white_two_tone
      - other
      type: string
      description: |-
        * `black` - Black
        * `red` - Red
        * `silver` - Silver
        * `gray` - Gray
        * `pearl` - Pearl
        * `blue` - Blue
        * `white` - White
        * `green` - Green
        * `yellow` - Yellow
        * `orange` - Orange
        * `pink` - Pink
        * `purple` - Purple
        * `brown` - Brown
        * `gold` - Gold
        * `beige` - Beige
        * `light_green` - Light Green
        * `light_blue` - Light Blue
        * `maroon` - Maroon
        * `silver_gray` - Silver Gray
        * `teal` - Teal
        * `dark_green` - Dark Green
        * `bright_silver` - Bright Silver
        * `light_gold` - Light Gold
        * `galaxy` - Galaxy
        * `black_two_tone` - Black Two-Tone
        * `brown_two_tone` - Brown Two-Tone
        * `gold_two_tone` - Gold Two-Tone
        * `silver_two_tone` - Silver Two-Tone
        * `pearl_two_tone` - Pearl Two-Tone
        * `white_two_tone` - White Two-Tone
        * `other` - Other
    Dealer:
      type: object
      properties:
        user_id:
          type: string
          maxLength: 50
        code:
          type: string
          nullable: true
          maxLength: 10
        name:
          type: string
          maxLength: 100
        contact_name:
          type: string
          nullable: true
          maxLength: 100
        phone:
          type: string
          nullable: true
          maxLength: 20
        address:
          type: string
          nullable: true
          maxLength: 255
        type:
          $ref: '#/components/schemas/DealerTypeEnum'
        vehicle_count:
          type: integer
          readOnly: true
      required:
      - name
      - user_id
      - vehicle_count
    DealerTypeEnum:
      enum:
      - dealer
      - private
      - company
      - client
      - repeat
      type: string
      description: |-
        * `dealer` - Dealer
        * `private` - Private
        * `company` - Company
        * `client` - Client
        * `repeat` - Repeat
    DiagnosisCenter:
      type: object
      properties:
        code:
          type: string
          maxLength: 10
        name:
          type: string
          maxLength: 100
        address:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 20
        dealer:
          allOf:
          - $ref: '#/components/schemas/Dealer'
          readOnly: true
        inspection_count:
          type: integer
          readOnly: true
      required:
      - code
      - dealer
      - inspection_count
      - name
    FuelTypeEnum:
      enum:
      - none
      - gasoline
      - diesel
      - lpg
      - hybrid
      - electric
      - gasoline_lpg
      - hydrogen
      - gasoline_cng
      - cng
      - lpg_electric
      - other
      type: string
      description: |-
        * `none` - Not specified
        * `gasoline` - Gasoline
        * `diesel` - Diesel
        * `lpg` - LPG
        * `hybrid` - Hybrid
        * `electric` - Electric
        * `gasoline_lpg` - Gasoline+LPG
        * `hydrogen` - Hydrogen
        * `gasoline_cng` - Gasoline+CNG
        * `cng` - CNG
        * `lpg_electric` - LPG+Electric
        * `other` - Other
    GradeDetail:
      type: object
      properties:
        code:
          type: string
          maxLength: 10
        name:
          type: string
          maxLength: 100
        name_english:
          type: string
          maxLength: 100
        model:
          allOf:
          - $ref: '#/components/schemas/VehicleModel'
          readOnly: true
        vehicle_count:
          type: integer
          readOnly: true
      required:
      - code
      - model
      - name
      - name_english
      - vehicle_count
    Manufacturer:
      type: object
      properties:
        code:
          type: string
          maxLength: 10
        name:
          type: string
          maxLength: 100
        name_english:
          type: string
          maxLength: 100
        country:
          type: string
          maxLength: 50
        vehicle_count:
          type: integer
          readOnly: true
      required:
      - code
      - name
      - vehicle_count
    ModelGroup:
      type: object
      properties:
        code:
          type: string
          maxLength: 10
        name:
          type: string
          maxLength: 100
        name_english:
          type: string
          maxLength: 100
        manufacturer:
          allOf:
          - $ref: '#/components/schemas/Manufacturer'
          readOnly: true
        vehicle_count:
          type: integer
          readOnly: true
      required:
      - code
      - manufacturer
      - name
      - vehicle_count
    NullEnum:
      enum:
      - null
    OdometerStatus34cEnum:
      enum:
      - good
      - bad
      - normal
      - none
      - leakage
      - minor_leakage
      type: string
      description: |-
        * `good` - Good
        * `bad` - Bad
        * `normal` - Normal
        * `none` - None
        * `leakage` - Leakage
        * `minor_leakage` - Minor Leakage
    OdometerStatusA3eEnum:
      enum:
      - none
      - good
      - normal
      - bad
      type: string
      description: |-
        * `none` - Not specified
        * `good` - Good
        * `normal` - Normal
        * `bad` - Bad
    PaginatedDealerList:
      type: object
      required:
      - count
      - page
      - pages
      - limit
      - results
      properties:
        count:
          type: integer
        page:
          type: integer
        pages:
          type: integer
        limit:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/Dealer'
    PaginatedDiagnosisCenterList:
      type: object
      required:
      - count
      - page
      - pages
      - limit
      - results
      properties:
        count:
          type: integer
        page:
          type: integer
        pages:
          type: integer
        limit:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/DiagnosisCenter'
    PaginatedManufacturerList:
      type: object
      required:
      - count
      - page
      - pages
      - limit
      - results
      properties:
        count:
          type: integer
        page:
          type: integer
        pages:
          type: integer
        limit:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/Manufacturer'
    PaginatedModelGroupList:
      type: object
      required:
      - count
      - page
      - pages
      - limit
      - results
      properties:
        count:
          type: integer
        page:
          type: integer
        pages:
          type: integer
        limit:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/ModelGroup'
    PaginatedVehicleListList:
      type: object
      required:
      - count
      - page
      - pages
      - limit
      - results
      properties:
        count:
          type: integer
        page:
          type: integer
        pages:
          type: integer
        limit:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/VehicleList'
    PaginatedVehicleModelList:
      type: object
      required:
      - count
      - page
      - pages
      - limit
      - results
      properties:
        count:
          type: integer
        page:
          type: integer
        pages:
          type: integer
        limit:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/VehicleModel'
    PreviousUsageEnum:
      enum:
      - business
      - private
      type: string
      description: |-
        * `business` - Business
        * `private` - Private
    TransmissionEnum:
      enum:
      - manual
      - auto
      - semi_auto
      - cvt
      - code_001
      - other
      type: string
      description: |-
        * `manual` - Manual
        * `auto` - Automatic
        * `semi_auto` - Semi-Automatic
        * `cvt` - CVT
        * `code_001` - Code 001
        * `other` - Other
    VehicleDetail:
      type: object
      properties:
        grade_detail:
          allOf:
          - $ref: '#/components/schemas/GradeDetail'
          readOnly: true
        last_import_date:
          type: string
          format: date-time
          nullable: true
        year:
          type: integer
        mileage:
          type: integer
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Updated Date
        price:
          type: integer
        fuel_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/FuelTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Created Date
        transmission:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TransmissionEnum'
          - $ref: '#/components/schemas/NullEnum'
        color:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ColorEnum'
          - $ref: '#/components/schemas/NullEnum'
        model:
          allOf:
          - $ref: '#/components/schemas/VehicleModel'
          readOnly: true
        vehicle_id:
          type: integer
        warranty_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/WarrantyTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        main_photo:
          type: string
          readOnly: true
        dealer:
          allOf:
          - $ref: '#/components/schemas/Dealer'
          readOnly: true
        vin:
          type: string
          nullable: true
          maxLength: 17
        vehicle_no:
          type: string
          nullable: true
          maxLength: 20
        first_registration_date:
          type: string
          format: date
          nullable: true
        displacement:
          type: integer
          nullable: true
        seat_count:
          type: integer
          nullable: true
        body_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/BodyTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        odometer_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/OdometerStatusA3eEnum'
          - $ref: '#/components/schemas/NullEnum'
        vin_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/VinStatusA3eEnum'
          - $ref: '#/components/schemas/NullEnum'
        photos:
          type: array
          items:
            $ref: '#/components/schemas/VehiclePhoto'
          readOnly: true
        options:
          type: array
          items:
            $ref: '#/components/schemas/VehicleOption'
          readOnly: true
        inspection:
          allOf:
          - $ref: '#/components/schemas/VehicleInspection'
          readOnly: true
        history:
          allOf:
          - $ref: '#/components/schemas/VehicleHistory'
          readOnly: true
        main_data: {}
        diagnosis_data:
          nullable: true
        inspection_data:
          nullable: true
        inspection_web_data:
          nullable: true
        sellingpoint_data:
          nullable: true
        options_data:
          nullable: true
      required:
      - created_at
      - dealer
      - grade_detail
      - history
      - inspection
      - main_photo
      - mileage
      - model
      - options
      - photos
      - price
      - updated_at
      - vehicle_id
      - year
    VehicleHistory:
      type: object
      properties:
        vehicle:
          type: integer
        first_registration:
          type: string
          format: date
        owner_changes:
          type: integer
        plate_changes:
          type: integer
        total_accidents:
          type: integer
        owner_accidents:
          type: integer
        total_loss_count:
          type: integer
        flood_damage_count:
          type: integer
        previous_usage:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PreviousUsageEnum'
          - $ref: '#/components/schemas/NullEnum'
        has_commercial_use:
          type: boolean
        has_rental_use:
          type: boolean
      required:
      - first_registration
      - vehicle
    VehicleInspection:
      type: object
      properties:
        vehicle:
          type: integer
        center:
          allOf:
          - $ref: '#/components/schemas/DiagnosisCenter'
          readOnly: true
        inspector_name:
          type: string
          nullable: true
          maxLength: 100
        inspection_date:
          type: string
          format: date-time
        performance_number:
          type: string
          nullable: true
          maxLength: 50
        has_accidents:
          type: boolean
        has_repairs:
          type: boolean
        odometer_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/OdometerStatus34cEnum'
          - $ref: '#/components/schemas/NullEnum'
        vin_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/VinStatus34cEnum'
          - $ref: '#/components/schemas/NullEnum'
        engine_status: {}
        transmission_status: {}
        electrical_status: {}
        brake_status: {}
        steering_status: {}
        inspector_notes:
          type: string
          nullable: true
      required:
      - center
      - inspection_date
      - vehicle
    VehicleList:
      type: object
      properties:
        vehicle_id:
          type: integer
        model:
          allOf:
          - $ref: '#/components/schemas/VehicleModel'
          readOnly: true
        grade_detail:
          allOf:
          - $ref: '#/components/schemas/GradeDetail'
          readOnly: true
        year:
          type: integer
        mileage:
          type: integer
        price:
          type: integer
        fuel_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/FuelTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        transmission:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TransmissionEnum'
          - $ref: '#/components/schemas/NullEnum'
        color:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ColorEnum'
          - $ref: '#/components/schemas/NullEnum'
        main_photo:
          type: string
          readOnly: true
        warranty_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/WarrantyTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Created Date
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Updated Date
        last_import_date:
          type: string
          format: date-time
          nullable: true
      required:
      - created_at
      - grade_detail
      - main_photo
      - mileage
      - model
      - price
      - updated_at
      - vehicle_id
      - year
    VehicleModel:
      type: object
      properties:
        code:
          type: string
          maxLength: 10
        name:
          type: string
          maxLength: 100
        name_english:
          type: string
          maxLength: 100
        model_group:
          allOf:
          - $ref: '#/components/schemas/ModelGroup'
          readOnly: true
        vehicle_count:
          type: integer
          readOnly: true
      required:
      - code
      - model_group
      - name
      - name_english
      - vehicle_count
    VehicleOption:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        code:
          type: string
          maxLength: 10
        name:
          type: string
          maxLength: 200
        price:
          type: integer
          nullable: true
        description:
          type: string
          nullable: true
        type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/VehicleOptionTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        is_standard:
          type: boolean
        is_factory:
          type: boolean
      required:
      - code
      - id
      - name
    VehicleOptionTypeEnum:
      enum:
      - standard
      - choice
      - tuning
      type: string
      description: |-
        * `standard` - Standard
        * `choice` - Choice
        * `tuning` - Tuning
    VehiclePhoto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          maxLength: 10
        path:
          type: string
          maxLength: 200
        type:
          $ref: '#/components/schemas/VehiclePhotoTypeEnum'
        description:
          type: string
          nullable: true
        image_url:
          type: string
          readOnly: true
      required:
      - code
      - id
      - image_url
      - path
      - type
    VehiclePhotoTypeEnum:
      enum:
      - inner
      - outer
      - option
      - thumbnail
      type: string
      description: |-
        * `inner` - Interior
        * `outer` - Exterior
        * `option` - Option
        * `thumbnail` - Thumbnail
    VinStatus34cEnum:
      enum:
      - good
      - bad
      - normal
      - none
      - leakage
      - minor_leakage
      type: string
      description: |-
        * `good` - Good
        * `bad` - Bad
        * `normal` - Normal
        * `none` - None
        * `leakage` - Leakage
        * `minor_leakage` - Minor Leakage
    VinStatusA3eEnum:
      enum:
      - none
      - good
      - normal
      - bad
      type: string
      description: |-
        * `none` - Not specified
        * `good` - Good
        * `normal` - Normal
        * `bad` - Bad
    WarrantyTypeEnum:
      enum:
      - none
      - insurance
      - self
      type: string
      description: |-
        * `none` - Not specified
        * `insurance` - Insurance
        * `self` - Self
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
