[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "yaml-workflow"
version = "0.4.0"
description = "A lightweight, powerful, and flexible workflow engine that executes tasks defined in YAML configuration files"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "Nicolas Brousse", email = "nicolas@brousse.info" }
]
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Natural Language :: English",
    "Typing :: Typed",
]
keywords = [
    "workflow",
    "yaml",
    "automation",
    "pipeline",
    "task-runner",
    "workflow-engine",
    "batch-processing",
    "parallel-processing",
    "configuration",
    "templating",
    "process-automation",
    "data-processing",
    "etl",
    "reports",
    "orchestration",
    "job-scheduler",
    "task-orchestration",
    "workflow-automation",
    "state-management",
    "retry-mechanism",
    "distributed-tasks",
    "yaml-configuration",
    "modular-workflows",
    "workflow-management",
    "data-pipeline"
]
dependencies = [
    "pyyaml>=6.0,<7.0",
    "jinja2>=3.0,<4.0",
    "click>=8.0,<9.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0,<9.0",
    "pytest-cov>=4.0,<7.0",
    "pytest-ordering",
    "mypy>=1.0,<2.0",
    "types-PyYAML>=6.0,<7.0",
]
doc = [
    "mkdocs>=1.6.0,<2.0",
    "mkdocs-material>=9.6.0,<10.0",
    "mkdocstrings[python]>=0.29.0,<1.0",
    "griffe>=0.49.0",
    "docstring-parser>=0.16.0,<1.0",
    "mkdocs-gen-files>=0.5.0,<1.0",
    "mkdocs-literate-nav>=0.6.0,<1.0",
    "mkdocs-section-index>=0.3.0,<1.0",
]
dev = [
    "black==25.1.0",
    "isort>=5.0,<7.0",
    "build>=1.0.0,<2.0.0",
    "twine>=4.0.0,<7.0.0",
]

[project.urls]
Homepage = "https://github.com/orieg/yaml-workflow"
Issues = "https://github.com/orieg/yaml-workflow/issues"
Documentation = "https://orieg.github.io/yaml-workflow/"

[project.scripts]
yaml-workflow = "yaml_workflow.cli:main"

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88  # Match black's line length

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
'''

[tool.mypy]
exclude = ["build/", ".venv/", "site/"] # Exclude build, venv, and site directories
mypy_path = "src"
namespace_packages = true

[tool.pytest.ini_options]
markers = [
    "last: mark test to run last",
] 