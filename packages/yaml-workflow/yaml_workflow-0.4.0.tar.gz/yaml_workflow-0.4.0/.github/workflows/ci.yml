name: CI
permissions:
  contents: read
  pull-requests: write
  
on:
  push:
    branches: ['main']  # Run on pushes to main
  pull_request:
    branches: ['main']  # Run on PRs targeting main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test,dev]"
        
    - name: Check formatting
      run: |
        black --check src tests
        isort --check-only --profile black src tests
        
    - name: Type checking
      run: |
        mypy src
        
    - name: Run tests
      run: |
        pytest tests/ --cov --cov-branch --cov=yaml_workflow --cov-report=xml
        
    - name: Upload coverage to Codecov (Attempt 1)
      id: codecov1
      uses: codecov/codecov-action@v5
      continue-on-error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload coverage to Codecov (Attempt 2)
      id: codecov2
      if: steps.codecov1.outcome == 'failure'
      uses: codecov/codecov-action@v5
      continue-on-error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload coverage to Codecov (Final Attempt)
      if: steps.codecov2.outcome == 'failure'
      uses: codecov/codecov-action@v5
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}