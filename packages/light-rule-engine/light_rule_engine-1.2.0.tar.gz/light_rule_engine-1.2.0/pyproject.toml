[tool.poetry]
name = "light-rule-engine"
version = "1.2.0"
description = "A simple rule engine"
authors = ["Biagio Distefano <me@biagiodistefano.io>"]
readme = "README.md"
license = "MIT"
packages = [
    { include = "rule_engine", from = "src" },
    { include = "rule_engine/py.typed", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"


[tool.poetry.group.dev.dependencies]
mypy = "^1.8.0"
ruff = "^0.2.1"
pre-commit = "^3.6.1"
pytest = "^8.3.3"
pytest-cov = "^6.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "dist",
    "node_modules",
    "venv",
    "playground.py",
    "*/migrations/*"
]

# Same as Black.
line-length = 120

target-version = "py312"

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
select = ["E", "F", "I", "W"]
extend-select = ["I", "W", "E"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"**/migrations/*.py" = ["D"]
"**/tests/*.py" = ["D"]
"**/admin.py" = ["D102"]
"conftest.py" = ["D"]

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]

# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
