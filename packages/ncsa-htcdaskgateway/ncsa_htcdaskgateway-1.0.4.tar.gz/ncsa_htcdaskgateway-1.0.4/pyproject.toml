[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[project]
name = "ncsa-htcdaskgateway"
authors = [
  { name = "Ben Galewsky", email = "bengal1@illinois.edu" },
    { name = "Maria P. Acosta F./Fermilab EAF project", email="macosta@fnal.gov"}
]
description = "Launches a Dask Gateway cluster in K8s and joins HTCondor workers to it"
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
  "dask-gateway==2024.1.0",
  "pexpect",
]

[project.optional-dependencies]
dev = ["ruff"]
[project.scripts]
setup_condor = "htcdaskgateway.setup_condor:main"


[project.urls]
Homepage = "https://github.com/ncsa/dagster-ncsa"
"Bug Tracker" = "https://github.com/ncsa/dagster-ncsa/issues"
Discussions = "https://github.com/ncsa/dagster-ncsa/discussions"
Changelog = "https://github.com/ncsa/dagster-ncsa/releases"


[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "htcdaskgateway/_version.py"
build.packages = ["htcdaskgateway"]



[tool.ruff]
exclude = ["_version.py", "docker/test.py"]

[tool.ruff.lint]
extend-select = [
  "ARG",      # flake8-unused-arguments
  "B",        # flake8-bugbear
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "EXE",      # flake8-executable
  "G",        # flake8-logging-format
  "I",        # isort
  "ICN",      # flake8-import-conventions
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "T201",     # I like print statemtns for cli
]
isort.required-imports = ["from __future__ import annotations"]
# Uncomment if using a _compat.typing backport
# typing-modules = ["dagster_ncsa._compat.typing"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
"_version.py" = ["UP035", "UP006"]
