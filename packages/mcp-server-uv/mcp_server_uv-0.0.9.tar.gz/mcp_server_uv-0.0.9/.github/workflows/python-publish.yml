# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [published]

jobs:
  build:
    name: Build mcp-server-uv
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Get version from tag
        if: github.event_name == 'release'
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update pyproject.toml version
        if: github.event_name == 'release'
        run: |
          sed -i "s/version = \".*\"/version = \"$VERSION\"/" pyproject.toml

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install dependencies
        run: uv sync --frozen --all-extras --dev

      # - name: Run pyright
      #   run: uv run --frozen pyright

      - name: Build package
        run: uv build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-mcp-server-uv
          path: dist/

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'release'
    name: Publish mcp-server-uv

    environment: release
    permissions:
      id-token: write # Required for trusted publishing
      contents: write  # Add this line for release permissions

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-mcp-server-uv
          path: dist/
          
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
