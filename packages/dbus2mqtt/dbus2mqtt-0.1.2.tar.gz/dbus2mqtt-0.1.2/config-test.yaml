# mqtt:
#   host:
#   port:

dbus:
  # mappings:
  subscriptions:
    - bus_name: org.mpris.MediaPlayer2.*
      path: /org/mpris/MediaPlayer2

      # https://specifications.freedesktop.org/mpris-spec/latest/Player_Interface.html
      interfaces:
        - interface: org.freedesktop.DBus.Properties
          signals:
            - signal: PropertiesChanged
              filter: "{{ args[0] == 'org.mpris.MediaPlayer2.Player' }}"

              # shorthand notation for flow
              # actions:
              #   - type: mqtt_publish
              #     topic: dbus2mqtt/org.mpris.MediaPlayer2/signal/PropertiesChanged
              #     payload_type: json
              #     payload_template: |
              #       bus_name: {{ bus_name }}
              #       interface_name: {{ args[0] }}
              #       changed_properties:
              #         {{ args[1] | to_nice_yaml | indent(2) }}
              #       invalidated_properties: {{ args[2] }}

          methods:
            - method: GetAll

        - interface: org.mpris.MediaPlayer2
          mqtt_call_method_topic: dbus2mqtt/org.mpris.MediaPlayer2/command
          methods:
            - method: Quit

        - interface: org.mpris.MediaPlayer2.Player
          mqtt_call_method_topic: dbus2mqtt/org.mpris.MediaPlayer2/command
          # bus_name_selection: first/all/...
          methods:
            - method: Pause
            - method: Play
            - method: PlayPause
            - method: OpenUri
            - method: Stop
          properties:
            - property: Metadata
            - property: Volume
            - property: PlaybackStatus
            - property: Rate

      flows:
        # - name: "set active player"
        #   triggers:
        #     - type: dbus_signal
        #       bus_name: "org.freedesktop.Notifications"
        #       path: "/org/freedesktop/Notifications"
        #       interface: "org.freedesktop.Notifications"
        #       signal: PropertiesChanged
        #       filter: "{{ args[0] == 'org.mpris.MediaPlayer2.Player' }}"
        #   global_template_context:
        #     active_mpris_player: "{{ dbus_signal.args[0] }}"  # sets active bus_name
        - name: "MPRIS publish state on schedule"
          triggers:
            # - type: mqtt
            #   topic: "sensor/input"
            - type: schedule
              interval: {seconds: 5}
            - type: dbus_signal
              interface: org.freedesktop.DBus.Properties
              signal: PropertiesChanged
              filter: "{{ args[0] == 'org.mpris.MediaPlayer2.Player' }}"
              # cron: { second: "*" }
              # - type: dbus_signal
              # #   bus_name: "org.freedesktop.Notifications"
              # #   path: "/org/freedesktop/Notifications"
              #   interface: "org.freedesktop.Notifications"
              #   signal: "NotificationClosed"
              #   # filter: ""
          # template_context:
          #   active_mpris_player_bus_name: "{{ global.active_mpris_player_bus_name }}"
          # dbus_context:
          #   bus_name: org.mpris.MediaPlayer2.*
          #   path: /org/mpris/MediaPlayer2
          #   bus_name_selector_ref: abc
          #   active_bus_name_selector:
          #     - type: dbus_signal_context
          #     # - type: property_value
          #     #   expression: org.mpris.MediaPlayer2.Player:PlaybackStatus == Playing
          #       # interface: org.mpris.MediaPlayer2.Player
          #       # property: PlaybackStatus
          #       # value: Playing
          #     - type: first
          actions:
            - type: context_set
              # global_context:
              context:
                # usfull jinja filters for mpris: first, last, last_seen, property(PlaybackStatus, Playing)
                mpris_bus_name: '{{ dbus_list("org.mpris.MediaPlayer2.*") | first }}'
                path: /org/mpris/MediaPlayer2
            - type: mqtt_publish
              topic: dbus2mqtt/org.mpris.MediaPlayer2/state
              payload_type: json
              payload_template: |
                bus_name: {{ mpris_bus_name }}
                {{ dbus_call(mpris_bus_name, path, 'org.freedesktop.DBus.Properties', 'GetAll', ['org.mpris.MediaPlayer2.Player']) | to_yaml }}
        - name: "MPRIS signal to mqtt"
          triggers:
            - type: dbus_signal
              # bus_name: org.mpris.MediaPlayer2.*
              # path: /org/mpris/MediaPlayer2
              interface: org.freedesktop.DBus.Properties
              signal: PropertiesChanged
              filter: "{{ args[0] == 'org.mpris.MediaPlayer2.Player' }}"
          actions:
            - type: mqtt_publish
              topic: dbus2mqtt/org.mpris.MediaPlayer2/signal/PropertiesChanged
              payload_type: json
              payload_template:
                bus_name: "{{ bus_name }}"
                interface_name: "{{ args[0] }}"
                changed_properties: |
                  {{ args[1] | to_nice_yaml | indent(2) }}
                invalidated_properties: "{{ args[2] }}"
# flows:
#   - name: "Publish dbus2mqtt state"
#     triggers:
#       - type: schedule
#         interval: {seconds: 10}
#     actions:
#       - type: context_set
#         context:
#           mpris_bus_names: '{{ dbus_list("*") }}'
#       - type: mqtt_publish
#         topic: dbus2mqtt/subscriptions/state
#         payload_type: json
#         payload_template: |
#           now: "{{ now() }}"
#           mpris_dbus_names: '{{ mpris_bus_names }}'
#           bus_names: '{{ dbus_list("*") }}'
