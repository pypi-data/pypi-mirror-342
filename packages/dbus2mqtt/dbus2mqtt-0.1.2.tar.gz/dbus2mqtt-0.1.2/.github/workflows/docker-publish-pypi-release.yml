name: Build and Push Docker Images for Released Versions

"on":
  # push:
  #   branches:
  #     - main
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      matrix:
        version:
          - 0.1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            jwnmulder/dbus2mqtt
            ghcr.io/jwnmulder/dbus2mqtt
          tags: |
            type=pep440,pattern={{major}},value=${{ matrix.version }},enable=${{ !startsWith(matrix.version, '0.') }}
            type=pep440,pattern={{major}}.{{minor}},value=${{ matrix.version }}
          # type=ref,event=branch
          # type=ref,event=pr
          # type=semver,pattern={{version}},value=${{ matrix.version }}
          labels: |
            org.opencontainers.image.source=https://github.com/jwnmulder/dbus2mqtt

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: jwnmulder
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: jwnmulder
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile.pypi
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DBUS2MQTT_VERSION=${{ matrix.version }}
