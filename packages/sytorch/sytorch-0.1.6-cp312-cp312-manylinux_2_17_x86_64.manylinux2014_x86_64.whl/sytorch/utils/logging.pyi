import logging
from _typeshed import Incomplete
from collections.abc import Generator
from rich import print as print

def in_jupyter(): ...

IN_JUPYTER: Incomplete
LOGLEVEL: Incomplete
TERMINAL_WIDTH: Incomplete
console: Incomplete

def status(status: RenderableType, *, spinner: str = 'dots', spinner_style: StyleType = 'status.spinner', speed: float = 1.0, refresh_per_second: float = 12.5, log_level=...) -> Status: ...

FORMAT: str
logger: Incomplete

class NoTrailingWhitespaceFormatter(logging.Formatter):
    def format(self, record): ...

def log_to_file(path, level=...) -> None: ...

class DummyFile:
    def write(self, x) -> None: ...
    def flush(self, *args, **kwargs) -> None: ...

def no_stdout() -> Generator[None]: ...
def no_stderr() -> Generator[None]: ...
def capture_print(rich_text): ...
def no_logging(level=...) -> Generator[None]: ...
