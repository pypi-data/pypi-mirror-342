[project]
name = "sarada"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "jyotisha>=0.1.2",
    #"urllib3>=2.2.3",
    "pyswisseph>=2.10.3.2",
]

# [project.scripts]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
	"flake8>=7.1.2",
	"mypy>=1.15.0",
	"pytest>=8.3.5",
	"pytest-cov>=6.0.0",
	"ruff>=0.6.7",
	"syrupy>=4.9.0",
]

[tool.ruff.format]
indent-style = "tab"

[tool.hatch.build.targets.wheel]
sources = ["src"]

# [tool.poetry.group.dev.dependencies]
# mypy = "*"
# python-semantic-release = "*"

[tool.pytest.ini_options]
testpaths = ["tests"]
# Uncomment to care about coverage
addopts = "--junitxml pytest.xml --cov src --cov-report=xml:coverage.xml --cov-fail-under=50 --cov-report=html"
junit_family = "xunit1"
log_format = "%(asctime)s | %(levelname)s | %(pathname)s:%(lineno)d | %(message)s"
log_level = "WARNING"

# [tool.mypy]
# If you need this
# plugins = "numpy.typing.mypy_plugin"

# [[tool.mypy.overrides]]
# module = [
# 	"scipy",
# 	"scipy.optimize",
# 	"scipy.stats",
# 	"scipy.fft",
# ]
# ignore_missing_imports = true

# [tool.semantic_release]
# branch = "master"
# version_variable = [
# 	"src/__init__.py:__version__",
# 	"pyproject.toml:version"
# ]
# upload_to_pypi = false
# upload_to_release = false
# build_command = "pip install poetry && poetry build"j
