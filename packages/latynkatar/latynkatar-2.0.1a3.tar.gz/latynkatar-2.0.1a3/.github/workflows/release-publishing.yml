# This workflow should build and publish the packege in case when release was created in Github UI

name: Python packaging and release publication

on:
  release:
    types: [ "published" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - run: git checkout ${{github.sha}} 

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: 3.13
    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - run: uv sync

    - name: Set version for the release tag
      run: uv run nox -s set_version -- ${{github.ref}}

    - name: Build the package
      run: uv build

    - name: Collect builded package
      uses: actions/upload-artifact@v4
      with:
        name: packages
        path: dist/*

  test-the-package:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"] 

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - uses: actions/download-artifact@v4
      with:
        name: packages
        path: dist


    - name: Update uv environment
      run: uv sync
    - name: Install package to test 
      run: uv pip install dist/*.whl
    - name: Test build package
      run: uv run nox -s pytest

  upload-to-pypi:
    needs: test-the-package
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: 3.13
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    - uses: actions/download-artifact@v4
      with:
        name: packages
        path: dist
    - name: Check files
      run: ls -Ra
    - name: Upload the package
      run: uv publish --username __token__ --password ${{ secrets.PYPI_TOKEN }} dist/*

  add-binaries-to-release:
    needs: upload-to-pypi
    runs-on: ubuntu-latest

    steps:
      - name: Obtain artifacts
        uses: actions/download-artifact@v4
        with:
          name: packages
          path: dist
      - name: Upload artifacts into release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file_glob: true
          file: dist/*
      
