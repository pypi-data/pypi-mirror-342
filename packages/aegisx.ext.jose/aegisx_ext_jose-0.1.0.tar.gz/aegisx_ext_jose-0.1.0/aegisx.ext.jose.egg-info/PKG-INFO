Metadata-Version: 2.4
Name: aegisx.ext.jose
Version: 0.1.0
Summary: Javascript Object Signing and Encryption (JOSE)
Home-page: https://github.com/tensorshield/python-aegisx
Author: Immortal Izzy
Author-email: immortal.izzy@tensorshield.ai
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Framework :: Pydantic :: 2
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3.14
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Communications
Classifier: Topic :: File Formats :: JSON
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Office/Business :: Financial
Classifier: Topic :: Security
Classifier: Topic :: Security :: Cryptography
Classifier: Topic :: Software Development :: Libraries
Description-Content-Type: text/markdown
Requires-Dist: aegisx>=0.1.0a1
Requires-Dist: cryptography
Requires-Dist: certifi
Requires-Dist: pydantic>=2
Provides-Extra: develop
Requires-Dist: jwcrypto; extra == "develop"
Requires-Dist: pyjwt; extra == "develop"
Requires-Dist: py-sr25519-bindings<1,>=0.2.0; extra == "develop"
Requires-Dist: substrate-interface; extra == "develop"
Requires-Dist: scalecodec<1.3,>=1.2.10; extra == "develop"
Provides-Extra: sr25519
Requires-Dist: scalecodec<1.3,>=1.2.10; extra == "sr25519"
Requires-Dist: py-sr25519-bindings<1,>=0.2.0; extra == "sr25519"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: summary

# Javascript Object Signing and Encryption (JOSE)

**The aegisx.ext.jose module provides a high-level interface for working with
the JSON Object Signing and Encryption (JOSE) family of standards, including
JWS, JWE, JWK, and JWT. Built on top of AegisXâ€™s extensible cryptographic
framework, this module simplifies the secure handling of tokens and key
material across authentication and authorization workflows. It is designed
to be both flexible and standards-compliant, making it easy to integrate
JOSE-based protocols into modern Python applications.**

## Installation

Installation is as simple as running the following command:

```
pip install aegisx.ext.jose
```

## Standards

- RFC 7515 JSON Web Signature (JWS)
- RFC 7516 JSON Web Encryption (JWE)
- RFC 7517 JSON Web Key (JWK)
- RFC 7518 JSON Web Algorithms (JWA)
- RFC 7519 JSON Web Token (JWT)
- RFC 7520 Examples of Protecting Content Using JSON Object Signing and Encryption (JOSE)
- RFC 8037 CFRG Elliptic Curve Diffie-Hellman (ECDH) and Signatures in JSON Object Signing and Encryption (JOSE)

## TODO:

- RFC 7515 4.1.6: Certificate chain verification for `x5u`/`x5c`.
- RFC 7515 10.13.: Unicode Comparison Security Considerations
