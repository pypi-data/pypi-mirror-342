"""Offer test(s) of the tokenizer component of the parser.

The tests are copied from Tab Atkins' `parse-css` parser (commit c7859c41887409c533beed36956b7976ea0144b4), which itself is written to test the specification, of which Atkins are a co-author.
"""

from pytest import mark

from csspring.syntax.tokenizing import tokenize, normalize_input
from csspring.syntax.tokenizing import AtKeywordToken, BadStringToken, BadURLToken, CDOToken, CDCToken, ColonToken, CommaToken, CommentToken, DelimToken, DimensionToken, FunctionToken, HashToken, HashTokenType, IdentToken, OpenBraceToken, OpenBracketToken, OpenParenToken, NumberToken, NumberTokenSign, NumberTokenType, CloseBraceToken, CloseBracketToken, CloseParenToken, PercentageToken, SemicolonToken, StringToken, URLToken, WhitespaceToken

@mark.parametrize(('input', 'expected'), (
    ('(', (OpenParenToken(source='('),)),
    (')', (CloseParenToken(source=')'),)),
    ('[', (OpenBracketToken(source='['),)),
    (']', (CloseBracketToken(source=']'),)),
    (',', (CommaToken(source=','),)),
    (':', (ColonToken(source=':'),)),
    (';', (SemicolonToken(source=';'),)),
    (')[', (CloseParenToken(source=')'), OpenBracketToken(source='['))),
    ('[)', (OpenBracketToken(source='['), CloseParenToken(source=')'))),
    ('{}', (OpenBraceToken(source='{'), CloseBraceToken(source='}'))),
    (',,', (CommaToken(source=','), CommaToken(source=','))),
    ('~=', (DelimToken(value='~', source='~'), DelimToken(value='=', source='='))),
    ('|=', (DelimToken(value='|', source='|'), DelimToken(value='=', source='='))),
    ('^=', (DelimToken(value='^', source='^'), DelimToken(value='=', source='='))),
    ('$=', (DelimToken(value='$', source='$'), DelimToken(value='=', source='='))),
    ('*=', (DelimToken(value='*', source='*'), DelimToken(value='=', source='='))),
    ('||', (DelimToken(value='|', source='|'), DelimToken(value='|', source='|'))),
    ('|||', (DelimToken(value='|', source='|'), DelimToken(value='|', source='|'), DelimToken(value='|', source='|'))),
    ('<!--', (CDOToken(source='<!--'),)),
    ('<!---', (CDOToken(source='<!--'), DelimToken(value='-', source='-'))),
    ('-->', (CDCToken(source='-->'),)),
    ('^', (DelimToken(value='^', source='^'),)),
    ('*', (DelimToken(value='*', source='*'),)),
    ('%', (DelimToken(value='%', source='%'),)),
    ('~', (DelimToken(value='~', source='~'),)),
    ('&', (DelimToken(value='&', source='&'),)),
    ('|', (DelimToken(value='|', source='|'),)),
    ('\x7f', (DelimToken(value='\x7f', source='\x7f'),)),
    ('\x01', (DelimToken(value='\x01', source='\x01'),)),
    ('~-', (DelimToken(value='~', source='~'), DelimToken(value='-', source='-'))),
    ('^|', (DelimToken(value='^', source='^'), DelimToken(value='|', source='|'))),
    ('$~', (DelimToken(value='$', source='$'), DelimToken(value='~', source='~'))),
    ('*^', (DelimToken(value='*', source='*'), DelimToken(value='^', source='^'))),
    (' ' * 3, (WhitespaceToken(value=' '*3, source=' '*3),)),
    ('\n\rS', (WhitespaceToken(value='\n\n', source='\n\r'), IdentToken(value='S', source='S'))),
    (' ' * 3 + '*', (WhitespaceToken(value=' '*3, source=' '*3), DelimToken(value='*', source='*'))),
    ('\r\n\f\t2', (WhitespaceToken(value='\n\n\t', source='\r\n\f\t'), NumberToken(sign=None, type=NumberTokenType.integer, value=2, source='2'))),
    ('hel\\6Co', (IdentToken(value='hello', source='hel\\6Co'),)),
    ('\'spac\\65\r\ns\'', (StringToken(value='spaces', source='\'spac\\65\r\ns\''),)),
    ('spac\\65\r\ns', (IdentToken(value='spaces', source='spac\\65\r\ns'),)),
    ('spac\\65\n\rs', (IdentToken(value='space', source='spac\\65\n'), WhitespaceToken(value='\n', source='\r'), IdentToken(value='s', source='s'))),
    ('sp\\61\tc\\65\fs', (IdentToken(value='spaces', source='sp\\61\tc\\65\fs'),)),
    ('hel\\6c  o', (IdentToken(value='hell', source='hel\\6c '), WhitespaceToken(value=' ', source=' '), IdentToken(value='o', source='o'))),
    ('test\\\n', (IdentToken(value='test', source='test'), DelimToken(value='\\', source='\\'), WhitespaceToken(value='\n', source='\n'))),
    ('test\\D799', (IdentToken(value='test\uD799', source='test\\D799'),)),
    ('\\E000', (IdentToken(value='\uE000', source='\\E000'),)),
    ('te\\s\\t', (IdentToken(value='test', source='te\\s\\t'),)),
    ('spaces\\ in\\\tident', (IdentToken(value='spaces in\tident', source='spaces\\ in\\\tident'),)),
    ('\\.\\,\\:\\!', (IdentToken(value='.,:!', source='\\.\\,\\:\\!'),)),
    ('\\\r', (DelimToken(value='\\', source='\\'), WhitespaceToken(value='\n', source='\r'),)),
    ('\\\f', (DelimToken(value='\\', source='\\'), WhitespaceToken(value='\n', source='\f'),)),
    ('\\\r\n', (DelimToken(value='\\', source='\\'), WhitespaceToken(value='\n', source='\r\n'),)),
    ('null\\\0', (IdentToken(value='null\uFFFD', source='null\\\0'),)),
    ('null\\\0\0', (IdentToken(value='null\uFFFD\uFFFD', source='null\\\0\0'),)),
    ('null\\0', (IdentToken(value='null\uFFFD', source='null\\0'),)),
    ('null\\0000', (IdentToken(value='null\uFFFD', source='null\\0000'),)),
    ('large\\110000', (IdentToken(value='large\uFFFD', source='large\\110000'),)),
    ('large\\23456a', (IdentToken(value='large\uFFFD', source='large\\23456a'),)),
    ('surrogate\\D800', (IdentToken(value='surrogate\uFFFD', source='surrogate\\D800'),)),
    ('surrogate\\0DABC', (IdentToken(value='surrogate\uFFFD', source='surrogate\\0DABC'),)),
    ('\\00DFFFsurrogate', (IdentToken(value='\uFFFDsurrogate', source='\\00DFFFsurrogate'),)),
    ('\\10fFfF', (IdentToken(value='\U0010ffff', source='\\10fFfF'),)),
    ('\\10fFfF0', (IdentToken(value='\U0010ffff0', source='\\10fFfF0'),)),
    ('\\10000000', (IdentToken(value='\U0010000000', source='\\10000000'),)),
    ('eof\\', (IdentToken(value='eof\uFFFD', source='eof\\'),)),
    ('simple-ident', (IdentToken(value='simple-ident', source='simple-ident'),)),
    ('testing123', (IdentToken(value='testing123', source='testing123'),)),
    ('hello!', (IdentToken(value='hello', source='hello'), DelimToken(value='!', source='!'))),
    ('world\x05', (IdentToken(value='world', source='world'), DelimToken(value='\x05', source='\x05'))),
    ('_under score', (IdentToken(value='_under', source='_under'), WhitespaceToken(value=' ', source=' '), IdentToken(value='score', source='score'))),
    ('-_underscore', (IdentToken(value='-_underscore', source='-_underscore'),)),
    ('-text', (IdentToken(value='-text', source='-text'),)),
    ('-\\6d', (IdentToken(value='-m', source='-\\6d'),)),
    ('--abc', (IdentToken(value='--abc', source='--abc'),)),
    ('--', (IdentToken(value='--', source='--'),)),
    ('--11', (IdentToken(value='--11', source='--11'),)),
    ('---', (IdentToken(value='---', source='---'),)),
    ('\u2003', (DelimToken(value='\u2003', source='\u2003'),)),
    ('\u00A0', (DelimToken(value='\u00A0', source='\u00A0'),)),
    ('\u1234', (IdentToken(value='\u1234', source='\u1234'),)),
    ('\U00012345', (IdentToken(value='\U00012345', source='\U00012345'),)),
    ('\0', (IdentToken(value='\uFFFD', source='\0'),)),
    ('ab\0c', (IdentToken(value='ab\uFFFDc', source='ab\0c'),)),
    ('scale(2)', (FunctionToken(value='scale', source='scale('), NumberToken(sign=None, type=NumberTokenType.integer, value=2, source='2'), CloseParenToken(source=')'))),
    ('foo-bar\\ baz(', (FunctionToken(value='foo-bar baz', source='foo-bar\\ baz('),)),
    ('fun\\(ction(', (FunctionToken(value='fun(ction', source='fun\\(ction('),)),
    ('-foo(', (FunctionToken(value='-foo', source='-foo('),)),
    ('url("foo.gif"', (FunctionToken(value='url', source='url('), StringToken(value='foo.gif', source='"foo.gif"'))),
    ('foo(  \'bar.gif\'', (FunctionToken(value='foo', source='foo('), WhitespaceToken(value='  ', source='  '), StringToken(value='bar.gif', source='\'bar.gif\''))),
    ('url(  \'bar.gif\'', (FunctionToken(value='url', source='url( '), WhitespaceToken(value=' ', source=' '), StringToken(value='bar.gif', source='\'bar.gif\''))),
    ('@at-keyword', (AtKeywordToken(value='at-keyword', source='@at-keyword'),)),
    ('@testing123', (AtKeywordToken(value='testing123', source='@testing123'),)),
    ('@hello!', (AtKeywordToken(value='hello', source='@hello'), DelimToken(value='!', source='!'))),
    ('@-text', (AtKeywordToken(value='-text', source='@-text'),)),
    ('@--abc', (AtKeywordToken(value='--abc', source='@--abc'),)),
    ('@--', (AtKeywordToken(value='--', source='@--'),)),
    ('@--11', (AtKeywordToken(value='--11', source='@--11'),)),
    ('@---', (AtKeywordToken(value='---', source='@---'),)),
    ('@\\ ', (AtKeywordToken(value=' ', source='@\\ '),)),
    ('@-\\ ', (AtKeywordToken(value='- ', source='@-\\ '),)),
    ('@@', (DelimToken(value='@', source='@'), DelimToken(value='@', source='@'))),
    ('@2', (DelimToken(value='@', source='@'), NumberToken(sign=None, type=NumberTokenType.integer, value=2, source='2'))),
    ('@-1', (DelimToken(value='@', source='@'), NumberToken(sign=NumberTokenSign.minus, type=NumberTokenType.integer, value=-1, source='-1'))),
    ('url(foo.gif)', (URLToken(value='foo.gif', source='url(foo.gif)'),)),
    ('urL(https://example.com/cats.png)', (URLToken(value='https://example.com/cats.png', source='urL(https://example.com/cats.png)'),)),
    ('uRl(what-a.crazy^URL~this\\ is!)', (URLToken(value='what-a.crazy^URL~this is!', source='uRl(what-a.crazy^URL~this\\ is!)'),)),
    ('uRL(123#test)', (URLToken(value='123#test', source='uRL(123#test)'),)),
    ('Url(escapes\\ \\\"\\\'\\)\\()', (URLToken(value='escapes "\')(', source='Url(escapes\\ \\\"\\\'\\)\\()'),)),
    ('UrL(   whitespace   )', (URLToken(value='whitespace', source='UrL(   whitespace   )'),)),
    ('URl( whitespace-eof', (URLToken(value='whitespace-eof', source='URl( whitespace-eof'),)),
    ('URL(eof', (URLToken(value='eof', source='URL(eof'),)),
    ('url(not/*a*/comment)', (URLToken(value='not/*a*/comment', source='url(not/*a*/comment)'),)),
    ('urL()', (URLToken(value='', source='urL()'),)),
    ('uRl(white space),', (BadURLToken(source='uRl(white space)'), CommaToken(source=','))),
    ('Url(b(ad),', (BadURLToken(source='Url(b(ad)'), CommaToken(source=','))),
    ('uRl(ba\'d):', (BadURLToken(source='uRl(ba\'d)'), ColonToken(source=':'))),
    ('urL(b"ad):', (BadURLToken(source='urL(b"ad)'), ColonToken(source=':'))),
    ('uRl(b"ad):', (BadURLToken(source='uRl(b"ad)'), ColonToken(source=':'))),
    ('Url(b\\\rad):', (BadURLToken(source='Url(b\\\rad)'), ColonToken(source=':'))),
    ('url(b\\\nad):', (BadURLToken(source='url(b\\\nad)'), ColonToken(source=':'))),
    ('url(/*\'bad\')*/', (BadURLToken(source='url(/*\'bad\')'), DelimToken(value='*', source='*'), DelimToken(value='/', source='/'))),
    ('url(ba\'d\\))', (BadURLToken(source='url(ba\'d\\))'),)),
    ('url(ba\'d\\\\))', (BadURLToken(source='url(ba\'d\\\\)'), CloseParenToken(source=')'))),
    ('\'text\'', (StringToken(value='text', source='\'text\''),)),
    ('"text"', (StringToken(value='text', source='"text"'),)),
    ('\'testing, 123!\'', (StringToken(value='testing, 123!', source='\'testing, 123!\''),)),
    ('\'es\\\'ca\\"pe\'', (StringToken(value='es\'ca\"pe', source='\'es\\\'ca\\"pe\''),)),
    ('\'"quotes"\'', (StringToken(value='"quotes"', source='\'"quotes"\''),)),
    ('"\'quotes\'"', (StringToken(value='\'quotes\'', source='"\'quotes\'"'),)),
    ('"mismatch\'', (StringToken(value='mismatch\'', source='"mismatch\''),)),
    ('\'text\x05\t\x13\'', (StringToken(value='text\x05\t\x13', source='\'text\x05\t\x13\''),)),
    ('"end on eof', (StringToken(value='end on eof', source='"end on eof'),)),
    ('\'esca\\\nped\'', (StringToken(value='escaped', source='\'esca\\\nped\''),)),
    ('"esc\\\faped"', (StringToken(value='escaped', source='"esc\\\faped"'),)),
    ('\'new\\\rline\'', (StringToken(value='newline', source='\'new\\\rline\''),)),
    ('"new\\\r\nline"', (StringToken(value='newline', source='"new\\\r\nline"'),)),
    ('\'bad\nstring', (BadStringToken(source='\'bad'), WhitespaceToken(value='\n', source='\n'), IdentToken(value='string', source='string'))),
    ('\'bad\rstring', (BadStringToken(source='\'bad'), WhitespaceToken(value='\n', source='\r'), IdentToken(value='string', source='string'))),
    ('\'bad\r\nstring', (BadStringToken(source='\'bad'), WhitespaceToken(value='\n', source='\r\n'), IdentToken(value='string', source='string'))),
    ('\'bad\fstring', (BadStringToken(source='\'bad'), WhitespaceToken(value='\n', source='\f'), IdentToken(value='string', source='string'))),
    ('\'\0\'', (StringToken(value='\uFFFD', source='\'\0\''),)),
    ('\'hel\0lo\'', (StringToken(value='hel\uFFFDlo', source='\'hel\0lo\''),)),
    ('\'h\\65l\0lo\'', (StringToken(value='hel\uFFFDlo', source='\'h\\65l\0lo\''),)),
    ('#id-selector', (HashToken(type=HashTokenType.id, value='id-selector', source='#id-selector'),)),
    ('#FF7700', (HashToken(type=HashTokenType.id, value='FF7700', source='#FF7700'),)),
    ('#3377FF', (HashToken(value='3377FF', source='#3377FF'),)),
    ('#\\ ', (HashToken(type=HashTokenType.id, value=' ', source='#\\ '),)),
    ('# ', (DelimToken(value='#', source='#'), WhitespaceToken(value=' ', source=' '))),
    ('#\\\n', (DelimToken(value='#', source='#'), DelimToken(value='\\', source='\\'), WhitespaceToken(value='\n', source='\n'))),
    ('#\\\r\n', (DelimToken(value='#', source='#'), DelimToken(value='\\', source='\\'), WhitespaceToken(value='\n', source='\r\n'))),
    ('#!', (DelimToken(value='#', source='#'), DelimToken(value='!', source='!'))),
    ('10', (NumberToken(sign=None, type=NumberTokenType.integer, value=10, source='10'),)),
    ('12.0', (NumberToken(sign=None, type=NumberTokenType.number, value=12.0, source='12.0'),)),
    ('+45.6', (NumberToken(sign=NumberTokenSign.plus, type=NumberTokenType.number, value=45.6, source='+45.6'),)),
    ('-7', (NumberToken(sign=NumberTokenSign.minus, type=NumberTokenType.integer, value=-7, source='-7'),)),
    ('010', (NumberToken(sign=None, type=NumberTokenType.integer, value=10, source='010'),)),
    ('10e0', (NumberToken(sign=None, type=NumberTokenType.number, value=10, source='10e0'),)),
    ('12e3', (NumberToken(sign=None, type=NumberTokenType.number, value=12000, source='12e3'),)),
    ('3e+1', (NumberToken(sign=None, type=NumberTokenType.number, value=30, source='3e+1'),)),
    ('12E-1', (NumberToken(sign=None, type=NumberTokenType.number, value=1.2, source='12E-1'),)),
    ('.7', (NumberToken(sign=None, type=NumberTokenType.number, value=.7, source='.7'),)),
    ('-.3', (NumberToken(sign=NumberTokenSign.minus, type=NumberTokenType.number, value=-.3, source='-.3'),)),
    ('+637.54e-2', (NumberToken(sign=NumberTokenSign.plus, type=NumberTokenType.number, value=6.3754, source='+637.54e-2'),)),
    ('-12.34E+2', (NumberToken(sign=NumberTokenSign.minus, type=NumberTokenType.number, value=-1234, source='-12.34E+2'),)),
    ('+ 5', (DelimToken(value='+', source='+'), WhitespaceToken(value=' ', source=' '), NumberToken(sign=None, type=NumberTokenType.integer, value=5, source='5'))),
    ('-+12', (DelimToken(value='-', source='-'), NumberToken(sign=NumberTokenSign.plus, type=NumberTokenType.integer, value=12, source='+12'))),
    ('+-21', (DelimToken(value='+', source='+'), NumberToken(sign=NumberTokenSign.minus, type=NumberTokenType.integer, value=-21, source='-21'))),
    ('++22', (DelimToken(value='+', source='+'), NumberToken(sign=NumberTokenSign.plus, type=NumberTokenType.integer, value=22, source='+22'))),
    ('13.', (NumberToken(sign=None, type=NumberTokenType.integer, value=13, source='13'), DelimToken(value='.', source='.'))),
    ('1.e2', (NumberToken(sign=None, type=NumberTokenType.integer, value=1, source='1'), DelimToken(value='.', source='.'), IdentToken(value='e2', source='e2'))),
    ('2e3.5', (NumberToken(sign=None, type=NumberTokenType.number, value=2000, source='2e3'), NumberToken(sign=None, type=NumberTokenType.number, value=.5, source='.5'))),
    ('2e3.', (NumberToken(sign=None, type=NumberTokenType.number, value=2000, source='2e3'), DelimToken(value='.', source='.'))),
    ('1000000000000000000000000', (NumberToken(sign=None, type=NumberTokenType.integer, value=10**24, source='1000000000000000000000000'),)),
    ('10px', (DimensionToken(sign=None, type=NumberTokenType.integer, unit='px', value=10, source='10px'),)),
    ('12.0em', (DimensionToken(sign=None, type=NumberTokenType.number, unit='em', value=12.0, source='12.0em'),)),
    ('-12.0em', (DimensionToken(sign=NumberTokenSign.minus, type=NumberTokenType.number, unit='em', value=-12.0, source='-12.0em'),)),
    ('+45.6__qem', (DimensionToken(sign=NumberTokenSign.plus, type=NumberTokenType.number, unit='__qem', value=45.6, source='+45.6__qem'),)),
    ('5e', (DimensionToken(sign=None, type=NumberTokenType.integer, unit='e', value=5, source='5e'),)),
    ('5px-2px', (DimensionToken(sign=None, type=NumberTokenType.integer, unit='px-2px', value=5, source='5px-2px'),)),
    ('5e-', (DimensionToken(sign=None, type=NumberTokenType.integer, unit='e-', value=5, source='5e-'),)),
    ('5\\ ', (DimensionToken(sign=None, type=NumberTokenType.integer, unit=' ', value=5, source='5\\ '),)),
    ('40\\70\\78', (DimensionToken(sign=None, type=NumberTokenType.integer, unit='px', value=40, source='40\\70\\78'),)),
    ('4e3e2', (DimensionToken(sign=None, type=NumberTokenType.number, unit='e2', value=4000, source='4e3e2'),)),
    ('0x10px', (DimensionToken(sign=None, type=NumberTokenType.integer, unit='x10px', value=0, source='0x10px'),)),
    ('4unit ', (DimensionToken(sign=None, type=NumberTokenType.integer, unit='unit', value=4, source='4unit'), WhitespaceToken(value=' ', source=' '))),
    ('5e+', (DimensionToken(sign=None, type=NumberTokenType.integer, unit='e', value=5, source='5e'), DelimToken(value='+', source='+'))),
    ('2e.5', (DimensionToken(sign=None, type=NumberTokenType.integer, unit='e', value=2, source='2e'), NumberToken(sign=None, type=NumberTokenType.number, value=.5, source='.5'))),
    ('2e+.5', (DimensionToken(sign=None, type=NumberTokenType.integer, unit='e', value=2, source='2e'), NumberToken(sign=NumberTokenSign.plus, type=NumberTokenType.number, value=.5, source='+.5'))),
    ('10%', (PercentageToken(sign=None, value=10, source='10%'),)),
    ('+12.0%', (PercentageToken(sign=NumberTokenSign.plus, value=12.0, source='+12.0%'),)),
    ('-48.99%', (PercentageToken(sign=NumberTokenSign.minus, value=-48.99, source='-48.99%'),)),
    ('6e-1%', (PercentageToken(sign=None, value=0.6, source='6e-1%'),)),
    ('5%%', (PercentageToken(sign=None, value=5, source='5%'), DelimToken(value='%', source='%'))),
    ('u+012345-123456', (IdentToken(value='u', source='u'), NumberToken(sign=NumberTokenSign.plus, type=NumberTokenType.integer, value=12345, source='+012345'), NumberToken(sign=NumberTokenSign.minus, type=NumberTokenType.integer, value=-123456, source='-123456'))),
    ('U+1234-2345', (IdentToken(value='U', source='U'), NumberToken(sign=NumberTokenSign.plus, type=NumberTokenType.integer, value=1234, source='+1234'), NumberToken(sign=NumberTokenSign.minus, type=NumberTokenType.integer, value=-2345, source='-2345'))),
    ('u+222-111', (IdentToken(value='u', source='u'), NumberToken(sign=NumberTokenSign.plus, type=NumberTokenType.integer, value=222, source='+222'), NumberToken(sign=NumberTokenSign.minus, type=NumberTokenType.integer, value=-111, source='-111'))),
    ('U+CafE-d00D', (IdentToken(value='U', source='U'), DelimToken(value='+', source='+'), IdentToken(value='CafE-d00D', source='CafE-d00D'))),
    ('U+2??', (IdentToken(value='U', source='U'), NumberToken(sign=NumberTokenSign.plus, type=NumberTokenType.integer, value=2, source='+2'), DelimToken(value='?', source='?'), DelimToken(value='?', source='?'))),
    ('U+ab12??', (IdentToken(value='U', source='U'), DelimToken(value='+', source='+'), IdentToken(value='ab12', source='ab12'), DelimToken(value='?', source='?'), DelimToken(value='?', source='?'))),
    ('u+??????', (IdentToken(value='u', source='u'), DelimToken(value='+', source='+'), DelimToken(value='?', source='?'), DelimToken(value='?', source='?'), DelimToken(value='?', source='?'), DelimToken(value='?', source='?'), DelimToken(value='?', source='?'), DelimToken(value='?', source='?'))),
    ('u+??', (IdentToken(value='u', source='u'), DelimToken(value='+', source='+'), DelimToken(value='?', source='?'), DelimToken(value='?', source='?'))),
    ('u+222+111', (IdentToken(value='u', source='u'), NumberToken(sign=NumberTokenSign.plus, type=NumberTokenType.integer, value=222, source='+222'), NumberToken(sign=NumberTokenSign.plus, type=NumberTokenType.integer, value=111, source='+111'))),
    ('u+12345678', (IdentToken(value='u', source='u'), NumberToken(sign=NumberTokenSign.plus, type=NumberTokenType.integer, value=12345678, source='+12345678'))),
    ('u+123-12345678', (IdentToken(value='u', source='u'), NumberToken(sign=NumberTokenSign.plus, type=NumberTokenType.integer, value=123, source='+123'), NumberToken(sign=NumberTokenSign.minus, type=NumberTokenType.integer, value=-12345678, source='-12345678'))),
    ('u+cake', (IdentToken(value='u', source='u'), DelimToken(value='+', source='+'), IdentToken(value='cake', source='cake'))),
    ('u+1234-gggg', (IdentToken(value='u', source='u'), DimensionToken(sign=NumberTokenSign.plus, type=NumberTokenType.integer, unit='-gggg', value=1234, source='+1234-gggg'))),
    ('U+ab12???', (IdentToken(value='U', source='U'), DelimToken(value='+', source='+'), IdentToken(value='ab12', source='ab12'), DelimToken(value='?', source='?'), DelimToken(value='?', source='?'), DelimToken(value='?', source='?'))),
    ('u+a1?-123', (IdentToken(value='u', source='u'), DelimToken(value='+', source='+'), IdentToken(value='a1', source='a1'), DelimToken(value='?', source='?'), NumberToken(sign=NumberTokenSign.minus, type=NumberTokenType.integer, value=-123, source='-123'))),
    ('u+1??4', (IdentToken(value='u', source='u'), NumberToken(sign=NumberTokenSign.plus, type=NumberTokenType.integer, value=1, source='+1'), DelimToken(value='?', source='?'), DelimToken(value='?', source='?'), NumberToken(sign=None, type=NumberTokenType.integer, value=4, source='4'))),
    ('u+z', (IdentToken(value='u', source='u'), DelimToken(value='+', source='+'), IdentToken(value='z', source='z'))),
    ('u+', (IdentToken(value='u', source='u'), DelimToken(value='+', source='+'))),
    ('u+-543', (IdentToken(value='u', source='u'), DelimToken(value='+', source='+'), NumberToken(sign=NumberTokenSign.minus, type=NumberTokenType.integer, value=-543, source='-543'))),
    ('/*comment*/a', (CommentToken(value='comment', source='/*comment*/'), IdentToken(value='a', source='a'))),
    ('/**\\2f**//', (CommentToken(value='*\\2f*', source='/**\\2f**/'), DelimToken(value='/', source='/'))),
    ('/**y*a*y**/ ', (CommentToken(value='*y*a*y*', source='/**y*a*y**/'), WhitespaceToken(value=' ', source=' '))),
    (',/* \n :) \n */)', (CommaToken(source=','), CommentToken(value=' \n :) \n ', source='/* \n :) \n */'), CloseParenToken(source=')'))),
    (':/*/*/', (ColonToken(source=':'), CommentToken(value='/', source='/*/*/'))),
    ('/**/*', (CommentToken(value='', source='/**/'), DelimToken(value='*', source='*'))),
    (';/******', (SemicolonToken(source=';'), CommentToken(value='*****', source='/******'))),
    ))
def test_tokenization(input, expected):
    assert tuple(tokenize(normalize_input(input))) == expected

@mark.parametrize('input', (input for input, _ in test_tokenization.pytestmark[0].args[1]))
def test_tokenization_preserves_input(input):
    assert ''.join(token.source for token in tokenize(normalize_input(input))) == input
