[build-system]
requires = ["poetry-core==2.1.2"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
langchain-ocr = "langchain_ocr_lib.main:main"

[tool.poetry]
name = "langchain-ocr-lib"
version = "0.3.3"
description = "Modular, vision-LLM-powered chain to convert image and PDF documents into clean Markdown."
authors = ["Andreas Klos <aklos@outlook.de>"]
readme = "README.md"
packages = [{ include = "langchain_ocr_lib", from = "src" }]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.11"
deprecated = "^1.2.14"
pyyaml = "^6.0.2"
openai = "^1.42.0"
pillow = "^11.0.0"
langchain-ollama = "^0.2.0"
pytest-asyncio = "^0.25.0"
langchain-community = "^0.3.19"
langchain-openai = "^0.3.8"
langfuse = "^2.59.7"
pycountry = "^24.6.1"
pdf2image = "^1.17.0"
inject = "^5.2.1"

[tool.poetry.group.dev.dependencies]
debugpy = "^1.8.1"
pytest = "^8.2.1"
coverage = "^7.5.4"
flake8 = "^7.1.0"
flake8-black = "^0.3.6"
flake8-pyproject = "^1.2.3"
flake8-quotes = "^3.4.0"
flake8-return = "^1.2.0"
flake8-annotations-complexity = "^0.0.8"
flake8-bandit = "^4.1.1"
flake8-bugbear = "^24.8.19"
flake8-builtins = "^2.5.0"
flake8-comprehensions = "^3.15.0"
flake8-eradicate = "^1.5.0"
flake8-expression-complexity = "^0.0.11"
flake8-pytest-style = "^2.0.0"
pep8-naming = "^0.14.1"
flake8-eol = "^0.0.8"
flake8-exceptions = "^0.0.1a0"
flake8-simplify = "^0.21.0"
flake8-wot = "^0.2.0"
flake8-function-order = "^0.0.5"
flake8-tidy-imports = "^4.10.0"
black = "^23.9.1"
# flake8-logging-format = "^2024.24.12"
flake8-docstrings = "^1.7.0"


[tool.flake8]
exclude= [".eggs", ".git", ".hg", ".mypy_cache", ".tox", ".venv", ".devcontainer", "venv", "_build", "buck-out", "build", "dist", "**/__init__.py", "src/langchain_ocr_lib/prompt_templates/ocr_prompt.py", "tests"]
statistics = true
show-source = false
max-complexity = 8
max-annotations-complexity = 3
docstring-convention = 'numpy'
max-line-length = 120
ignore = ["E203", "W503", "E704"]
inline-quotes = '"'
docstring-quotes = '"""'
multiline-quotes = '"""'
dictionaries = ["en_US", "python", "technical", "pandas"]
ban-relative-imports = true
per-file-ignores = """src/langchain_ocr_lib/di_binding_keys/binding_keys.py: D101"""


[tool.black]
line-length = 120
exclude = """
/(
     .eggs
    | .git
    | .hg
    | .mypy_cache
    | .nox
    | .pants.d
    | .tox
    | .venv
    | _build
    | buck-out
    | build
    | dist
    | node_modules
    | venv
)/
"""

[tool.isort]
profile = "black"
skip = ['.eggs', '.git', '.hg', '.mypy_cache', '.nox', '.pants.d', '.tox', '.venv', '_build', 'buck-out', 'build', 'dist', 'node_modules', 'venv']
skip_gitignore = true
known_local_folder = ["langchain_ocr_lib"]

[tool.pylint]
max-line-length = 120

[tool.pytest.ini_options]
log_cli = 1
log_cli_level = "DEBUG"
testpaths = "tests"
pythonpath = "src"
