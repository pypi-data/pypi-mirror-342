# Generated by generate_sdk_wrappers.py. DO NOT EDIT

from abc import ABCMeta
from dataclasses import dataclass, field
from typing import Any, Optional
from uuid import uuid4

from luminarycloud.tables import RectilinearTable, _param_name_to_table_type
from google.protobuf.message import Message as _Message

from luminarycloud.tables import RectilinearTable
from luminarycloud.types import Vector3
from luminarycloud.types.adfloat import _to_ad_proto, _from_ad_proto
from luminarycloud._proto.client import simulation_pb2 as clientpb
from luminarycloud._proto.client.entity_pb2 import EntityIdentifier
import luminarycloud.params.enum._enum_wrappers as enum

from luminarycloud.params.param_wrappers._lib import ParamGroupWrapper, CodeRepr, create_unique_id

from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.komega.init_farfield_values_komega_ import (
    InitFarfieldValuesKomega,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.komega.init_farfield_values_komega_ import *
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.spalart_allmaras.init_farfield_values_sa_ import (
    InitFarfieldValuesSa,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.spalart_allmaras.init_farfield_values_sa_ import *
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.spalart_allmaras.init_sa_variable_ import (
    InitSaVariable,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.spalart_allmaras.init_sa_variable_ import *
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.komega.init_turbulent_viscosity_and_intensity_komega_ import (
    InitTurbulentViscosityAndIntensityKomega,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.komega.init_turbulent_viscosity_and_intensity_komega_ import *
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.komega.init_turbulent_viscosity_ratio_and_intensity_komega_ import (
    InitTurbulentViscosityRatioAndIntensityKomega,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.komega.init_turbulent_viscosity_ratio_and_intensity_komega_ import *
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.spalart_allmaras.init_turbulent_viscosity_ratio_sa_ import (
    InitTurbulentViscosityRatioSa,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.spalart_allmaras.init_turbulent_viscosity_ratio_sa_ import *
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.spalart_allmaras.init_turbulent_viscosity_sa_ import (
    InitTurbulentViscositySa,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.spalart_allmaras.init_turbulent_viscosity_sa_ import *
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.komega_initialization_ import (
    KomegaInitialization,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.komega_initialization_ import *
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.spalart_allmaras_initialization_ import (
    SpalartAllmarasInitialization,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.initialization.turbulence.spalart_allmaras_initialization_ import *


@dataclass(kw_only=True)
class TurbulenceInitialization(CodeRepr):
    """"""

    spalart_allmaras: SpalartAllmarasInitialization = field(
        default_factory=InitTurbulentViscosityRatioSa
    )
    "Type of initial condition for the turbulent variables."
    komega: KomegaInitialization = field(
        default_factory=InitTurbulentViscosityRatioAndIntensityKomega
    )
    "Type of initial condition for the turbulent variables."
