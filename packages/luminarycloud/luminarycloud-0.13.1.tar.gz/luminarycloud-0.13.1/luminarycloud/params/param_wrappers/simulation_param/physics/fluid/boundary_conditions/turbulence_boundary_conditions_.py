# Generated by generate_sdk_wrappers.py. DO NOT EDIT

from abc import ABCMeta
from dataclasses import dataclass, field
from typing import Any, Optional
from uuid import uuid4

from luminarycloud.tables import RectilinearTable, _param_name_to_table_type
from google.protobuf.message import Message as _Message

from luminarycloud.tables import RectilinearTable
from luminarycloud.types import Vector3
from luminarycloud.types.adfloat import _to_ad_proto, _from_ad_proto
from luminarycloud._proto.client import simulation_pb2 as clientpb
from luminarycloud._proto.client.entity_pb2 import EntityIdentifier
import luminarycloud.params.enum._enum_wrappers as enum

from luminarycloud.params.param_wrappers._lib import ParamGroupWrapper, CodeRepr, create_unique_id

from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.boundary_conditions.turbulence.komega.bc_komega_variables_ import (
    BcKomegaVariables,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.boundary_conditions.turbulence.komega.bc_komega_variables_ import *
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.boundary_conditions.turbulence.spalart_allmaras.bc_sa_variable_ import (
    BcSaVariable,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.boundary_conditions.turbulence.spalart_allmaras.bc_sa_variable_ import *
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.boundary_conditions.turbulence.komega.bc_turbulent_viscosity_and_intensity_komega_ import (
    BcTurbulentViscosityAndIntensityKomega,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.boundary_conditions.turbulence.komega.bc_turbulent_viscosity_and_intensity_komega_ import *
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.boundary_conditions.turbulence.komega.bc_turbulent_viscosity_ratio_and_intensity_komega_ import (
    BcTurbulentViscosityRatioAndIntensityKomega,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.boundary_conditions.turbulence.komega.bc_turbulent_viscosity_ratio_and_intensity_komega_ import *
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.boundary_conditions.turbulence.spalart_allmaras.bc_turbulent_viscosity_ratio_sa_ import (
    BcTurbulentViscosityRatioSa,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.boundary_conditions.turbulence.spalart_allmaras.bc_turbulent_viscosity_ratio_sa_ import *
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.boundary_conditions.turbulence.spalart_allmaras.bc_turbulent_viscosity_sa_ import (
    BcTurbulentViscositySa,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.boundary_conditions.turbulence.spalart_allmaras.bc_turbulent_viscosity_sa_ import *
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.boundary_conditions.turbulence.komega_boundary_conditions_ import (
    KomegaBoundaryConditions,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.boundary_conditions.turbulence.komega_boundary_conditions_ import *
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.boundary_conditions.turbulence.spalart_allmaras_boundary_conditions_ import (
    SpalartAllmarasBoundaryConditions,
)
from luminarycloud.params.param_wrappers.simulation_param.physics.fluid.boundary_conditions.turbulence.spalart_allmaras_boundary_conditions_ import *


@dataclass(kw_only=True)
class TurbulenceBoundaryConditions(CodeRepr):
    """Turbulence boundary conditions."""

    spalart_allmaras: SpalartAllmarasBoundaryConditions = field(
        default_factory=BcTurbulentViscosityRatioSa
    )
    "Condition applied to the Spalart-Allmaras turbulence equation at the boundary."
    komega: KomegaBoundaryConditions = field(
        default_factory=BcTurbulentViscosityRatioAndIntensityKomega
    )
    "Condition applied to the k-Ï‰ turbulence variables at the boundary."
