name: release

on:
  push:
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'  # update, someday

      - uses: WIPACrepo/wipac-dev-next-version-action@v1.0
        id: next-version
        with:
          force-patch-if-no-commit-token: true
          ignore-paths: |
            resources/foo/**
            assets/**
            .github/**

      - uses: WIPACrepo/wipac-dev-py-build-action@v1.0
        if: steps.next-version.outputs.version != ''
        with:
          version: ${{ steps.next-version.outputs.version }}

      - name: Create GitHub Release via API (may be replaced by a GHA package)
        if: steps.next-version.outputs.version != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.next-version.outputs.version }}
        run: |
          set -euo pipefail
          echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
          
          TAG="v${VERSION}"
          
          PAYLOAD=$(jq -n \
              --arg tag_name "$TAG" \
              --arg target_commitish "${{ github.sha }}" \
              --arg name "$TAG" \
              '{ 
                tag_name: $tag_name, 
                target_commitish: $target_commitish, 
                name: $name, 
                draft: false, 
                prerelease: false, 
                generate_release_notes: true 
              }')
          
          curl -sSf -X POST \
              -H "Authorization: Bearer $GH_TOKEN" \
              -H "Content-Type: application/json" \
              -d "$PAYLOAD" \
              "https://api.github.com/repos/${{ github.repository }}/releases"

      - name: Upload to PyPI (so simple, no GHA package needed)
        if: steps.next-version.outputs.version != ''
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          set -euo pipefail
          echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
          pip install twine
          twine upload dist/*
