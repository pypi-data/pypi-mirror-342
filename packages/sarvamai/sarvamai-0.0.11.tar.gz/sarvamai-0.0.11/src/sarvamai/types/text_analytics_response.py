# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .qna_response import QnaResponse
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class TextAnalyticsResponse(UniversalBaseModel):
    request_id: typing.Optional[str] = None
    answers: typing.Optional[typing.List[QnaResponse]] = pydantic.Field(default=None)
    """
    List of answers derived from the text analysis. Each answer corresponds to a question from the original request. This field will be null if no valid answers could be generated.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
