# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class SarvamModelApiBodyEndpointsApiTextAnalytics(UniversalBaseModel):
    text: str = pydantic.Field()
    """
    The text content to be analyzed. This should be a non-empty string containing the full text for analysis.
    """

    questions: str = pydantic.Field()
    """
    List of questions to be answered based on the call content. Each question should be a valid JSON object with the following structure: ```{id: string, text: string, description: string (optional), type: string, properties: object}.```The `type` field must be one of: `boolean`, `enum`, `short answer`, `long answer`, or `number`. For `enum` type questions, include an 'options' list in the properties.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
