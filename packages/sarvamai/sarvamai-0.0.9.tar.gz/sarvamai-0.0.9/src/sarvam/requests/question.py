# This file was auto-generated by Fern from our API Definition.

import typing_extensions
import typing_extensions
from ..types.question_type import QuestionType
import typing


class QuestionParams(typing_extensions.TypedDict):
    id: str
    """
    Unique identifier for the question. This should be a short, distinct string or number.
    """

    text: str
    """
    The actual text of the question to be answered based on the call content.
    """

    description: typing_extensions.NotRequired[str]
    """
    Optional description or context for the question. Use this to provide additional information to the LLM for better reasoning.
    """

    type: QuestionType
    """
    The type of question, which determines how it should be answered and processed. Valid types are:
    - boolean: A yes/no question
    - enum: A question with predefined answer options
    - short answer: A question requiring a brief text response
    - long answer: A question requiring a detailed text response
    - number: A question expecting a numeric answer
    """

    properties: typing_extensions.NotRequired[typing.Dict[str, typing.Optional[typing.Any]]]
    """
    Additional properties specific to the question type. For 'enum' types, this should include an 'options' list. 
    """
