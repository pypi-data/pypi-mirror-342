"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2021 The ChromiumOS Authors
Use of this source code is governed by a BSD-style license that can be
found in the LICENSE file.
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class NewChromeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOGIN_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    login: builtins.bool
    """If login is false, a session starts without logging in."""
    key: builtins.str
    """If non-empty, the key is used to load sign-in profile extension.
    Namely, to show the login screen, but without logging in, login would
    be set to false, and the key would be supplied with the
    signinProfileTestExtensionManifestKey.
    """
    def __init__(
        self,
        *,
        login: builtins.bool = ...,
        key: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["key", b"key", "login", b"login"]) -> None: ...

global___NewChromeRequest = NewChromeRequest

@typing.final
class PowerMenuPresentResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IS_MENU_PRESENT_FIELD_NUMBER: builtins.int
    is_menu_present: builtins.bool
    def __init__(
        self,
        *,
        is_menu_present: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["is_menu_present", b"is_menu_present"]) -> None: ...

global___PowerMenuPresentResponse = PowerMenuPresentResponse

@typing.final
class PowerMenuItemResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MENU_ITEMS_FIELD_NUMBER: builtins.int
    @property
    def menu_items(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        menu_items: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["menu_items", b"menu_items"]) -> None: ...

global___PowerMenuItemResponse = PowerMenuItemResponse
