# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from tast.cros.services.cros.wifi import shill_service_pb2 as tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in tast/cros/services/cros/wifi/shill_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ShillServiceStub(object):
    """ShillService allows remote WiFi setup through shill dbus interface.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitDUT = channel.unary_unary(
                '/tast.cros.wifi.ShillService/InitDUT',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.InitDUTRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ReinitTestState = channel.unary_unary(
                '/tast.cros.wifi.ShillService/ReinitTestState',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.TearDown = channel.unary_unary(
                '/tast.cros.wifi.ShillService/TearDown',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.Connect = channel.unary_unary(
                '/tast.cros.wifi.ShillService/Connect',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ConnectRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ConnectResponse.FromString,
                _registered_method=True)
        self.Disconnect = channel.unary_unary(
                '/tast.cros.wifi.ShillService/Disconnect',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DisconnectRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.DeleteEntriesForSSID = channel.unary_unary(
                '/tast.cros.wifi.ShillService/DeleteEntriesForSSID',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DeleteEntriesForSSIDRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.QueryService = channel.unary_unary(
                '/tast.cros.wifi.ShillService/QueryService',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.QueryServiceRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.QueryServiceResponse.FromString,
                _registered_method=True)
        self.GetInterface = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetInterface',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetInterfaceResponse.FromString,
                _registered_method=True)
        self.GetDeviceInfo = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetDeviceInfo',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetDeviceInfoResponse.FromString,
                _registered_method=True)
        self.GetIPv4Addrs = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetIPv4Addrs',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetIPv4AddrsRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetIPv4AddrsResponse.FromString,
                _registered_method=True)
        self.GetHardwareAddr = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetHardwareAddr',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetHardwareAddrRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetHardwareAddrResponse.FromString,
                _registered_method=True)
        self.ExpectWifiFrequencies = channel.unary_unary(
                '/tast.cros.wifi.ShillService/ExpectWifiFrequencies',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ExpectWifiFrequenciesRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetBgscanConfig = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetBgscanConfig',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetBgscanConfigResponse.FromString,
                _registered_method=True)
        self.SetBgscanConfig = channel.unary_unary(
                '/tast.cros.wifi.ShillService/SetBgscanConfig',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetBgscanConfigRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.AssureDisconnect = channel.unary_unary(
                '/tast.cros.wifi.ShillService/AssureDisconnect',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.AssureDisconnectRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.DisableEnableTest = channel.unary_unary(
                '/tast.cros.wifi.ShillService/DisableEnableTest',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DisableEnableTestRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.EthernetFailoverToWifiTest = channel.unary_unary(
                '/tast.cros.wifi.ShillService/EthernetFailoverToWifiTest',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.EthernetFailoverToWifiTestRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.RequestScan = channel.unary_unary(
                '/tast.cros.wifi.ShillService/RequestScan',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.RequestScans = channel.unary_unary(
                '/tast.cros.wifi.ShillService/RequestScans',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.RequestScansRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetMACRandomize = channel.unary_unary(
                '/tast.cros.wifi.ShillService/SetMACRandomize',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetMACRandomizeRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetMACRandomizeResponse.FromString,
                _registered_method=True)
        self.WaitScanIdle = channel.unary_unary(
                '/tast.cros.wifi.ShillService/WaitScanIdle',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ConfigureAndAssertAutoConnect = channel.unary_unary(
                '/tast.cros.wifi.ShillService/ConfigureAndAssertAutoConnect',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ConfigureAndAssertAutoConnectRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ConfigureAndAssertAutoConnectResponse.FromString,
                _registered_method=True)
        self.GetCurrentTime = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetCurrentTime',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetCurrentTimeResponse.FromString,
                _registered_method=True)
        self.SelectedService = channel.unary_unary(
                '/tast.cros.wifi.ShillService/SelectedService',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SelectedServiceResponse.FromString,
                _registered_method=True)
        self.GetServicePath = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetServicePath',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ServicePathRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ServicePathResponse.FromString,
                _registered_method=True)
        self.ExpectShillProperty = channel.unary_stream(
                '/tast.cros.wifi.ShillService/ExpectShillProperty',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ExpectShillPropertyRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ExpectShillPropertyResponse.FromString,
                _registered_method=True)
        self.ProfileBasicTest = channel.unary_unary(
                '/tast.cros.wifi.ShillService/ProfileBasicTest',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ProfileBasicTestRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.DiscoverBSSID = channel.unary_unary(
                '/tast.cros.wifi.ShillService/DiscoverBSSID',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DiscoverBSSIDRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DiscoverBSSIDResponse.FromString,
                _registered_method=True)
        self.RequestRoam = channel.unary_unary(
                '/tast.cros.wifi.ShillService/RequestRoam',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.RequestRoamRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetDHCPProperties = channel.unary_unary(
                '/tast.cros.wifi.ShillService/SetDHCPProperties',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetDHCPPropertiesRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetDHCPPropertiesResponse.FromString,
                _registered_method=True)
        self.Reassociate = channel.unary_unary(
                '/tast.cros.wifi.ShillService/Reassociate',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ReassociateRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetWifiEnabled = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetWifiEnabled',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetWifiEnabledResponse.FromString,
                _registered_method=True)
        self.SetWifiEnabled = channel.unary_unary(
                '/tast.cros.wifi.ShillService/SetWifiEnabled',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetWifiEnabledRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.WaitForBSSID = channel.unary_unary(
                '/tast.cros.wifi.ShillService/WaitForBSSID',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.WaitForBSSIDRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.MACRandomizeSupport = channel.unary_unary(
                '/tast.cros.wifi.ShillService/MACRandomizeSupport',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.MACRandomizeSupportResponse.FromString,
                _registered_method=True)
        self.GetMACRandomize = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetMACRandomize',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetMACRandomizeResponse.FromString,
                _registered_method=True)
        self.EAPAuthSkipped = channel.unary_stream(
                '/tast.cros.wifi.ShillService/EAPAuthSkipped',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.EAPAuthSkippedResponse.FromString,
                _registered_method=True)
        self.SuspendAssertConnect = channel.unary_unary(
                '/tast.cros.wifi.ShillService/SuspendAssertConnect',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SuspendAssertConnectRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SuspendAssertConnectResponse.FromString,
                _registered_method=True)
        self.Suspend = channel.unary_unary(
                '/tast.cros.wifi.ShillService/Suspend',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SuspendRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SuspendResponse.FromString,
                _registered_method=True)
        self.GetGlobalFTProperty = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetGlobalFTProperty',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetGlobalFTPropertyResponse.FromString,
                _registered_method=True)
        self.SetGlobalFTProperty = channel.unary_unary(
                '/tast.cros.wifi.ShillService/SetGlobalFTProperty',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetGlobalFTPropertyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetRequestScanTypeProperty = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetRequestScanTypeProperty',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetRequestScanTypePropertyResponse.FromString,
                _registered_method=True)
        self.SetRequestScanTypeProperty = channel.unary_unary(
                '/tast.cros.wifi.ShillService/SetRequestScanTypeProperty',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetRequestScanTypePropertyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetScanAllowRoamProperty = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetScanAllowRoamProperty',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetScanAllowRoamPropertyResponse.FromString,
                _registered_method=True)
        self.SetScanAllowRoamProperty = channel.unary_unary(
                '/tast.cros.wifi.ShillService/SetScanAllowRoamProperty',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetScanAllowRoamPropertyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.DisconnectReason = channel.unary_stream(
                '/tast.cros.wifi.ShillService/DisconnectReason',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DisconnectReasonResponse.FromString,
                _registered_method=True)
        self.FlushBSS = channel.unary_unary(
                '/tast.cros.wifi.ShillService/FlushBSS',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.FlushBSSRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ResetTest = channel.unary_unary(
                '/tast.cros.wifi.ShillService/ResetTest',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ResetTestRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/tast.cros.wifi.ShillService/HealthCheck',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetLoggingConfig = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetLoggingConfig',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetLoggingConfigResponse.FromString,
                _registered_method=True)
        self.SetLoggingConfig = channel.unary_unary(
                '/tast.cros.wifi.ShillService/SetLoggingConfig',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetLoggingConfigRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetWakeOnWifi = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetWakeOnWifi',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetWakeOnWifiResponse.FromString,
                _registered_method=True)
        self.SetWakeOnWifi = channel.unary_unary(
                '/tast.cros.wifi.ShillService/SetWakeOnWifi',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetWakeOnWifiRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.CheckLastWakeReason = channel.unary_unary(
                '/tast.cros.wifi.ShillService/CheckLastWakeReason',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.CheckLastWakeReasonRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.WatchDarkResume = channel.unary_stream(
                '/tast.cros.wifi.ShillService/WatchDarkResume',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.WatchDarkResumeResponse.FromString,
                _registered_method=True)
        self.P2PGroupCreate = channel.unary_unary(
                '/tast.cros.wifi.ShillService/P2PGroupCreate',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupCreateRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupCreateResponse.FromString,
                _registered_method=True)
        self.P2PGroupDelete = channel.unary_unary(
                '/tast.cros.wifi.ShillService/P2PGroupDelete',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupDeleteRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupDeleteResponse.FromString,
                _registered_method=True)
        self.P2PGroupConnect = channel.unary_unary(
                '/tast.cros.wifi.ShillService/P2PGroupConnect',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupConnectRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupConnectResponse.FromString,
                _registered_method=True)
        self.P2PGroupDisconnect = channel.unary_unary(
                '/tast.cros.wifi.ShillService/P2PGroupDisconnect',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupDisconnectRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupDisconnectResponse.FromString,
                _registered_method=True)
        self.P2PDeviceInfo = channel.unary_unary(
                '/tast.cros.wifi.ShillService/P2PDeviceInfo',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PDeviceInfoRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PDeviceInfoResponse.FromString,
                _registered_method=True)
        self.StartTethering = channel.unary_unary(
                '/tast.cros.wifi.ShillService/StartTethering',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.TetheringRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.TetheringResponse.FromString,
                _registered_method=True)
        self.StopTethering = channel.unary_unary(
                '/tast.cros.wifi.ShillService/StopTethering',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.StopTetheringRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.TetheringResponse.FromString,
                _registered_method=True)
        self.GetTetheringConfig = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetTetheringConfig',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetTetheringConfigResponse.FromString,
                _registered_method=True)
        self.SetPortalDetectionEnabled = channel.unary_unary(
                '/tast.cros.wifi.ShillService/SetPortalDetectionEnabled',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetPortalDetectionEnabledRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetCaptivePortalList = channel.unary_unary(
                '/tast.cros.wifi.ShillService/SetCaptivePortalList',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetCaptivePortalListRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetCaptivePortalList = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetCaptivePortalList',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetCaptivePortalListResponse.FromString,
                _registered_method=True)
        self.EnsureTestProfileAvailable = channel.unary_unary(
                '/tast.cros.wifi.ShillService/EnsureTestProfileAvailable',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetNetworksForGeolocation = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetNetworksForGeolocation',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetNetworksForGeolocationResponse.FromString,
                _registered_method=True)
        self.GetWiFiNetworksForGeolocation = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetWiFiNetworksForGeolocation',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetWiFiNetworksForGeolocationResponse.FromString,
                _registered_method=True)
        self.SetBSSIDRequested = channel.unary_unary(
                '/tast.cros.wifi.ShillService/SetBSSIDRequested',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetBSSIDRequestedRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetProperties = channel.unary_unary(
                '/tast.cros.wifi.ShillService/GetProperties',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetPropertiesRequest.SerializeToString,
                response_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetPropertiesResponse.FromString,
                _registered_method=True)
        self.ScanAndFetchRegion = channel.unary_unary(
                '/tast.cros.wifi.ShillService/ScanAndFetchRegion',
                request_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ScanAndFetchRegionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.TriggerIntelFirmwareDump = channel.unary_unary(
                '/tast.cros.wifi.ShillService/TriggerIntelFirmwareDump',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class ShillServiceServicer(object):
    """ShillService allows remote WiFi setup through shill dbus interface.
    """

    def InitDUT(self, request, context):
        """InitDUT initialize the DUT for WiFi testing.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReinitTestState(self, request, context):
        """ReinitTestState cleans and sets up the environment for a single WiFi
        testcase.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TearDown(self, request, context):
        """TearDown reverts the settings made in InitDUT (and also ReinitTestState).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Connect(self, request, context):
        """Connect attempts to connect WiFi network.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Disconnect(self, request, context):
        """Disconnect attempts to disconnect from a service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteEntriesForSSID(self, request, context):
        """DeleteEntriesForSSID deletes all WiFi profile entries for a given ssid.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryService(self, request, context):
        """QueryService queries shill service information.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInterface(self, request, context):
        """GetInterface returns the WiFi device interface name (e.g., wlan0).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceInfo(self, request, context):
        """GetDeviceInfo returns the WLAN device names defined in tast/testing/wlan.
        e.g. "Intel AX 211".
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIPv4Addrs(self, request, context):
        """GetIPv4Addrs returns the IPv4 addresses for the network interface.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHardwareAddr(self, request, context):
        """GetHardwareAddr returns the HardwareAddr for the network interface.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExpectWifiFrequencies(self, request, context):
        """ExpectWifiFrequencies checks if the device discovers the given SSID on the
        specific frequencies.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBgscanConfig(self, request, context):
        """GetBgscanConfig returns the bgscan configuration the device's WiFi module
        currently uses.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBgscanConfig(self, request, context):
        """SetBgscanConfig sets the device's WiFi module's bgscan configuration.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssureDisconnect(self, request, context):
        """AssureDisconnect assures that the WiFi service has disconnected within
        timeout (nanoseconds).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableEnableTest(self, request, context):
        """DisableEnableTest disables and then enables the WiFi interface.
        This is the main body of the DisableEnable test.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EthernetFailoverToWifiTest(self, request, context):
        """EthernetFailoverToWifiTest disables the ethernet and test if the network is
        transitioned to WiFi. This is the main body of the EthernetFailoverToWifi
        test.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestScan(self, request, context):
        """RequestScan requests shill to trigger a wpa_supplicant scan on WiFi
        devices.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestScans(self, request, context):
        """RequestScans requests shill to trigger active scans on WiFi devices.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMACRandomize(self, request, context):
        """SetMACRandomize sets the MAC randomization setting on the WiFi device.
        The original setting is returned for ease of restoring.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WaitScanIdle(self, request, context):
        """WaitScanIdle waits for not scanning state. If there's a running scan, it
        can wait for it to be done with timeout 10 seconds. This is useful when the
        test sets some parameters regarding scans and wants to avoid noices due to
        not yet ended scans.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureAndAssertAutoConnect(self, request, context):
        """ConfigureAndAssertAutoConnect configures the matched shill service and then
        waits for the IsConnected property becomes true.
        Note that this function does not attempt to connect; it waits for auto
        connect instead.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentTime(self, request, context):
        """GetCurrentTime returns the current local time in the given format.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SelectedService(self, request, context):
        """SelectedService returns the object path of selected service of WiFi
        service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServicePath(self, request, context):
        """GetServicePath returns the object path of the service matching the
        properties in request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExpectShillProperty(self, request, context):
        """ExpectShillProperty is a streaming gRPC, takes a shill service path,
        expects a list of property criteria in order, and takes a list of shill
        properties to monitor. When a property's value is expected, it responds the
        property's (key, value) pair. The method sends an empty response as the
        property watcher is set. A property matching criterion consists of a
        property name, a list of expected values, a list of excluded values, and a
        "CheckType". We say a criterion is met iff the property value is in one of
        the expected values and not in any of the excluded values. If the property
        value is one of the excluded values, the method fails immediately. The call
        monitors the specified shill properties and returns the monitor results as
        a chronological list of pairs (changed property, changed value) at the end.
        For CheckMethod, it has three methods:
        1. CHECK_ONLY: checks if the criterion is met.
        2. ON_CHANGE: waits for the property changes to the expected values.
        3. CHECK_WAIT: checks if the criterion is met; if not, waits until the
        property's value is met.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProfileBasicTest(self, request, context):
        """ProfileBasicTest is the main body of the ProfileBasic test, which creates,
        pushes, and pops the profiles and asserts the connection states between
        those operations.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DiscoverBSSID(self, request, context):
        """DiscoverBSSID discovers the specified BSSID by running a scan.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestRoam(self, request, context):
        """RequestRoam requests DUT to roam to the specified BSSID and waits until
        the DUT has roamed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDHCPProperties(self, request, context):
        """SetDHCPProperties sets the DHCP properties in shill and returns the
        original values.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reassociate(self, request, context):
        """Reassociate triggers reassociation with the current AP and waits until it
        has reconnected or the timeout (in nanoseconds) expires.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWifiEnabled(self, request, context):
        """GetWifiEnabled checks to see if Wifi is an enabled technology on shill.
        This call will wait for WiFi to appear in available technologies so we
        can get correct enabled setting.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetWifiEnabled(self, request, context):
        """SetWifiEnabled persistently enables/disables Wifi via shill.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WaitForBSSID(self, request, context):
        """WaitForBSSID waits for a specific BSSID to be found.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MACRandomizeSupport(self, request, context):
        """MACRandomizeSupport tells if MAC randomization is supported for the WiFi
        device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMACRandomize(self, request, context):
        """GetMACRandomize tells if MAC randomization is enabled for the WiFi device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EAPAuthSkipped(self, request, context):
        """EAPAuthSkipped is a streaming gRPC, who watches wpa_supplicant's D-Bus
        signals until the next connection completes, and tells that the EAP
        authentication is skipped (i.e., PMKSA is cached and used) or not. Note
        that the method sends an empty response as the signal watcher is set.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SuspendAssertConnect(self, request, context):
        """SuspendAssertConnect suspends the DUT and waits for connection after
        resuming.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Suspend(self, request, context):
        """Suspend suspends the DUT.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGlobalFTProperty(self, request, context):
        """GetGlobalFTProperty returns the WiFi.GlobalFTEnabled manager property
        value.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetGlobalFTProperty(self, request, context):
        """SetGlobalFTProperty set the WiFi.GlobalFTEnabled manager property value.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRequestScanTypeProperty(self, request, context):
        """GetRequestScanTypeProperty returns the WiFi.RequestScanType manager
        property value.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRequestScanTypeProperty(self, request, context):
        """SetRequestScanTypeProperty sets the WiFi.RequestScanType manager property
        value.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScanAllowRoamProperty(self, request, context):
        """GetScanAllowRoamProperty returns the WiFi.ScanAllowRoam manager property
        value.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetScanAllowRoamProperty(self, request, context):
        """SetScanAllowRoamProperty set the WiFi.ScanAllowRoam manager property value.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectReason(self, request, context):
        """DisconnectReason is a streaming gRPC, who waits for the wpa_supplicant's
        DisconnectReason property change, and returns the code to the client.
        To notify the caller that it is ready, it sends an empty response after
        the signal watcher is initialized.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FlushBSS(self, request, context):
        """FlushBSS flushes BSS entries over the specified age from wpa_supplicant's
        cache.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetTest(self, request, context):
        """ResetTest is the main body of the Reset test, which resets/suspends and
        verifies the connection for several times.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """HealthCheck examines if the DUT is healthy. If some tests fail to bring
        the WiFi device back, it treats the DUT as unhealthy. Testing host needs
        to reboot the DUT to refrain it from affecting the following tests.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoggingConfig(self, request, context):
        """GetLoggingConfig returns the logging configuration the device currently
        uses.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLoggingConfig(self, request, context):
        """SetLoggingConfig sets the device logging configuration.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWakeOnWifi(self, request, context):
        """GetWakeOnWifi gets WakeOnWiFi related properties of WiFi device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetWakeOnWifi(self, request, context):
        """SetWakeOnWifi sets WakeOnWiFi related properties of WiFi device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckLastWakeReason(self, request, context):
        """CheckLastWakeReason checks if the last wake reason of WiFi device is as
        expected.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchDarkResume(self, request, context):
        """WatchDarkResume is a streaming gRPC which watchers power manager's D-Bus
        signals until next resume (SuspendDone), and returns the count of dark
        resumes.
        Note that it sends back an empty response first to notify the caller that
        the D-Bus watcher is ready.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def P2PGroupCreate(self, request, context):
        """P2PGroupCreate creates WiFi Direct Group and takes its ownership.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def P2PGroupDelete(self, request, context):
        """P2PGroupDelete deletes the existing WiFi Direct Group.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def P2PGroupConnect(self, request, context):
        """P2PGroupConnect handles connection to the existing WiFi Direct Group.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def P2PGroupDisconnect(self, request, context):
        """P2PGroupDisconnect handles disconnection from the existing WiFi Direct
        Group.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def P2PDeviceInfo(self, request, context):
        """P2PDeviceInfo returns WiFi Direct Group/Client information.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartTethering(self, request, context):
        """StartTethering attempts to start a tethering session.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopTethering(self, request, context):
        """StopTethering attempts to stop the tethering session.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTetheringConfig(self, request, context):
        """GetTetheringConfig returns tethering configuration.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPortalDetectionEnabled(self, request, context):
        """SetPortalDetectionEnabled persistently enables/disables PortalDetection via
        shill.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCaptivePortalList(self, request, context):
        """SetCaptivePortalList sets the CheckPortalList property value.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCaptivePortalList(self, request, context):
        """GetCaptivePortalList returns the CheckPortalList manager property value.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnsureTestProfileAvailable(self, request, context):
        """EnsureTestProfileAvailable ensures the test profile is available.
        The test profile will not be on stack once shill restarts and the DUT is
        not logged in, it can be used to restore the wifi settings for a DUT that
        is rebooted from log in screen.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNetworksForGeolocation(self, request, context):
        """Deprecated: use GetWiFiNetworksForGeolocation instead.
        GetNetworksForGeolocation returns the GetNetworksForGeolocation manager
        property value.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWiFiNetworksForGeolocation(self, request, context):
        """GetWiFiNetworksForGeolocation returns the WiFi geolocation cache.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBSSIDRequested(self, request, context):
        """SetBSSIDRequested sets the BSSIDRequested service property value.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProperties(self, request, context):
        """GetProperties returns the specified shill properties.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanAndFetchRegion(self, request, context):
        """ScanAndFetchRegion scans and checks if the region is initialized.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerIntelFirmwareDump(self, request, context):
        """TriggerIntelFirmwareDump triggers firmware dump.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ShillServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitDUT': grpc.unary_unary_rpc_method_handler(
                    servicer.InitDUT,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.InitDUTRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ReinitTestState': grpc.unary_unary_rpc_method_handler(
                    servicer.ReinitTestState,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'TearDown': grpc.unary_unary_rpc_method_handler(
                    servicer.TearDown,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Connect': grpc.unary_unary_rpc_method_handler(
                    servicer.Connect,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ConnectRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ConnectResponse.SerializeToString,
            ),
            'Disconnect': grpc.unary_unary_rpc_method_handler(
                    servicer.Disconnect,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DisconnectRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteEntriesForSSID': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteEntriesForSSID,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DeleteEntriesForSSIDRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'QueryService': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryService,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.QueryServiceRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.QueryServiceResponse.SerializeToString,
            ),
            'GetInterface': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInterface,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetInterfaceResponse.SerializeToString,
            ),
            'GetDeviceInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceInfo,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetDeviceInfoResponse.SerializeToString,
            ),
            'GetIPv4Addrs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIPv4Addrs,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetIPv4AddrsRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetIPv4AddrsResponse.SerializeToString,
            ),
            'GetHardwareAddr': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHardwareAddr,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetHardwareAddrRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetHardwareAddrResponse.SerializeToString,
            ),
            'ExpectWifiFrequencies': grpc.unary_unary_rpc_method_handler(
                    servicer.ExpectWifiFrequencies,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ExpectWifiFrequenciesRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetBgscanConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBgscanConfig,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetBgscanConfigResponse.SerializeToString,
            ),
            'SetBgscanConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBgscanConfig,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetBgscanConfigRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AssureDisconnect': grpc.unary_unary_rpc_method_handler(
                    servicer.AssureDisconnect,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.AssureDisconnectRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DisableEnableTest': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableEnableTest,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DisableEnableTestRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'EthernetFailoverToWifiTest': grpc.unary_unary_rpc_method_handler(
                    servicer.EthernetFailoverToWifiTest,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.EthernetFailoverToWifiTestRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'RequestScan': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestScan,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'RequestScans': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestScans,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.RequestScansRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetMACRandomize': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMACRandomize,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetMACRandomizeRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetMACRandomizeResponse.SerializeToString,
            ),
            'WaitScanIdle': grpc.unary_unary_rpc_method_handler(
                    servicer.WaitScanIdle,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ConfigureAndAssertAutoConnect': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureAndAssertAutoConnect,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ConfigureAndAssertAutoConnectRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ConfigureAndAssertAutoConnectResponse.SerializeToString,
            ),
            'GetCurrentTime': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentTime,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetCurrentTimeResponse.SerializeToString,
            ),
            'SelectedService': grpc.unary_unary_rpc_method_handler(
                    servicer.SelectedService,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SelectedServiceResponse.SerializeToString,
            ),
            'GetServicePath': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServicePath,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ServicePathRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ServicePathResponse.SerializeToString,
            ),
            'ExpectShillProperty': grpc.unary_stream_rpc_method_handler(
                    servicer.ExpectShillProperty,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ExpectShillPropertyRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ExpectShillPropertyResponse.SerializeToString,
            ),
            'ProfileBasicTest': grpc.unary_unary_rpc_method_handler(
                    servicer.ProfileBasicTest,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ProfileBasicTestRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DiscoverBSSID': grpc.unary_unary_rpc_method_handler(
                    servicer.DiscoverBSSID,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DiscoverBSSIDRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DiscoverBSSIDResponse.SerializeToString,
            ),
            'RequestRoam': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestRoam,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.RequestRoamRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetDHCPProperties': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDHCPProperties,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetDHCPPropertiesRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetDHCPPropertiesResponse.SerializeToString,
            ),
            'Reassociate': grpc.unary_unary_rpc_method_handler(
                    servicer.Reassociate,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ReassociateRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetWifiEnabled': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWifiEnabled,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetWifiEnabledResponse.SerializeToString,
            ),
            'SetWifiEnabled': grpc.unary_unary_rpc_method_handler(
                    servicer.SetWifiEnabled,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetWifiEnabledRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'WaitForBSSID': grpc.unary_unary_rpc_method_handler(
                    servicer.WaitForBSSID,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.WaitForBSSIDRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'MACRandomizeSupport': grpc.unary_unary_rpc_method_handler(
                    servicer.MACRandomizeSupport,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.MACRandomizeSupportResponse.SerializeToString,
            ),
            'GetMACRandomize': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMACRandomize,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetMACRandomizeResponse.SerializeToString,
            ),
            'EAPAuthSkipped': grpc.unary_stream_rpc_method_handler(
                    servicer.EAPAuthSkipped,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.EAPAuthSkippedResponse.SerializeToString,
            ),
            'SuspendAssertConnect': grpc.unary_unary_rpc_method_handler(
                    servicer.SuspendAssertConnect,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SuspendAssertConnectRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SuspendAssertConnectResponse.SerializeToString,
            ),
            'Suspend': grpc.unary_unary_rpc_method_handler(
                    servicer.Suspend,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SuspendRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SuspendResponse.SerializeToString,
            ),
            'GetGlobalFTProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGlobalFTProperty,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetGlobalFTPropertyResponse.SerializeToString,
            ),
            'SetGlobalFTProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.SetGlobalFTProperty,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetGlobalFTPropertyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetRequestScanTypeProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRequestScanTypeProperty,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetRequestScanTypePropertyResponse.SerializeToString,
            ),
            'SetRequestScanTypeProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRequestScanTypeProperty,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetRequestScanTypePropertyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetScanAllowRoamProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScanAllowRoamProperty,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetScanAllowRoamPropertyResponse.SerializeToString,
            ),
            'SetScanAllowRoamProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.SetScanAllowRoamProperty,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetScanAllowRoamPropertyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DisconnectReason': grpc.unary_stream_rpc_method_handler(
                    servicer.DisconnectReason,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DisconnectReasonResponse.SerializeToString,
            ),
            'FlushBSS': grpc.unary_unary_rpc_method_handler(
                    servicer.FlushBSS,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.FlushBSSRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ResetTest': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetTest,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ResetTestRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetLoggingConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoggingConfig,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetLoggingConfigResponse.SerializeToString,
            ),
            'SetLoggingConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLoggingConfig,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetLoggingConfigRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetWakeOnWifi': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWakeOnWifi,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetWakeOnWifiResponse.SerializeToString,
            ),
            'SetWakeOnWifi': grpc.unary_unary_rpc_method_handler(
                    servicer.SetWakeOnWifi,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetWakeOnWifiRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CheckLastWakeReason': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckLastWakeReason,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.CheckLastWakeReasonRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'WatchDarkResume': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchDarkResume,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.WatchDarkResumeResponse.SerializeToString,
            ),
            'P2PGroupCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.P2PGroupCreate,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupCreateRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupCreateResponse.SerializeToString,
            ),
            'P2PGroupDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.P2PGroupDelete,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupDeleteRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupDeleteResponse.SerializeToString,
            ),
            'P2PGroupConnect': grpc.unary_unary_rpc_method_handler(
                    servicer.P2PGroupConnect,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupConnectRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupConnectResponse.SerializeToString,
            ),
            'P2PGroupDisconnect': grpc.unary_unary_rpc_method_handler(
                    servicer.P2PGroupDisconnect,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupDisconnectRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupDisconnectResponse.SerializeToString,
            ),
            'P2PDeviceInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.P2PDeviceInfo,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PDeviceInfoRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PDeviceInfoResponse.SerializeToString,
            ),
            'StartTethering': grpc.unary_unary_rpc_method_handler(
                    servicer.StartTethering,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.TetheringRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.TetheringResponse.SerializeToString,
            ),
            'StopTethering': grpc.unary_unary_rpc_method_handler(
                    servicer.StopTethering,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.StopTetheringRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.TetheringResponse.SerializeToString,
            ),
            'GetTetheringConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTetheringConfig,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetTetheringConfigResponse.SerializeToString,
            ),
            'SetPortalDetectionEnabled': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPortalDetectionEnabled,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetPortalDetectionEnabledRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetCaptivePortalList': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCaptivePortalList,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetCaptivePortalListRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetCaptivePortalList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCaptivePortalList,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetCaptivePortalListResponse.SerializeToString,
            ),
            'EnsureTestProfileAvailable': grpc.unary_unary_rpc_method_handler(
                    servicer.EnsureTestProfileAvailable,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetNetworksForGeolocation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNetworksForGeolocation,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetNetworksForGeolocationResponse.SerializeToString,
            ),
            'GetWiFiNetworksForGeolocation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWiFiNetworksForGeolocation,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetWiFiNetworksForGeolocationResponse.SerializeToString,
            ),
            'SetBSSIDRequested': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBSSIDRequested,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetBSSIDRequestedRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetProperties': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProperties,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetPropertiesRequest.FromString,
                    response_serializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetPropertiesResponse.SerializeToString,
            ),
            'ScanAndFetchRegion': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanAndFetchRegion,
                    request_deserializer=tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ScanAndFetchRegionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'TriggerIntelFirmwareDump': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerIntelFirmwareDump,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tast.cros.wifi.ShillService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('tast.cros.wifi.ShillService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ShillService(object):
    """ShillService allows remote WiFi setup through shill dbus interface.
    """

    @staticmethod
    def InitDUT(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/InitDUT',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.InitDUTRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReinitTestState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/ReinitTestState',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TearDown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/TearDown',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Connect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/Connect',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ConnectRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ConnectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Disconnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/Disconnect',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DisconnectRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteEntriesForSSID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/DeleteEntriesForSSID',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DeleteEntriesForSSIDRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/QueryService',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.QueryServiceRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.QueryServiceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetInterface(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetInterface',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetInterfaceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDeviceInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetDeviceInfo',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetDeviceInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetIPv4Addrs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetIPv4Addrs',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetIPv4AddrsRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetIPv4AddrsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetHardwareAddr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetHardwareAddr',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetHardwareAddrRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetHardwareAddrResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExpectWifiFrequencies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/ExpectWifiFrequencies',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ExpectWifiFrequenciesRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBgscanConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetBgscanConfig',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetBgscanConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetBgscanConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/SetBgscanConfig',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetBgscanConfigRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AssureDisconnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/AssureDisconnect',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.AssureDisconnectRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DisableEnableTest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/DisableEnableTest',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DisableEnableTestRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EthernetFailoverToWifiTest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/EthernetFailoverToWifiTest',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.EthernetFailoverToWifiTestRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RequestScan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/RequestScan',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RequestScans(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/RequestScans',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.RequestScansRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetMACRandomize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/SetMACRandomize',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetMACRandomizeRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetMACRandomizeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WaitScanIdle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/WaitScanIdle',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureAndAssertAutoConnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/ConfigureAndAssertAutoConnect',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ConfigureAndAssertAutoConnectRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ConfigureAndAssertAutoConnectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCurrentTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetCurrentTime',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetCurrentTimeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SelectedService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/SelectedService',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SelectedServiceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetServicePath(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetServicePath',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ServicePathRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ServicePathResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExpectShillProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/tast.cros.wifi.ShillService/ExpectShillProperty',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ExpectShillPropertyRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ExpectShillPropertyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProfileBasicTest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/ProfileBasicTest',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ProfileBasicTestRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DiscoverBSSID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/DiscoverBSSID',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DiscoverBSSIDRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DiscoverBSSIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RequestRoam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/RequestRoam',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.RequestRoamRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetDHCPProperties(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/SetDHCPProperties',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetDHCPPropertiesRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetDHCPPropertiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Reassociate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/Reassociate',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ReassociateRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWifiEnabled(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetWifiEnabled',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetWifiEnabledResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetWifiEnabled(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/SetWifiEnabled',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetWifiEnabledRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WaitForBSSID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/WaitForBSSID',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.WaitForBSSIDRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MACRandomizeSupport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/MACRandomizeSupport',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.MACRandomizeSupportResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMACRandomize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetMACRandomize',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetMACRandomizeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EAPAuthSkipped(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/tast.cros.wifi.ShillService/EAPAuthSkipped',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.EAPAuthSkippedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SuspendAssertConnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/SuspendAssertConnect',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SuspendAssertConnectRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SuspendAssertConnectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Suspend(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/Suspend',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SuspendRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SuspendResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGlobalFTProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetGlobalFTProperty',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetGlobalFTPropertyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetGlobalFTProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/SetGlobalFTProperty',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetGlobalFTPropertyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRequestScanTypeProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetRequestScanTypeProperty',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetRequestScanTypePropertyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetRequestScanTypeProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/SetRequestScanTypeProperty',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetRequestScanTypePropertyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetScanAllowRoamProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetScanAllowRoamProperty',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetScanAllowRoamPropertyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetScanAllowRoamProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/SetScanAllowRoamProperty',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetScanAllowRoamPropertyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DisconnectReason(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/tast.cros.wifi.ShillService/DisconnectReason',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.DisconnectReasonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FlushBSS(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/FlushBSS',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.FlushBSSRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetTest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/ResetTest',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ResetTestRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/HealthCheck',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLoggingConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetLoggingConfig',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetLoggingConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetLoggingConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/SetLoggingConfig',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetLoggingConfigRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWakeOnWifi(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetWakeOnWifi',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetWakeOnWifiResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetWakeOnWifi(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/SetWakeOnWifi',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetWakeOnWifiRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckLastWakeReason(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/CheckLastWakeReason',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.CheckLastWakeReasonRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WatchDarkResume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/tast.cros.wifi.ShillService/WatchDarkResume',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.WatchDarkResumeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def P2PGroupCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/P2PGroupCreate',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupCreateRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupCreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def P2PGroupDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/P2PGroupDelete',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupDeleteRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def P2PGroupConnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/P2PGroupConnect',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupConnectRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupConnectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def P2PGroupDisconnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/P2PGroupDisconnect',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupDisconnectRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PGroupDisconnectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def P2PDeviceInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/P2PDeviceInfo',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PDeviceInfoRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.P2PDeviceInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartTethering(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/StartTethering',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.TetheringRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.TetheringResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StopTethering(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/StopTethering',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.StopTetheringRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.TetheringResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTetheringConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetTetheringConfig',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetTetheringConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetPortalDetectionEnabled(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/SetPortalDetectionEnabled',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetPortalDetectionEnabledRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetCaptivePortalList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/SetCaptivePortalList',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetCaptivePortalListRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCaptivePortalList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetCaptivePortalList',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetCaptivePortalListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EnsureTestProfileAvailable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/EnsureTestProfileAvailable',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetNetworksForGeolocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetNetworksForGeolocation',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetNetworksForGeolocationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWiFiNetworksForGeolocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetWiFiNetworksForGeolocation',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetWiFiNetworksForGeolocationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetBSSIDRequested(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/SetBSSIDRequested',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.SetBSSIDRequestedRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProperties(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/GetProperties',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetPropertiesRequest.SerializeToString,
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.GetPropertiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ScanAndFetchRegion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/ScanAndFetchRegion',
            tast_dot_cros_dot_services_dot_cros_dot_wifi_dot_shill__service__pb2.ScanAndFetchRegionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TriggerIntelFirmwareDump(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tast.cros.wifi.ShillService/TriggerIntelFirmwareDump',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
