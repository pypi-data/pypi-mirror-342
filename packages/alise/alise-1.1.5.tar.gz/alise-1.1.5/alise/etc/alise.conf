# vim: ft = conf
[messages]

log_level  =  DEBUG
# log_file: stdout if not defined
# log_file  =  daemon.log

[auth.helmholtz]
op_url = https://login.helmholtz.de/oauth2
client_id = abitsecret
client_secret = topsecret
scopes = openid profile email eduperson_assurance voperson_id iss
admin_entitlement = ["d7a53cbe3e966c53ac64fde7355956560282158ecac8f3d2c770b474862f4756@egi.eu", "urn:mace:egi.eu:res:gocdb"]
admin_entitlement_claim = sub

[auth.egi]
op_url = https://aai-demo.egi.eu/auth/realms/egi
client_id = abitsecret
client_secret = topsecret
scopes = openid profile email
admin_entitlement = ["d7a53cbe3e966c53ac64fde7355956560282158ecac8f3d2c770b474862f4756@egi.eu"]
admin_entitlement_claim = sub

[auth.google]
op_url = https://accounts.google.com/
client_id = abitsecret
client_secret = topsecret
scopes = openid profile email

[auth.kit-fels]
op_url = https://fels.scc.kit.edu/oidc/realms/fels
client_id = abitsecret
client_secret = topsecret
internal = True
scopes  =  openid profile email
# username claim defaults to sub
# username_claim = sub

[auth.vega-kc]
op_url = https://sso.sling.si:8443/auth/realms/SLING
client_id = abitsecret
client_secret = topsecret
internal = True
scopes = openid profile email address microprofile-jwt roles web-origins offline_access phone acr
username_claim = upn

# [auth.<name>]
# op_url = 
# client_id = 
# client_secret = 
# internal = True (only necessary for internal OPs)
# scopes = openid profile email <add more scopes as needed>
