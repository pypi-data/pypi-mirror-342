# Template for sources configuration
# Copy this file to config.yaml and customize it for your needs
# Environment variables can be used with ${VARIABLE_NAME} syntax

# Global configuration for all sources
global:
  # Default chunking configuration
  # Controls how documents are split into chunks for processing
  chunking:
    chunk_size: 500        # Maximum number of characters per chunk
    chunk_overlap: 50      # Number of characters to overlap between chunks
  
  # Default embedding configuration
  # Controls how text is converted to vectors
  embedding:
    endpoint: "http://localhost:8080/v1" # Optionnal. Defines the endpoint to use for embedding. Defaults to OpenAI endpoint.
    model: "BAAI/bge-small-en-v1.5"  # Embedding model to use. Could be BAAI/bge-small-en-v1.5 (exemple for local use) or text-embedding-3-small (for OpenAI use)
    batch_size: 100                  # Number of chunks to process in one batch
    vector_size: 384                # Optionnal. Vector size for the embedding model (384 for BAAI/bge-small-en-v1.5, 1536 for OpenAI models)
    tokenizer: "none"         # Optionnal. Tokenizer to use for token counting. Use 'cl100k_base' for OpenAI models or 'none' for other models.

  # State management configuration
  # Controls how document ingestion state is tracked
  state_management:
    database_path: "${STATE_DB_PATH}"  # Path to SQLite database file
    table_prefix: "qdrant_loader_"     # Prefix for database tables
    connection_pool:                   # Connection pool settings
      size: 5                         # Maximum number of connections
      timeout: 30                  # Connection timeout in seconds

# Source-specific configurations
# Each source type has its own configuration section
sources:
  # Public documentation sources (websites, documentation)
  publicdocs:
    # Example configuration for a documentation source
    my-docs:
      # Base URL of the documentation website
      base_url: "https://docs.example.com"
      
      # Specific version of the documentation to fetch
      version: "1.0"
      
      # Enable automatic version detection from URLs or content
      auto_detect_version: false
      
      # Optional: Regex pattern to extract version from URLs or content
      # Example: "version: ([0-9]+\.[0-9]+\.[0-9]+)"
      version_pattern: null
      
      # Content type of the documentation
      content_type: "html"  # Options: html, markdown, etc.
      
      # Optional: Specific path pattern to match documentation pages
      # Uses glob syntax: ** matches any directory, * matches any file
      path_pattern: "/docs/{version}/**"
      
      # Optional: List of paths to exclude from processing
      exclude_paths:
        - "/docs/{version}/api-reference"
        - "/docs/{version}/changelog"
      
      # Optional: CSS selectors for content extraction
      # Helps identify and extract relevant content from HTML
      selectors:
        # Main content container selector
        content: "article.main-content"
        # Elements to remove (navigation, headers, footers)
        remove: 
          - "nav"
          - "header"
          - "footer"
          - ".sidebar"
        # Code blocks to preserve (will be kept in the content)
        code_blocks: "pre code"

  # Git repository sources
  git:
    # Example configuration for a public repository
    public_repo:
      base_url: "https://github.com/example/repo.git"  # Repository URL
      branch: "main"                             # Branch to process
      include_paths:                             # Paths to include (glob patterns)
        - "docs/**"
        - "src/**"
        - "README.md"
      exclude_paths:                             # Paths to exclude (glob patterns)
        - "docs/archive/**"
        - "node_modules/**"
        - "venv/**"
      file_types:                                # File extensions to process
        - "*.md"
        - "*.rst"
        - "*.txt"
        - "*.py"
        - "*.js"
        - "*.ts"
        - "*.java"
        - "*.go"
        - "*.rb"
      max_file_size: 1048576                    # Maximum file size in bytes (1MB)
      depth: 1                                  # Maximum directory depth to process
      token: "${REPO_TOKEN}"                    #  GitHub Personal Access Token or none

    # Example configuration for a private GitHub repository
    private_github_repo:
      base_url: "${REPO_URL}"                        # Use environment variable
      branch: "main"
      token: "${REPO_TOKEN}"                    # GitHub Personal Access Token or none
      include_paths:
        - "docs/**"
      file_types:
        - "*.md"

  # Confluence documentation sources
  confluence:
    my-space:
      base_url: "${CONFLUENCE_URL}"                  # Confluence instance URL
      space_key: "${CONFLUENCE_SPACE_KEY}"      # Space to process
      content_types:                            # Types of content to process
        - "page"
        - "blogpost"
      include_labels: []                        # Only process content with these labels
      exclude_labels: []                        # Skip content with these labels
      token: "${CONFLUENCE_TOKEN}"              # Confluence API token
      email: "${CONFLUENCE_EMAIL}"              # Confluence user email

  # JIRA issue tracking sources
  jira:
    my-project:
      base_url: "${JIRA_URL}"                   # JIRA instance URL
      project_key: "${JIRA_PROJECT_KEY}"        # Project to process
      requests_per_minute: 60                   # Rate limit for API calls
      page_size: 50                            # Number of issues per API request
      process_attachments: true                 # Whether to process issue attachments
      track_last_sync: true                    # Track last sync time for incremental updates
      token: "${JIRA_TOKEN}"                    # JIRA API token
      email: "${JIRA_EMAIL}"                    # JIRA user email