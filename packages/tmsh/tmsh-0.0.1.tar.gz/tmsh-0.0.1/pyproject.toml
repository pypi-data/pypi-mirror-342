[project]
name = "tmsh"
version = "0.0.1"
description = "Type-annotated and linted Python interface for Gmsh"
readme = "README.md"
requires-python = ">=3.13"
dependencies = ["gmsh ==4.13.1", "numpy >=2.0.0"]
classifiers = [
    "Development Status :: 1 - Planning",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python",
]
license-files = ["LICENSE.txt"]

[project.urls]
Repository = "https://github.com/rupt/tmsh"

[dependency-groups]
dev = [
    "build >=1.2.2.post1",
    "mypy >=1.15.0",
    "pyright >=1.1.399",
    "ruff >=0.11.6",
    "setuptools >=79.0.0",
    "twine >=6.1.0",
]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.ruff]
exclude = []
include = ["src/*.py", "tests/*.py"]
line-length = 79
output-format = "concise"

[tool.ruff.lint]
select = [
    "ERA",
    "YTT",
    "ANN401",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "COM",
    "C4",
    "EM",
    "FA",
    "ISC",
    "ICN",
    "PIE",
    "T20",
    "PYI",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SIM",
    "SLOT",
    "TID",
    "TD",
    "TC",
    "ARG",
    "PTH",
    "FLY",
    "I",
    "C90",
    "NPY",
    "PERF",
    "E",
    "W",
    "D",
    "F",
    "PGH",
    "PL",
    "PLE",
    "PLR",
    "PLW",
    "UP",
    "FURB",
    "RUF",
    "TRY",
]
ignore = [
    # To enable
    "E501",
    "ANN001",
    "ANN002",
    "ANN003",
    "ANN201",
    "ANN202",
    "ANN204",
    "ANN205",
    "ANN206",
    "FBT002",
    "B006",
    "TD00",
    "D415",
    "D200",
    # Not to enable
    "PLR0913",
    "PLR2004",
]
dummy-variable-rgx = "^_$"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]

[tool.ruff.lint.flake8-import-conventions.aliases]
numpy = "numpy"

[tool.ruff.lint.isort]
split-on-trailing-comma = false
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
skip-magic-trailing-comma = true
line-ending = "lf"

[tool.pyright]
include = ["src", "tests"]
typeCheckingMode = "standard"
useLibraryCodeForTypes = false

[tool.mypy]
files = ["src/*.py", "tests/*.py"]
disable_error_code = "import-untyped"
color_output = false
