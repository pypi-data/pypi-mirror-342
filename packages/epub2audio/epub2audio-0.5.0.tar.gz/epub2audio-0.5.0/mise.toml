[tools]
python = "3.12"
uv = "latest"
"pipx:hatch" = "latest"

[env]
_.path = ["bin"]
[env._.python.venv]
path = ".venv"
create = true
python = "3.12"
uv_create_args = [
    "--prompt",
    "epub2audio",
    "--seed",
]

[task_config]
includes = [
    "bin",
]

[tasks.format]
description = "Format code with ruff"
run = "uv run ruff format ."
sources = ["*.py"]

[tasks.lint-fix]
description = "Fix auto-fixable issues with ruff"
run = "uv run ruff check --fix ."
depends = ["format"]
sources = ["*.py"]

[tasks.lint]
description = "Lint code with ruff"
run = "uv run ruff check ."
depends = ["lint-fix"]
sources = ["*.py"]

[tasks.build]
description = "Build the project"
run = "uvx --from build pyproject-build"
depends = ["lint"]

[tasks.gen-sample]
description = "Generate a sample epub file"
run = "uv run bin/generate-sample-epub"
sources = ["bin/generate-sample-epub"]

[tasks.sample-flac]
description = "Create a sample FLAC audiobook"
run = "uv run epub2audio '{{ config_root }}/tests/data/sample.epub' --output '{{ config_root }}/audiobooks/'"
depends = ["gen-sample"]

[tasks.sample-mp3]
description = "Create a sample MP3 audiobook"
run = "uv run epub2audio '{{ config_root }}/tests/data/sample.epub' --output '{{ config_root }}/audiobooks/'"
depends = ["gen-sample"]

[tasks.sample-ogg]
description = "Create a sample OGG audiobook"
run = "uv run epub2audio '{{ config_root }}/tests/data/sample.epub' --output '{{ config_root }}/audiobooks/'"
depends = ["gen-sample"]

[tasks.sample-all]
description = "Create all sample audiobooks"
depends = ["sample-flac", "sample-mp3", "sample-ogg"]

[tasks.play]
description = "Play the sample audiobook"
run = "vlc --play-and-exit {{ config_root }}/audiobooks/Sample_Book.ogg"
depends = ["sample"]

[tasks.test]
description = "Run tests"
run = "uv run pytest tests/"
depends = ["format", "lint", "lint-fix"]

[tasks.test-integration]
description = "Run integration tests"
run = "uv run pytest --run-integration"
depends = ["test"]

[tasks.test-coverage]
description = "Run tests with coverage report"
run = "uv run pytest --cov=src tests/"
depends = ["test"]

[tasks.docker-build]
description = "Build the docker image"
run = "docker build -t epub2audio ."
depends = ["build"]
