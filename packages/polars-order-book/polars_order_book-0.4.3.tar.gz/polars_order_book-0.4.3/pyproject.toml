[build-system]
requires = ["maturin>=1.0,<2.0", "polars>=0.20.6"]
build-backend = "maturin"

[project]
name = "polars-order-book"
dynamic = ["version"]
requires-python = ">=3.10"
classifiers = [
  "Programming Language :: Rust",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
license        = "Apache-2.0"          # SPDX expression (PEPâ€¯639)
license-files  = ["LICENSE"]           # bundle the file into sdist & wheel


[tool.maturin]
module-name = "polars_order_book._internal"
cargo-extra-args = ["--features", "extension-module"]
manifest-path = "polars_order_book/Cargo.toml"

[[tool.mypy.overrides]]
module = "polars.utils.udfs"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.black]
line-length=120
skip-string-normalization = true

[tool.pylint.formats]
max-line-length = 120

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff]
lint.select = [
  "B",
  "C4",
  "D",
  "ERA",
  "F",
  "FURB",
  "I",
  "INP",
  "ISC",
  "NPY",
  "PD",
  "Q",
  "RUF",
  "UP",
  "W",
]

output-format = "grouped"

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"


[tool.ruff.per-file-ignores]
"tests/**" = [
  "D", # Disable docstring checks for tests
  "INP001"  # Don't need __init__.py in test directory
  ]
"__init__.py" = ["D"]  # Disable docstring checks for __init__.py

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64"]

[tool.pixi.pypi-dependencies]
polars-order-book = { path = ".", editable = true }

[tool.pixi.tasks]

[tool.pixi.dependencies]
polars = ">=1.9.0"
