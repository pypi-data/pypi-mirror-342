[tool.poetry]
authors = ["Trafficlab"]
description = "Wetraffic SDK"
documentation = "https://trafficlabsrl.github.io/wetraffic-sdk"
license = "MIT"
name = "wetraffic-sdk"
packages = [{include = "wetraffic_sdk"}]
readme = "README.md"
repository = "https://github.com/trafficlabsrl/wetraffic-sdk"
version = "1.1.4"

[tool.poetry.dependencies]
pydantic = "^2.7.4"
python = ">=3.9,<4.0"
python-json-logger = "^3.3.0"
requests = "^2.32.2"

[tool.poetry.group.dev.dependencies]
autodoc-pydantic = "^2.2.0"
coverage-badge = "^1.1.2"
flake8 = "^6.1.0"
freezegun = "^1.2.2"
hypothesis = "^6.82.0"
pyright = "1.1.320"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-sugar = "^0.9.7"
python-dotenv = "^1.1.0"
sphinx-rtd-theme = "^3.0.2"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.pytest.ini_options]
norecursedirs = ".venv"
testpaths = [
  "tests",
]

[tool.black]
line-length = 120

[tool.coverage.report]
exclude_also = [
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
exclude_lines = [
  "if TYPE_CHECKING:",
  "pragma: no cover",
]

[tool.pyright]
exclude = []
include = ["wetraffic_sdk", "tests"]
typeCheckingMode = "basic"
