# Generated by Django 4.2.17 on 2025-02-07 10:59

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import xj_thread.libs.DjangoUeditor.models
import xj_thread.utils.j_ulid_field


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', xj_thread.utils.j_ulid_field.JULIDField(db_index=True, default='1jkf5jn7ajfr', help_text='系统默认使用ULID12位码，并兼容UUID32位码', max_length=32, unique=True, verbose_name='UUID')),
                ('user_id', models.BigIntegerField(blank=True, db_column='user_id', db_index=True, null=True, verbose_name='用户ID')),
                ('user_uuid', xj_thread.utils.j_ulid_field.JULIDField(blank=True, db_index=True, max_length=32, null=True, unique=True, verbose_name='用户UUID')),
                ('with_user_id', models.BigIntegerField(blank=True, db_column='with_user_id', db_index=True, null=True, verbose_name='与用户ID')),
                ('with_user_uuid', xj_thread.utils.j_ulid_field.JULIDField(blank=True, db_index=True, max_length=32, null=True, unique=True, verbose_name='与用户UUID')),
                ('group_id', models.BigIntegerField(blank=True, db_index=True, null=True, verbose_name='分组ID')),
                ('thread_no', models.CharField(blank=True, db_index=True, max_length=32, null=True, verbose_name='信息编号')),
                ('title', models.CharField(blank=True, db_index=True, max_length=128, null=True, verbose_name='标题')),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True, verbose_name='子标题')),
                ('summary', models.CharField(blank=True, default='', max_length=2048, null=True, verbose_name='摘要')),
                ('content', xj_thread.libs.DjangoUeditor.models.UEditorField(blank=True, help_text='信息列表页是不返回内容字段的，因为这会增加数据的体积', null=True, verbose_name='内容')),
                ('content_coding', models.CharField(blank=True, choices=[('TEXT', '文本(支持换行)'), ('HTML', 'HTML超文本语言'), ('MARKDOWN', 'MD标记语言'), ('UBB', 'UBB标记语言')], max_length=8, null=True, verbose_name='内容译码类型')),
                ('keywords', models.CharField(blank=True, help_text='多个用;号分隔', max_length=1024, null=True, verbose_name='关键字')),
                ('access_level', models.IntegerField(blank=True, choices=[(1, '所有人 EVERYONE'), (2, '访客 VISITOR'), (3, '会员 STAFF'), (4, '主管 MANAGER'), (5, '管理员 ADMINISTRATOR'), (11, '好友 FRIEND'), (12, '指定人 SOMEONE'), (13, '指定群组 GROUP'), (14, '仅与用户 EACH_OTHER'), (15, '私人可见 PRIVATE'), (21, '指定角色 ROLE'), (31, '阅后即焚(只能看一次) BURN_AFTER_READ'), (32, '已焚毁 BURNED_AND_READ')], db_index=True, null=True, verbose_name='访问级别')),
                ('author', models.CharField(blank=True, max_length=128, null=True, verbose_name='作者/主办者')),
                ('region_code', models.CharField(blank=True, db_index=True, help_text='行政编码格式：省(2), 市(2), 区县(2), 乡镇街道(3), 村(3)', max_length=12, null=True, verbose_name='所属行政区划编码')),
                ('ip', models.GenericIPAddressField(blank=True, default='192.168.83.1', null=True, verbose_name='网络IP')),
                ('cover', models.CharField(blank=True, max_length=1024, null=True, verbose_name='封面')),
                ('photos', models.JSONField(blank=True, null=True, verbose_name='照片集')),
                ('video', models.CharField(blank=True, max_length=1024, null=True, verbose_name='视频')),
                ('files', models.JSONField(blank=True, null=True, verbose_name='文件集')),
                ('price', models.DecimalField(blank=True, decimal_places=8, max_digits=32, null=True, verbose_name='价格/原价')),
                ('is_original', models.BooleanField(blank=True, null=True, verbose_name='是否原创/独有权')),
                ('link', models.URLField(blank=True, help_text='跳转/参考链接', max_length=1024, null=True, verbose_name='跳转/参考链接')),
                ('logs', models.JSONField(blank=True, null=True, verbose_name='日志')),
                ('more', models.JSONField(blank=True, null=True, verbose_name='更多信息')),
                ('sort', models.IntegerField(blank=True, help_text='默认排序为升序', null=True, verbose_name='排序')),
                ('language_code', models.CharField(blank=True, max_length=2, null=True, verbose_name='语言代码')),
                ('remark', models.CharField(blank=True, max_length=1024, null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(blank=True, db_index=True, default=django.utils.timezone.now, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='更新时间')),
                ('publish_time', models.DateTimeField(blank=True, db_index=True, default=django.utils.timezone.now, null=True, verbose_name='发布时间')),
                ('is_delete', models.BooleanField(blank=True, db_index=True, default=0, null=True, verbose_name='是否删除')),
            ],
            options={
                'verbose_name_plural': '01. 信息 - 基本信息',
                'db_table': 'thread',
            },
        ),
        migrations.CreateModel(
            name='ThreadAuthType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='推荐统一为宏命名法（由大写字母和下划线组成）', max_length=50, verbose_name='权限值')),
                ('name', models.CharField(max_length=50, verbose_name='权限名')),
            ],
            options={
                'verbose_name_plural': '07. 信息 - 权限类型',
                'db_table': 'thread_auth_type',
            },
        ),
        migrations.CreateModel(
            name='ThreadCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('platform_code', models.CharField(blank=True, db_index=True, max_length=16, null=True, verbose_name='平台码')),
                ('value', models.CharField(help_text='类别唯一标识值是标识类别的唯一选项', max_length=32, unique=True, verbose_name='类别标识值')),
                ('name', models.CharField(blank=True, max_length=128, null=True, verbose_name='类别名称')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='描述')),
                ('icon', models.CharField(blank=True, max_length=255, null=True, verbose_name='图标')),
                ('config', models.JSONField(blank=True, default=dict, null=True, verbose_name='前端配置')),
                ('total', models.IntegerField(blank=True, help_text='自动计算信息总数（含子类别）', null=True, verbose_name='总计')),
                ('need_auth', models.BooleanField(blank=True, help_text='类别是否登录后才能查看', null=True, verbose_name='登录可见')),
                ('sort', models.IntegerField(blank=True, help_text='默认排序为升序', null=True, verbose_name='排序')),
                ('disable', models.BooleanField(blank=True, help_text='默认不禁用', null=True, verbose_name='禁用')),
                ('parent', models.ForeignKey(blank=True, db_column='parent_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='xj_thread.threadcategory', verbose_name='父类别')),
            ],
            options={
                'verbose_name_plural': '02. 信息 - 主要类别',
                'db_table': 'thread_category',
            },
        ),
        migrations.CreateModel(
            name='ThreadShow',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='展示类型ID')),
                ('value', models.CharField(max_length=50, verbose_name='展示类型值')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='展示类型名')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='描述')),
                ('config', models.JSONField(blank=True, default=dict, null=True, verbose_name='前端配置')),
            ],
            options={
                'verbose_name_plural': '04. 信息 - 展示类型',
                'db_table': 'thread_show',
            },
        ),
        migrations.CreateModel(
            name='ThreadStatistic',
            fields=[
                ('thread_id', models.OneToOneField(db_column='thread_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='xj_thread.thread', verbose_name='信息ID')),
                ('flag_classifies', models.CharField(blank=True, max_length=255, null=True, verbose_name='分类标识')),
                ('flag_weights', models.CharField(blank=True, max_length=255, null=True, verbose_name='权重标识')),
                ('weight', models.FloatField(db_index=True, default=0, verbose_name='权重')),
                ('views', models.IntegerField(default=0, verbose_name='浏览数')),
                ('plays', models.IntegerField(default=0, verbose_name='完阅数')),
                ('comments', models.IntegerField(default=0, verbose_name='评论数')),
                ('likes', models.IntegerField(default=0, verbose_name='点赞数')),
                ('favorite', models.IntegerField(default=0, verbose_name='收藏数')),
                ('shares', models.IntegerField(default=0, verbose_name='分享数')),
            ],
            options={
                'verbose_name': '12. 信息 - 信息统计',
                'verbose_name_plural': '12. 信息 - 信息统计',
                'db_table': 'thread_statistic',
            },
        ),
        migrations.CreateModel(
            name='ThreadClassify',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='分类ID')),
                ('value', models.CharField(max_length=32, unique=True, verbose_name='分类标识值')),
                ('name', models.CharField(blank=True, max_length=128, null=True, verbose_name='分类名称')),
                ('icon', models.CharField(blank=True, max_length=255, null=True, verbose_name='图标')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='描述')),
                ('config', models.JSONField(blank=True, default=dict, null=True, verbose_name='前端配置')),
                ('sort', models.IntegerField(blank=True, help_text='默认排序为升序', null=True, verbose_name='排序')),
                ('category', models.ForeignKey(blank=True, db_column='category_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='xj_thread.threadcategory', verbose_name='所属类别')),
                ('parent', models.ForeignKey(blank=True, db_column='parent_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='xj_thread.threadclassify', verbose_name='父分类')),
                ('show', models.ForeignKey(blank=True, db_column='show_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='xj_thread.threadshow', verbose_name='默认展示ID')),
            ],
            options={
                'verbose_name_plural': '03. 信息 - 分类',
                'db_table': 'thread_classify',
            },
        ),
        migrations.CreateModel(
            name='ThreadAuthField',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('crud', models.CharField(blank=True, choices=[('C', '新增 (Create)'), ('R', '查找 (Read)'), ('U', '修改 (Update)'), ('D', '删除 (Delete)')], help_text='CRUD（Create, Read, Update, Delete，简称CRUD）', max_length=1, null=True, verbose_name='CRUD')),
                ('allow_fields', models.CharField(blank=True, help_text='允许可见的字段，多个字段以英文分号;分隔', max_length=1024, null=True, verbose_name='允许字段')),
                ('ban_fields', models.CharField(blank=True, help_text='禁止可见的字段，注意：当允许和禁止字段冲突时，禁止的优先级更高，以分号;分隔', max_length=1024, null=True, verbose_name='禁止字段')),
                ('is_list', models.BooleanField(blank=True, help_text='选是过滤列表数据，默认过滤详情数据。注意：列表页禁止显示content, logs, more字段', null=True, verbose_name='是否列表')),
                ('enable', models.BooleanField(blank=True, help_text='默认未启用', null=True, verbose_name='启用')),
                ('auth_level', models.ForeignKey(db_column='auth_level', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='xj_thread.threadauthtype', verbose_name='权限类型')),
                ('category', models.ForeignKey(db_column='category_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='xj_thread.threadcategory', verbose_name='类别ID')),
            ],
            options={
                'verbose_name_plural': '08. 信息 - 权限字段',
                'db_table': 'thread_auth_field',
            },
        ),
        migrations.AddField(
            model_name='thread',
            name='category',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='xj_thread.threadcategory', verbose_name='类别ID'),
        ),
        migrations.AddField(
            model_name='thread',
            name='classify',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='xj_thread.threadclassify', verbose_name='分类ID'),
        ),
        migrations.AddField(
            model_name='thread',
            name='show',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='如果没有传入显示类型，则使用分类表中的默认显示类型', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='xj_thread.threadshow', verbose_name='展示ID'),
        ),
        migrations.CreateModel(
            name='ThreadExtendField',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('field_index', models.CharField(choices=[('field_1', '自定义字段1 (数字)'), ('field_2', '自定义字段2 (数字)'), ('field_3', '自定义字段3 (数字)'), ('field_4', '自定义字段4 (数字)'), ('field_5', '自定义字段5 (数字)'), ('field_6', '自定义字段6 (数字)'), ('field_7', '自定义字段7 (数字)'), ('field_8', '自定义字段8 (数字)'), ('field_9', '自定义字段9 (数字)'), ('field_10', '自定义字段10 (数字)'), ('field_11', '自定义字段11 (文本)'), ('field_12', '自定义字段12 (文本)'), ('field_13', '自定义字段13 (文本)'), ('field_14', '自定义字段14 (文本)'), ('field_15', '自定义字段15 (文本)'), ('field_16', '自定义字段16 (文本)'), ('field_17', '自定义字段17 (文本)'), ('field_18', '自定义字段18 (文本)'), ('field_19', '自定义字段19 (文本)'), ('field_20', '自定义字段20 (文本)'), ('field_21', '自定义字段20 (长文本)'), ('field_22', '自定义字段20 (长文本)')], max_length=8, verbose_name='映射的字段索引')),
                ('field', models.CharField(max_length=32, verbose_name='自定义字段')),
                ('value', models.CharField(blank=True, max_length=128, null=True, verbose_name='字段标签')),
                ('default', models.CharField(blank=True, max_length=255, null=True, verbose_name='默认值')),
                ('type', models.CharField(blank=True, choices=[('bool', '布尔型-bool'), ('int', '整型-int'), ('float', '浮点型-float'), ('number', '数字类型-number'), ('string', '字符串型-string'), ('text', '长文本型-text'), ('plain', '普通文字-plain'), ('input', '输入框-plain'), ('password', '密码框-password'), ('textarea', '多行文本框-textarea'), ('editor', '富文本编辑器-editor'), ('switch', '开关切换-switch'), ('select', '选择框-select'), ('radio', '单选框-radio'), ('checkbox', '多选框-checkbox'), ('cascader', '级联选择器-cascader'), ('color', '色彩选择器-color'), ('slot', '插槽-slot'), ('image', '图片-image'), ('audio', '音频-audio'), ('video', '视频-video'), ('file', '文件-file'), ('upload', '上传类型-upload'), ('time', ' 时间-time'), ('datetime', '日期时间-datetime'), ('date', '日期-date'), ('month', '月份-month'), ('year', '年-year')], max_length=8, null=True, verbose_name='字段类型')),
                ('unit', models.CharField(blank=True, max_length=8, null=True, verbose_name='参数单位')),
                ('config', models.JSONField(blank=True, default=dict, null=True, verbose_name='字段配置')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='描述')),
                ('enable', models.BooleanField(blank=True, help_text='默认未启用', null=True, verbose_name='启用')),
                ('category', models.ForeignKey(db_column='category_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='xj_thread.threadcategory', verbose_name='类别ID')),
            ],
            options={
                'verbose_name_plural': '05. 信息 - 扩展字段',
                'db_table': 'thread_extend_field',
                'unique_together': {('category_id', 'field')},
            },
        ),
        migrations.CreateModel(
            name='ThreadExtendData',
            fields=[
                ('thread', models.OneToOneField(db_column='thread_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='thread_extend_data', serialize=False, to='xj_thread.thread', verbose_name='信息ID')),
                ('thread_uuid', xj_thread.utils.j_ulid_field.JULIDField(db_index=True, default='1jkf5jn7dngb', max_length=32, unique=True, verbose_name='UUID')),
                ('field_1', models.DecimalField(blank=True, decimal_places=8, max_digits=32, null=True, verbose_name='自定义字段_1 (数字)')),
                ('field_2', models.DecimalField(blank=True, decimal_places=8, max_digits=32, null=True, verbose_name='自定义字段_2 (数字)')),
                ('field_3', models.DecimalField(blank=True, decimal_places=8, max_digits=32, null=True, verbose_name='自定义字段_3 (数字)')),
                ('field_4', models.DecimalField(blank=True, decimal_places=8, max_digits=32, null=True, verbose_name='自定义字段_4 (数字)')),
                ('field_5', models.DecimalField(blank=True, decimal_places=8, max_digits=32, null=True, verbose_name='自定义字段_5 (数字)')),
                ('field_6', models.DecimalField(blank=True, decimal_places=8, max_digits=32, null=True, verbose_name='自定义字段_6 (数字)')),
                ('field_7', models.DecimalField(blank=True, decimal_places=8, max_digits=32, null=True, verbose_name='自定义字段_7 (数字)')),
                ('field_8', models.DecimalField(blank=True, decimal_places=8, max_digits=32, null=True, verbose_name='自定义字段_8 (数字)')),
                ('field_9', models.DecimalField(blank=True, decimal_places=8, max_digits=32, null=True, verbose_name='自定义字段_9 (数字)')),
                ('field_10', models.DecimalField(blank=True, decimal_places=8, max_digits=32, null=True, verbose_name='自定义字段_10 (数字)')),
                ('field_11', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_11 (文本)')),
                ('field_12', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_12 (文本)')),
                ('field_13', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_13 (文本)')),
                ('field_14', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_14 (文本)')),
                ('field_15', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_15 (文本)')),
                ('field_16', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_16 (文本)')),
                ('field_17', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_17 (文本)')),
                ('field_18', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_18 (文本)')),
                ('field_19', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_19 (文本)')),
                ('field_20', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_20 (文本)')),
                ('field_21', models.TextField(blank=True, null=True, verbose_name='自定义字段_20 (长文本)')),
                ('field_22', models.TextField(blank=True, null=True, verbose_name='自定义字段_20 (长文本)')),
                ('category', models.ForeignKey(blank=True, db_column='category_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='xj_thread.threadcategory', verbose_name='类别ID')),
            ],
            options={
                'verbose_name_plural': '06. 信息 - 扩展数据',
                'db_table': 'thread_extend_data',
            },
        ),
    ]
