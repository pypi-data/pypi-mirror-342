# -*- coding: utf-8 -*-

"""
neutrinoapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from neutrinoapi.api_helper import APIHelper


class SmsVerifyResponse(object):

    """Implementation of the 'SMSVerifyResponse' model.

    Structure of sms-verify

    Attributes:
        number_valid (bool): True if this a valid phone number
        security_code (str): The security code generated, you can save this
            code to perform your own verification or you can use the <a
            href="https://www.neutrinoapi.com/api/verify-security-code/">Verify
            Security Code API</a>
        sent (bool): True if the SMS has been sent
        additional_properties (Dict[str, Any]): The additional properties for
            the model.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "number_valid": 'number-valid',
        "security_code": 'security-code',
        "sent": 'sent'
    }

    def __init__(self,
                 number_valid=None,
                 security_code=None,
                 sent=None,
                 additional_properties=None):
        """Constructor for the SmsVerifyResponse class"""

        # Initialize members of the class
        self.number_valid = number_valid 
        self.security_code = security_code 
        self.sent = sent 

        # Add additional model properties to the instance
        if additional_properties is None:
            additional_properties = {}
        self.additional_properties = additional_properties

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        number_valid = dictionary.get("number-valid") if "number-valid" in dictionary.keys() else None
        security_code = dictionary.get("security-code") if dictionary.get("security-code") else None
        sent = dictionary.get("sent") if "sent" in dictionary.keys() else None
        additional_properties = APIHelper.get_additional_properties(
            dictionary={k: v for k, v in dictionary.items() if k not in cls._names.values()},
            unboxing_function=lambda value: value)
        # Return an object of this model
        return cls(number_valid,
                   security_code,
                   sent,
                   additional_properties)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'number_valid={self.number_valid!r}, '
                f'security_code={self.security_code!r}, '
                f'sent={self.sent!r}, '
                f'additional_properties={self.additional_properties!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'number_valid={self.number_valid!s}, '
                f'security_code={self.security_code!s}, '
                f'sent={self.sent!s}, '
                f'additional_properties={self.additional_properties!s})')
