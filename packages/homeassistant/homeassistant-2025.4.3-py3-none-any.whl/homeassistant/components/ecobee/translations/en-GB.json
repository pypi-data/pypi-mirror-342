{
    "config": {
        "abort": {
            "single_instance_allowed": "Already configured. Only a single configuration possible."
        }
    },
    "entity": {
        "number": {
            "compressor_protection_min_temp": {
                "name": "Compressor minimum temperature"
            },
            "ventilator_min_type_away": {
                "name": "Ventilator minimum time away"
            },
            "ventilator_min_type_home": {
                "name": "Ventilator minimum time home"
            }
        },
        "switch": {
            "aux_heat_only": {
                "name": "Auxiliary heat only"
            }
        }
    },
    "exceptions": {
        "invalid_preset": {
            "message": "Invalid climate name, available options are: {options}"
        },
        "invalid_sensor": {
            "message": "Invalid sensor for thermostat, available options are: {options}"
        },
        "sensor_lookup_failed": {
            "message": "There was an error getting the sensor IDs from sensor names. Try reloading the ecobee integration."
        }
    },
    "services": {
        "create_vacation": {
            "description": "Creates a holiday on the selected thermostat. Note: start/end date and time must all be specified together for these parameters to have an effect. If start/end date and time are not specified, the holiday will start immediately and last 14 days (unless deleted earlier).",
            "fields": {
                "cool_temp": {
                    "description": "Cooling temperature during the holiday.",
                    "name": "Cool temperature"
                },
                "end_date": {
                    "description": "Date the holiday ends in the YYYY-MM-DD format (optional, 14 days from now if not provided along with 'End time').",
                    "name": "End date"
                },
                "end_time": {
                    "description": "Time the holiday ends, in the local time of the thermostat, in 24-hour format \"HH:MM:SS\".",
                    "name": "End time"
                },
                "entity_id": {
                    "name": "Entity"
                },
                "fan_min_on_time": {
                    "description": "Minimum number of minutes to run the fan each hour during the holiday.",
                    "name": "Fan minimum on time"
                },
                "fan_mode": {
                    "description": "Fan mode of the thermostat during the holiday.",
                    "name": "Fan mode"
                },
                "heat_temp": {
                    "description": "Heating temperature during the holiday.",
                    "name": "Heat temperature"
                },
                "start_date": {
                    "description": "Date the vacation starts in the YYYY-MM-DD format (optional, immediately if not provided along with 'Start time').",
                    "name": "Start date"
                },
                "start_time": {
                    "description": "Time the holiday starts, in the local time of the thermostat, in the 24-hour format \"HH:MM:SS\".",
                    "name": "Start time"
                },
                "vacation_name": {
                    "description": "Name of the holiday to create; must be unique on the thermostat.",
                    "name": "Holiday name"
                }
            },
            "name": "Create holiday"
        },
        "delete_vacation": {
            "description": "Deletes a holiday on the selected thermostat.",
            "fields": {
                "entity_id": {
                    "name": "Entity"
                },
                "vacation_name": {
                    "description": "Name of the holiday to delete."
                }
            },
            "name": "Delete holiday"
        },
        "resume_program": {
            "description": "Resumes the programmed schedule.",
            "fields": {
                "entity_id": {
                    "description": "Name(s) of entities to change.",
                    "name": "Entity"
                },
                "resume_all": {
                    "description": "Resume all events and return to the scheduled programme.",
                    "name": "Resume all"
                }
            },
            "name": "Resume programme"
        },
        "set_dst_mode": {
            "description": "Enables/disables automatic daylight savings time.",
            "fields": {
                "dst_enabled": {
                    "description": "Enable automatic daylight savings time.",
                    "name": "Daylight savings time enabled"
                }
            },
            "name": "Set daylight savings time mode"
        },
        "set_fan_min_on_time": {
            "description": "Sets the minimum amount of time that the fan will run per hour.",
            "fields": {
                "entity_id": {
                    "description": "Name(s) of entities to change.",
                    "name": "Entity"
                },
                "fan_min_on_time": {
                    "description": "Minimum number of minutes to run the fan each hour."
                }
            },
            "name": "Set fan minimum on time"
        },
        "set_mic_mode": {
            "fields": {
                "mic_enabled": {
                    "description": "Enable Alexa microphone.",
                    "name": "Mic enabled"
                }
            },
            "name": "Set mic mode"
        },
        "set_occupancy_modes": {
            "description": "Enables/disables Smart Home/Away and Follow Me modes.",
            "fields": {
                "auto_away": {
                    "description": "Enable Smart Home/Away mode.",
                    "name": "Auto away"
                },
                "follow_me": {
                    "description": "Enable Follow Me mode.",
                    "name": "Follow me"
                }
            },
            "name": "Set occupancy modes"
        },
        "set_sensors_used_in_climate": {
            "description": "Sets the participating sensors for a climate programme.",
            "fields": {
                "device_ids": {
                    "description": "Sensors to set as participating sensors.",
                    "name": "Sensors"
                },
                "entity_id": {
                    "name": "Entity"
                },
                "preset_mode": {
                    "description": "Name of the climate programme to set the sensors active on.\nDefaults to currently active programme.",
                    "name": "Climate Name"
                }
            },
            "name": "Set sensors used in climate"
        }
    }
}