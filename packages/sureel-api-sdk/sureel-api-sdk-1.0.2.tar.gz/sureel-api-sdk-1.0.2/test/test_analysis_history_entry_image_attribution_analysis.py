# coding: utf-8

"""
    Sureel API

    API for the Sureel network.

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.analysis_history_entry_image_attribution_analysis import AnalysisHistoryEntryImageAttributionAnalysis

class TestAnalysisHistoryEntryImageAttributionAnalysis(unittest.TestCase):
    """AnalysisHistoryEntryImageAttributionAnalysis unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalysisHistoryEntryImageAttributionAnalysis:
        """Test AnalysisHistoryEntryImageAttributionAnalysis
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalysisHistoryEntryImageAttributionAnalysis`
        """
        model = AnalysisHistoryEntryImageAttributionAnalysis()
        if include_optional:
            return AnalysisHistoryEntryImageAttributionAnalysis(
                similar_files = [
                    openapi_client.models.analysis_history_entry_image_attribution_analysis_similar_files_inner.AnalysisHistoryEntry_imageAttributionAnalysis_similarFiles_inner(
                        attribution_likelihood = 1.337, 
                        cross_correlation = 1.337, 
                        color_matching = openapi_client.models.analysis_history_entry_image_attribution_analysis_similar_files_inner_color_matching.AnalysisHistoryEntry_imageAttributionAnalysis_similarFiles_inner_color_matching(
                            g_channel = 1.337, 
                            r_channel = 1.337, 
                            b_channel = 1.337, ), 
                        color_matching_combined = 1.337, 
                        pixelwise_similarity = 1.337, 
                        filename = '', 
                        signed_url = '', 
                        signed_url_thumbnail = '', 
                        username = '', 
                        collection_name = '', 
                        collection_uuid = '', )
                    ],
                top_metrics = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics(
                    attribution_likelihood = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_attribution_likelihood.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_attribution_likelihood(
                        value = 1.337, 
                        signed_url = '', 
                        signed_url_thumbnail = '', 
                        username = '', 
                        collection_name = '', 
                        collection_uuid = '', 
                        track_name = '', ), 
                    cross_correlation = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_attribution_likelihood.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_attribution_likelihood(
                        value = 1.337, 
                        signed_url = '', 
                        signed_url_thumbnail = '', 
                        username = '', 
                        collection_name = '', 
                        collection_uuid = '', 
                        track_name = '', ), 
                    color_matching = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_color_matching.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_color_matching(
                        g_channel = , 
                        r_channel = , 
                        b_channel = , ), 
                    color_matching_combined = , 
                    pixelwise_similarity = , 
                    identical_matches = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_identical_matches.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_identical_matches(
                        value = 1.337, 
                        signed_urls = [
                            null
                            ], 
                        signed_urls_thumbnails = [
                            null
                            ], ), )
            )
        else:
            return AnalysisHistoryEntryImageAttributionAnalysis(
                similar_files = [
                    openapi_client.models.analysis_history_entry_image_attribution_analysis_similar_files_inner.AnalysisHistoryEntry_imageAttributionAnalysis_similarFiles_inner(
                        attribution_likelihood = 1.337, 
                        cross_correlation = 1.337, 
                        color_matching = openapi_client.models.analysis_history_entry_image_attribution_analysis_similar_files_inner_color_matching.AnalysisHistoryEntry_imageAttributionAnalysis_similarFiles_inner_color_matching(
                            g_channel = 1.337, 
                            r_channel = 1.337, 
                            b_channel = 1.337, ), 
                        color_matching_combined = 1.337, 
                        pixelwise_similarity = 1.337, 
                        filename = '', 
                        signed_url = '', 
                        signed_url_thumbnail = '', 
                        username = '', 
                        collection_name = '', 
                        collection_uuid = '', )
                    ],
                top_metrics = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics(
                    attribution_likelihood = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_attribution_likelihood.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_attribution_likelihood(
                        value = 1.337, 
                        signed_url = '', 
                        signed_url_thumbnail = '', 
                        username = '', 
                        collection_name = '', 
                        collection_uuid = '', 
                        track_name = '', ), 
                    cross_correlation = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_attribution_likelihood.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_attribution_likelihood(
                        value = 1.337, 
                        signed_url = '', 
                        signed_url_thumbnail = '', 
                        username = '', 
                        collection_name = '', 
                        collection_uuid = '', 
                        track_name = '', ), 
                    color_matching = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_color_matching.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_color_matching(
                        g_channel = , 
                        r_channel = , 
                        b_channel = , ), 
                    color_matching_combined = , 
                    pixelwise_similarity = , 
                    identical_matches = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_identical_matches.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_identical_matches(
                        value = 1.337, 
                        signed_urls = [
                            null
                            ], 
                        signed_urls_thumbnails = [
                            null
                            ], ), ),
        )
        """

    def testAnalysisHistoryEntryImageAttributionAnalysis(self):
        """Test AnalysisHistoryEntryImageAttributionAnalysis"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
