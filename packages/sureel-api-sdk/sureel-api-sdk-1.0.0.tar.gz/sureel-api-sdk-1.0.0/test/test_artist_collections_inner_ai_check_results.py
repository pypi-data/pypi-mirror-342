# coding: utf-8

"""
    Sureel API

    API for the Sureel network.

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.artist_collections_inner_ai_check_results import ArtistCollectionsInnerAiCheckResults

class TestArtistCollectionsInnerAiCheckResults(unittest.TestCase):
    """ArtistCollectionsInnerAiCheckResults unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ArtistCollectionsInnerAiCheckResults:
        """Test ArtistCollectionsInnerAiCheckResults
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ArtistCollectionsInnerAiCheckResults`
        """
        model = ArtistCollectionsInnerAiCheckResults()
        if include_optional:
            return ArtistCollectionsInnerAiCheckResults(
                master = [
                    openapi_client.models.artist_collections_inner_ai_check_results_master_inner.ArtistCollections_inner_ai_check_results_master_inner(
                        filename = '', 
                        duration = 1.337, 
                        period = 1.337, 
                        values = [
                            1.337
                            ], 
                        average_value = 1.337, 
                        max_value = 1.337, )
                    ],
                instrumentals = [
                    openapi_client.models.artist_collections_inner_ai_check_results_master_inner.ArtistCollections_inner_ai_check_results_master_inner(
                        filename = '', 
                        duration = 1.337, 
                        period = 1.337, 
                        values = [
                            1.337
                            ], 
                        average_value = 1.337, 
                        max_value = 1.337, )
                    ],
                vocals = [
                    openapi_client.models.artist_collections_inner_ai_check_results_master_inner.ArtistCollections_inner_ai_check_results_master_inner(
                        filename = '', 
                        duration = 1.337, 
                        period = 1.337, 
                        values = [
                            1.337
                            ], 
                        average_value = 1.337, 
                        max_value = 1.337, )
                    ],
                bass = [
                    openapi_client.models.artist_collections_inner_ai_check_results_master_inner.ArtistCollections_inner_ai_check_results_master_inner(
                        filename = '', 
                        duration = 1.337, 
                        period = 1.337, 
                        values = [
                            1.337
                            ], 
                        average_value = 1.337, 
                        max_value = 1.337, )
                    ],
                drums = [
                    openapi_client.models.artist_collections_inner_ai_check_results_master_inner.ArtistCollections_inner_ai_check_results_master_inner(
                        filename = '', 
                        duration = 1.337, 
                        period = 1.337, 
                        values = [
                            1.337
                            ], 
                        average_value = 1.337, 
                        max_value = 1.337, )
                    ]
            )
        else:
            return ArtistCollectionsInnerAiCheckResults(
                master = [
                    openapi_client.models.artist_collections_inner_ai_check_results_master_inner.ArtistCollections_inner_ai_check_results_master_inner(
                        filename = '', 
                        duration = 1.337, 
                        period = 1.337, 
                        values = [
                            1.337
                            ], 
                        average_value = 1.337, 
                        max_value = 1.337, )
                    ],
                instrumentals = [
                    openapi_client.models.artist_collections_inner_ai_check_results_master_inner.ArtistCollections_inner_ai_check_results_master_inner(
                        filename = '', 
                        duration = 1.337, 
                        period = 1.337, 
                        values = [
                            1.337
                            ], 
                        average_value = 1.337, 
                        max_value = 1.337, )
                    ],
                vocals = [
                    openapi_client.models.artist_collections_inner_ai_check_results_master_inner.ArtistCollections_inner_ai_check_results_master_inner(
                        filename = '', 
                        duration = 1.337, 
                        period = 1.337, 
                        values = [
                            1.337
                            ], 
                        average_value = 1.337, 
                        max_value = 1.337, )
                    ],
                bass = [
                    openapi_client.models.artist_collections_inner_ai_check_results_master_inner.ArtistCollections_inner_ai_check_results_master_inner(
                        filename = '', 
                        duration = 1.337, 
                        period = 1.337, 
                        values = [
                            1.337
                            ], 
                        average_value = 1.337, 
                        max_value = 1.337, )
                    ],
                drums = [
                    openapi_client.models.artist_collections_inner_ai_check_results_master_inner.ArtistCollections_inner_ai_check_results_master_inner(
                        filename = '', 
                        duration = 1.337, 
                        period = 1.337, 
                        values = [
                            1.337
                            ], 
                        average_value = 1.337, 
                        max_value = 1.337, )
                    ],
        )
        """

    def testArtistCollectionsInnerAiCheckResults(self):
        """Test ArtistCollectionsInnerAiCheckResults"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
