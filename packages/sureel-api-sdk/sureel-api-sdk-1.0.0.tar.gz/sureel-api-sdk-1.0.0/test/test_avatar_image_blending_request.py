# coding: utf-8

"""
    Sureel API

    API for the Sureel network.

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.avatar_image_blending_request import AvatarImageBlendingRequest

class TestAvatarImageBlendingRequest(unittest.TestCase):
    """AvatarImageBlendingRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AvatarImageBlendingRequest:
        """Test AvatarImageBlendingRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AvatarImageBlendingRequest`
        """
        model = AvatarImageBlendingRequest()
        if include_optional:
            return AvatarImageBlendingRequest(
                prompt = '',
                content_image_path = '',
                style_images = [
                    openapi_client.models.style_image.StyleImage(
                        style_image_path = '', 
                        style_image_weight = null, )
                    ],
                control_net = openapi_client.models.control_net_request_control_net.ControlNetRequest_controlNet(
                    conditioning_scale = null, 
                    guidance_start = 0, 
                    guidance_end = 0, ),
                negative_prompt = '',
                apply_watermark = True,
                custom_watermark = '',
                style_preset = '',
                inference_steps = 10,
                cfg = 0,
                seed = -2147483648,
                generate_attribution = True,
                generate_provenance = True,
                batch_size = 1,
                generate_preview = True,
                webhook = ''
            )
        else:
            return AvatarImageBlendingRequest(
                content_image_path = '',
                style_images = [
                    openapi_client.models.style_image.StyleImage(
                        style_image_path = '', 
                        style_image_weight = null, )
                    ],
        )
        """

    def testAvatarImageBlendingRequest(self):
        """Test AvatarImageBlendingRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
