# coding: utf-8

"""
    Sureel API

    API for the Sureel network.

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner_values_inner import AnalysisHistoryEntryAudioAttributionAnalysisMasterInnerValuesInnerValuesInner

class TestAnalysisHistoryEntryAudioAttributionAnalysisMasterInnerValuesInnerValuesInner(unittest.TestCase):
    """AnalysisHistoryEntryAudioAttributionAnalysisMasterInnerValuesInnerValuesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalysisHistoryEntryAudioAttributionAnalysisMasterInnerValuesInnerValuesInner:
        """Test AnalysisHistoryEntryAudioAttributionAnalysisMasterInnerValuesInnerValuesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalysisHistoryEntryAudioAttributionAnalysisMasterInnerValuesInnerValuesInner`
        """
        model = AnalysisHistoryEntryAudioAttributionAnalysisMasterInnerValuesInnerValuesInner()
        if include_optional:
            return AnalysisHistoryEntryAudioAttributionAnalysisMasterInnerValuesInnerValuesInner(
                attribution_likelihood = [
                    1.337
                    ],
                max_attribution = [
                    1.337
                    ],
                average_attribution = [
                    1.337
                    ],
                track = '',
                filename = '',
                signed_url = '',
                is_spotify_url = True,
                username = '',
                collection_name = '',
                collection_uuid = '',
                track_name = ''
            )
        else:
            return AnalysisHistoryEntryAudioAttributionAnalysisMasterInnerValuesInnerValuesInner(
                attribution_likelihood = [
                    1.337
                    ],
                max_attribution = [
                    1.337
                    ],
                average_attribution = [
                    1.337
                    ],
                is_spotify_url = True,
        )
        """

    def testAnalysisHistoryEntryAudioAttributionAnalysisMasterInnerValuesInnerValuesInner(self):
        """Test AnalysisHistoryEntryAudioAttributionAnalysisMasterInnerValuesInnerValuesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
