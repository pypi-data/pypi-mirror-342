# coding: utf-8

"""
    Sureel API

    API for the Sureel network.

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_own_collections200_response import GetOwnCollections200Response

class TestGetOwnCollections200Response(unittest.TestCase):
    """GetOwnCollections200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetOwnCollections200Response:
        """Test GetOwnCollections200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetOwnCollections200Response`
        """
        model = GetOwnCollections200Response()
        if include_optional:
            return GetOwnCollections200Response(
                username = '',
                auth0_id = '',
                profile_picture_s3_key = '',
                cover_image_s3_key = '',
                picture = '',
                cover_image = '',
                family_name = '',
                given_name = '',
                email = '',
                profile_description = '',
                url_external_website = '',
                updated_at = None,
                user_role = None,
                stripe_customer_id = '',
                subscription_tier = None,
                customer_name = '',
                connected_api_user = '',
                logo = '',
                api_terms_and_conditions = True,
                created_at = 1.337,
                zero_balance_email_sent = True,
                low_balance_email_sent = True,
                balance_treshold = 1.337,
                sub_labels = [
                    ''
                    ],
                spotify_user_id = '',
                spotify_display_name = '',
                terms_and_conditions = True,
                show_in_frontend = True,
                collection_uuids = [
                    ''
                    ],
                collections = [
                    openapi_client.models.artist_collections_inner.ArtistCollections_inner(
                        collection_uuid = '', 
                        username = '', 
                        collection_name = '', 
                        collection_description = '', 
                        upc = '', 
                        status = null, 
                        status_description = '', 
                        file_ids = [
                            ''
                            ], 
                        artworks_s3_keys = [
                            ''
                            ], 
                        artworks = [
                            ''
                            ], 
                        artworks_full_res = [
                            ''
                            ], 
                        is_spotify_url = True, 
                        prompt_guidance = '', 
                        show_in_frontend = True, 
                        styles = [
                            ''
                            ], 
                        use_for_finetuning = True, 
                        use_for_training = True, 
                        knowledge_acquisition_ratio = 1.337, 
                        ai_influence = '', 
                        external_id = '', 
                        original_cover_art_s3_key = '', 
                        original_cover_art = '', 
                        audio_language = '', 
                        release_date = '', 
                        recording_studio = '', 
                        publisher = '', 
                        producer = '', 
                        composer = '', 
                        song_writer = '', 
                        rights_administrator = '', 
                        rights_owner = '', 
                        created_at = 1.337, 
                        updated_at = 1.337, 
                        collection_published_email_sent = 1.337, 
                        customer_name = '', 
                        lora_weights_s3_key = '', 
                        content_type = '', 
                        attribution_setup_status = '', 
                        suno_analysis_request_ids = [
                            ''
                            ], 
                        suno_analysis_result = [
                            openapi_client.models.artist_collections_inner_suno_analysis_result_inner.ArtistCollections_inner_suno_analysis_result_inner(
                                artist_name = '', 
                                album_name = '', 
                                track_name = '', 
                                original_song = '', 
                                histogram_values = openapi_client.models.artist_collections_inner_suno_analysis_result_inner_histogram_values.ArtistCollections_inner_suno_analysis_result_inner_histogramValues(
                                    master = [
                                        openapi_client.models.artist_collections_inner_suno_analysis_result_inner_histogram_values_master_inner.ArtistCollections_inner_suno_analysis_result_inner_histogramValues_master_inner(
                                            duration = 1.337, 
                                            period = 1.337, 
                                            values = [
                                                openapi_client.models.artist_collections_inner_suno_analysis_result_inner_histogram_values_master_inner_values_inner.ArtistCollections_inner_suno_analysis_result_inner_histogramValues_master_inner_values_inner(
                                                    bin_start = 1.337, 
                                                    bin_end = 1.337, 
                                                    count = [
                                                        1.337
                                                        ], )
                                                ], )
                                        ], ), )
                            ], 
                        embeddings_s3_key = '', 
                        embeddings_s3_keys = [
                            ''
                            ], 
                        external_check_results = openapi_client.models.opt_out_analysis.OptOutAnalysis(), 
                        internal_check_results = openapi_client.models.opt_out_analysis.OptOutAnalysis(), 
                        ai_check_results = openapi_client.models.artist_collections_inner_ai_check_results.ArtistCollections_inner_ai_check_results(
                            master = [
                                openapi_client.models.artist_collections_inner_ai_check_results_master_inner.ArtistCollections_inner_ai_check_results_master_inner(
                                    filename = '', 
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        1.337
                                        ], 
                                    average_value = 1.337, 
                                    max_value = 1.337, )
                                ], 
                            instrumentals = [
                                openapi_client.models.artist_collections_inner_ai_check_results_master_inner.ArtistCollections_inner_ai_check_results_master_inner(
                                    filename = '', 
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        1.337
                                        ], 
                                    average_value = 1.337, 
                                    max_value = 1.337, )
                                ], 
                            vocals = [
                                
                                ], 
                            bass = [
                                
                                ], 
                            drums = [
                                
                                ], ), 
                        synthesis_rules = openapi_client.models.artist_collections_inner_synthesis_rules.ArtistCollections_inner_synthesis_rules(
                            no_attribution_greater_than = 1.337, 
                            no_attribution_smaller_than = 1.337, 
                            no_shared_attribution_with_artist = '', 
                            no_shared_attribution_with_genre = '', ), 
                        label = '', 
                        use_for_training_timestamp = 1.337, 
                        ai_company_notication_status = '', )
                    ],
                attribution_setup_status = '',
                suno_analysis_request_ids = [
                    ''
                    ],
                suno_analysis_result = [
                    openapi_client.models.artist_collections_inner_suno_analysis_result_inner.ArtistCollections_inner_suno_analysis_result_inner(
                        artist_name = '', 
                        album_name = '', 
                        track_name = '', 
                        original_song = '', 
                        histogram_values = openapi_client.models.artist_collections_inner_suno_analysis_result_inner_histogram_values.ArtistCollections_inner_suno_analysis_result_inner_histogramValues(
                            master = [
                                openapi_client.models.artist_collections_inner_suno_analysis_result_inner_histogram_values_master_inner.ArtistCollections_inner_suno_analysis_result_inner_histogramValues_master_inner(
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        openapi_client.models.artist_collections_inner_suno_analysis_result_inner_histogram_values_master_inner_values_inner.ArtistCollections_inner_suno_analysis_result_inner_histogramValues_master_inner_values_inner(
                                            bin_start = 1.337, 
                                            bin_end = 1.337, 
                                            count = [
                                                1.337
                                                ], )
                                        ], )
                                ], ), )
                    ]
            )
        else:
            return GetOwnCollections200Response(
                username = '',
        )
        """

    def testGetOwnCollections200Response(self):
        """Test GetOwnCollections200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
