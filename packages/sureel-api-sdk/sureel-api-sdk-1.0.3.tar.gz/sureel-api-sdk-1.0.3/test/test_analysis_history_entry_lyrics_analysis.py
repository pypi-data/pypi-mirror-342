# coding: utf-8

"""
    Sureel API

    API for the Sureel network.

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.analysis_history_entry_lyrics_analysis import AnalysisHistoryEntryLyricsAnalysis

class TestAnalysisHistoryEntryLyricsAnalysis(unittest.TestCase):
    """AnalysisHistoryEntryLyricsAnalysis unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalysisHistoryEntryLyricsAnalysis:
        """Test AnalysisHistoryEntryLyricsAnalysis
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalysisHistoryEntryLyricsAnalysis`
        """
        model = AnalysisHistoryEntryLyricsAnalysis()
        if include_optional:
            return AnalysisHistoryEntryLyricsAnalysis(
                filename = '',
                lyrics = '',
                lyrics_attribution = [
                    openapi_client.models.analysis_history_entry_lyrics_analysis_lyrics_attribution_inner.AnalysisHistoryEntry_lyricsAnalysis_lyrics_attribution_inner(
                        duration = 1.337, 
                        period = 1.337, 
                        values = [
                            openapi_client.models.analysis_history_entry_lyrics_analysis_lyrics_attribution_inner_values_inner.AnalysisHistoryEntry_lyricsAnalysis_lyrics_attribution_inner_values_inner(
                                score = [
                                    1.337
                                    ], 
                                mean_score = 1.337, 
                                similar_lyrics_inspected = [
                                    ''
                                    ], 
                                similar_lyrics_original = [
                                    ''
                                    ], 
                                track_name = '', 
                                track = '', 
                                is_spotify_url = True, )
                            ], )
                    ],
                translated_lyrics = ''
            )
        else:
            return AnalysisHistoryEntryLyricsAnalysis(
        )
        """

    def testAnalysisHistoryEntryLyricsAnalysis(self):
        """Test AnalysisHistoryEntryLyricsAnalysis"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
