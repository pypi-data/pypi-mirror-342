# coding: utf-8

"""
    Sureel API

    API for the Sureel network.

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner import AnalysisHistoryEntryAudioAttributionAnalysisMasterInner

class TestAnalysisHistoryEntryAudioAttributionAnalysisMasterInner(unittest.TestCase):
    """AnalysisHistoryEntryAudioAttributionAnalysisMasterInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalysisHistoryEntryAudioAttributionAnalysisMasterInner:
        """Test AnalysisHistoryEntryAudioAttributionAnalysisMasterInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalysisHistoryEntryAudioAttributionAnalysisMasterInner`
        """
        model = AnalysisHistoryEntryAudioAttributionAnalysisMasterInner()
        if include_optional:
            return AnalysisHistoryEntryAudioAttributionAnalysisMasterInner(
                duration = 1.337,
                period = 1.337,
                values = [
                    openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner_values_inner(
                        filename = '', 
                        values = [
                            openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner_values_inner.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner_values_inner_values_inner(
                                attribution_likelihood = [
                                    1.337
                                    ], 
                                max_attribution = [
                                    1.337
                                    ], 
                                average_attribution = [
                                    1.337
                                    ], 
                                track = '', 
                                filename = '', 
                                signed_url = '', 
                                is_spotify_url = True, 
                                username = '', 
                                collection_name = '', 
                                collection_uuid = '', 
                                track_name = '', )
                            ], 
                        top_metrics = openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner_top_metrics.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner_values_inner_topMetrics(
                            attribution_likelihood = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_attribution_likelihood.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_attribution_likelihood(
                                value = 1.337, 
                                signed_url = '', 
                                signed_url_thumbnail = '', 
                                username = '', 
                                collection_name = '', 
                                collection_uuid = '', 
                                track_name = '', ), 
                            identical_matches = openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner_top_metrics_identical_matches.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner_values_inner_topMetrics_identical_matches(
                                value = 1.337, 
                                signed_urls = [
                                    null
                                    ], ), 
                            max_attribution = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_attribution_likelihood.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_attribution_likelihood(
                                value = 1.337, 
                                signed_url = '', 
                                signed_url_thumbnail = '', 
                                username = '', 
                                collection_name = '', 
                                collection_uuid = '', 
                                track_name = '', ), 
                            average_attribution = , ), )
                    ]
            )
        else:
            return AnalysisHistoryEntryAudioAttributionAnalysisMasterInner(
                duration = 1.337,
                period = 1.337,
                values = [
                    openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner_values_inner(
                        filename = '', 
                        values = [
                            openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner_values_inner.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner_values_inner_values_inner(
                                attribution_likelihood = [
                                    1.337
                                    ], 
                                max_attribution = [
                                    1.337
                                    ], 
                                average_attribution = [
                                    1.337
                                    ], 
                                track = '', 
                                filename = '', 
                                signed_url = '', 
                                is_spotify_url = True, 
                                username = '', 
                                collection_name = '', 
                                collection_uuid = '', 
                                track_name = '', )
                            ], 
                        top_metrics = openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner_top_metrics.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner_values_inner_topMetrics(
                            attribution_likelihood = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_attribution_likelihood.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_attribution_likelihood(
                                value = 1.337, 
                                signed_url = '', 
                                signed_url_thumbnail = '', 
                                username = '', 
                                collection_name = '', 
                                collection_uuid = '', 
                                track_name = '', ), 
                            identical_matches = openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner_top_metrics_identical_matches.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner_values_inner_topMetrics_identical_matches(
                                value = 1.337, 
                                signed_urls = [
                                    null
                                    ], ), 
                            max_attribution = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_attribution_likelihood.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_attribution_likelihood(
                                value = 1.337, 
                                signed_url = '', 
                                signed_url_thumbnail = '', 
                                username = '', 
                                collection_name = '', 
                                collection_uuid = '', 
                                track_name = '', ), 
                            average_attribution = , ), )
                    ],
        )
        """

    def testAnalysisHistoryEntryAudioAttributionAnalysisMasterInner(self):
        """Test AnalysisHistoryEntryAudioAttributionAnalysisMasterInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
