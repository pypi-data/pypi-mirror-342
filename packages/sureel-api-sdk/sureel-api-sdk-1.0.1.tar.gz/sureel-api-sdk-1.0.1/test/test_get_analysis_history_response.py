# coding: utf-8

"""
    Sureel API

    API for the Sureel network.

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_analysis_history_response import GetAnalysisHistoryResponse

class TestGetAnalysisHistoryResponse(unittest.TestCase):
    """GetAnalysisHistoryResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetAnalysisHistoryResponse:
        """Test GetAnalysisHistoryResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetAnalysisHistoryResponse`
        """
        model = GetAnalysisHistoryResponse()
        if include_optional:
            return GetAnalysisHistoryResponse(
                analysis_history = [
                    openapi_client.models.analysis_history_entry.AnalysisHistoryEntry(
                        status = null, 
                        error_message = null, 
                        endpoint = null, 
                        request_id = null, 
                        request_body = null, 
                        created_at = null, 
                        images_signed_urls = [
                            ''
                            ], 
                        preview_images_signed_urls = [
                            ''
                            ], 
                        attribution = null, 
                        provenance = null, 
                        content_image = '', 
                        style_image = '', 
                        mask_image = '', 
                        artist_profile_pictures = null, 
                        seed = null, 
                        request_data = null, 
                        image_attribution_analysis = openapi_client.models.analysis_history_entry_image_attribution_analysis.AnalysisHistoryEntry_imageAttributionAnalysis(
                            similar_files = [
                                openapi_client.models.analysis_history_entry_image_attribution_analysis_similar_files_inner.AnalysisHistoryEntry_imageAttributionAnalysis_similarFiles_inner(
                                    attribution_likelihood = 1.337, 
                                    cross_correlation = 1.337, 
                                    color_matching = openapi_client.models.analysis_history_entry_image_attribution_analysis_similar_files_inner_color_matching.AnalysisHistoryEntry_imageAttributionAnalysis_similarFiles_inner_color_matching(
                                        g_channel = 1.337, 
                                        r_channel = 1.337, 
                                        b_channel = 1.337, ), 
                                    color_matching_combined = 1.337, 
                                    pixelwise_similarity = 1.337, 
                                    filename = '', 
                                    signed_url = '', 
                                    signed_url_thumbnail = '', 
                                    username = '', 
                                    collection_name = '', 
                                    collection_uuid = '', )
                                ], 
                            top_metrics = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics(
                                attribution_likelihood = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_attribution_likelihood.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_attribution_likelihood(
                                    value = 1.337, 
                                    signed_url = '', 
                                    signed_url_thumbnail = '', 
                                    username = '', 
                                    collection_name = '', 
                                    collection_uuid = '', 
                                    track_name = '', ), 
                                cross_correlation = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_attribution_likelihood.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_attribution_likelihood(
                                    value = 1.337, 
                                    signed_url = '', 
                                    signed_url_thumbnail = '', 
                                    username = '', 
                                    collection_name = '', 
                                    collection_uuid = '', 
                                    track_name = '', ), 
                                color_matching = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_color_matching.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_color_matching(
                                    g_channel = , 
                                    r_channel = , 
                                    b_channel = , ), 
                                color_matching_combined = , 
                                pixelwise_similarity = , 
                                identical_matches = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_identical_matches.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_identical_matches(
                                    value = 1.337, 
                                    signed_urls = [
                                        null
                                        ], 
                                    signed_urls_thumbnails = [
                                        null
                                        ], ), ), ), 
                        audios_signed_urls = [
                            ''
                            ], 
                        stem_splitted_audios_signed_urls = [
                            ''
                            ], 
                        content_audio = '', 
                        attribution_per_collection = openapi_client.models.attribution_with_stems.AttributionWithStems(
                            master = [
                                openapi_client.models.attribution_with_stems_master_inner.AttributionWithStems_master_inner(
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        openapi_client.models.attribution.Attribution(
                                            filename = '', 
                                            values = [
                                                openapi_client.models.attribution_1_values_inner.Attribution_1_values_inner(
                                                    artist = '', 
                                                    value = 1.337, 
                                                    username = '', 
                                                    collection_name = '', 
                                                    collection_uuid = '', 
                                                    track_name = '', )
                                                ], )
                                        ], )
                                ], 
                            instrumentals = [
                                openapi_client.models.attribution_with_stems_master_inner.AttributionWithStems_master_inner(
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        openapi_client.models.attribution.Attribution(
                                            filename = '', 
                                            values = [
                                                openapi_client.models.attribution_1_values_inner.Attribution_1_values_inner(
                                                    artist = '', 
                                                    value = 1.337, 
                                                    username = '', 
                                                    collection_name = '', 
                                                    collection_uuid = '', 
                                                    track_name = '', )
                                                ], )
                                        ], )
                                ], 
                            vocals = [
                                
                                ], 
                            bass = [
                                
                                ], 
                            drums = [
                                
                                ], ), 
                        attribution_per_track = openapi_client.models.attribution_with_stems.AttributionWithStems(), 
                        audio_attribution_analysis = openapi_client.models.analysis_history_entry_audio_attribution_analysis.AnalysisHistoryEntry_audioAttributionAnalysis(
                            master = [
                                openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner(
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner_values_inner(
                                            filename = '', 
                                            values = [
                                                openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner_values_inner.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner_values_inner_values_inner(
                                                    attribution_likelihood = [
                                                        1.337
                                                        ], 
                                                    max_attribution = [
                                                        1.337
                                                        ], 
                                                    average_attribution = [
                                                        1.337
                                                        ], 
                                                    track = '', 
                                                    filename = '', 
                                                    signed_url = '', 
                                                    is_spotify_url = True, 
                                                    username = '', 
                                                    collection_name = '', 
                                                    collection_uuid = '', 
                                                    track_name = '', )
                                                ], )
                                        ], )
                                ], 
                            instrumentals = [
                                openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner(
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner_values_inner(
                                            filename = '', 
                                            values = [
                                                openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner_values_inner.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner_values_inner_values_inner(
                                                    attribution_likelihood = [
                                                        1.337
                                                        ], 
                                                    max_attribution = [
                                                        1.337
                                                        ], 
                                                    average_attribution = [
                                                        1.337
                                                        ], 
                                                    track = '', 
                                                    filename = '', 
                                                    signed_url = '', 
                                                    is_spotify_url = True, 
                                                    username = '', 
                                                    collection_name = '', 
                                                    collection_uuid = '', 
                                                    track_name = '', )
                                                ], )
                                        ], )
                                ], 
                            vocals = [
                                
                                ], 
                            bass = [
                                
                                ], 
                            drums = [
                                
                                ], ), 
                        opt_out_analysis = openapi_client.models.opt_out_analysis.OptOutAnalysis(), 
                        lyrics_analysis = openapi_client.models.analysis_history_entry_lyrics_analysis.AnalysisHistoryEntry_lyricsAnalysis(
                            filename = '', 
                            lyrics = '', 
                            lyrics_attribution = [
                                openapi_client.models.analysis_history_entry_lyrics_analysis_lyrics_attribution_inner.AnalysisHistoryEntry_lyricsAnalysis_lyrics_attribution_inner(
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        openapi_client.models.analysis_history_entry_lyrics_analysis_lyrics_attribution_inner_values_inner.AnalysisHistoryEntry_lyricsAnalysis_lyrics_attribution_inner_values_inner(
                                            score = [
                                                1.337
                                                ], 
                                            mean_score = 1.337, 
                                            similar_lyrics_inspected = [
                                                ''
                                                ], 
                                            similar_lyrics_original = [
                                                ''
                                                ], 
                                            track_name = '', 
                                            track = '', 
                                            is_spotify_url = True, )
                                        ], )
                                ], 
                            translated_lyrics = '', ), 
                        ai_generated_likelihood = openapi_client.models.artist_collections_inner_ai_check_results.ArtistCollections_inner_ai_check_results(
                            master = [
                                openapi_client.models.artist_collections_inner_ai_check_results_master_inner.ArtistCollections_inner_ai_check_results_master_inner(
                                    filename = '', 
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        1.337
                                        ], 
                                    average_value = 1.337, 
                                    max_value = 1.337, )
                                ], 
                            instrumentals = [
                                openapi_client.models.artist_collections_inner_ai_check_results_master_inner.ArtistCollections_inner_ai_check_results_master_inner(
                                    filename = '', 
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        1.337
                                        ], 
                                    average_value = 1.337, 
                                    max_value = 1.337, )
                                ], 
                            vocals = [
                                
                                ], 
                            bass = [
                                
                                ], 
                            drums = [
                                
                                ], ), 
                        similar_tracks = [
                            openapi_client.models.analysis_history_entry_similar_tracks_inner.AnalysisHistoryEntry_similarTracks_inner(
                                track = '', 
                                signed_url = '', 
                                is_spotify_url = True, 
                                username = '', 
                                collection_name = '', 
                                collection_uuid = '', 
                                track_name = '', )
                            ], 
                        artist_uuid = '', )
                    ],
                last_evaluated_key = ''
            )
        else:
            return GetAnalysisHistoryResponse(
                analysis_history = [
                    openapi_client.models.analysis_history_entry.AnalysisHistoryEntry(
                        status = null, 
                        error_message = null, 
                        endpoint = null, 
                        request_id = null, 
                        request_body = null, 
                        created_at = null, 
                        images_signed_urls = [
                            ''
                            ], 
                        preview_images_signed_urls = [
                            ''
                            ], 
                        attribution = null, 
                        provenance = null, 
                        content_image = '', 
                        style_image = '', 
                        mask_image = '', 
                        artist_profile_pictures = null, 
                        seed = null, 
                        request_data = null, 
                        image_attribution_analysis = openapi_client.models.analysis_history_entry_image_attribution_analysis.AnalysisHistoryEntry_imageAttributionAnalysis(
                            similar_files = [
                                openapi_client.models.analysis_history_entry_image_attribution_analysis_similar_files_inner.AnalysisHistoryEntry_imageAttributionAnalysis_similarFiles_inner(
                                    attribution_likelihood = 1.337, 
                                    cross_correlation = 1.337, 
                                    color_matching = openapi_client.models.analysis_history_entry_image_attribution_analysis_similar_files_inner_color_matching.AnalysisHistoryEntry_imageAttributionAnalysis_similarFiles_inner_color_matching(
                                        g_channel = 1.337, 
                                        r_channel = 1.337, 
                                        b_channel = 1.337, ), 
                                    color_matching_combined = 1.337, 
                                    pixelwise_similarity = 1.337, 
                                    filename = '', 
                                    signed_url = '', 
                                    signed_url_thumbnail = '', 
                                    username = '', 
                                    collection_name = '', 
                                    collection_uuid = '', )
                                ], 
                            top_metrics = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics(
                                attribution_likelihood = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_attribution_likelihood.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_attribution_likelihood(
                                    value = 1.337, 
                                    signed_url = '', 
                                    signed_url_thumbnail = '', 
                                    username = '', 
                                    collection_name = '', 
                                    collection_uuid = '', 
                                    track_name = '', ), 
                                cross_correlation = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_attribution_likelihood.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_attribution_likelihood(
                                    value = 1.337, 
                                    signed_url = '', 
                                    signed_url_thumbnail = '', 
                                    username = '', 
                                    collection_name = '', 
                                    collection_uuid = '', 
                                    track_name = '', ), 
                                color_matching = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_color_matching.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_color_matching(
                                    g_channel = , 
                                    r_channel = , 
                                    b_channel = , ), 
                                color_matching_combined = , 
                                pixelwise_similarity = , 
                                identical_matches = openapi_client.models.analysis_history_entry_image_attribution_analysis_top_metrics_identical_matches.AnalysisHistoryEntry_imageAttributionAnalysis_topMetrics_identical_matches(
                                    value = 1.337, 
                                    signed_urls = [
                                        null
                                        ], 
                                    signed_urls_thumbnails = [
                                        null
                                        ], ), ), ), 
                        audios_signed_urls = [
                            ''
                            ], 
                        stem_splitted_audios_signed_urls = [
                            ''
                            ], 
                        content_audio = '', 
                        attribution_per_collection = openapi_client.models.attribution_with_stems.AttributionWithStems(
                            master = [
                                openapi_client.models.attribution_with_stems_master_inner.AttributionWithStems_master_inner(
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        openapi_client.models.attribution.Attribution(
                                            filename = '', 
                                            values = [
                                                openapi_client.models.attribution_1_values_inner.Attribution_1_values_inner(
                                                    artist = '', 
                                                    value = 1.337, 
                                                    username = '', 
                                                    collection_name = '', 
                                                    collection_uuid = '', 
                                                    track_name = '', )
                                                ], )
                                        ], )
                                ], 
                            instrumentals = [
                                openapi_client.models.attribution_with_stems_master_inner.AttributionWithStems_master_inner(
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        openapi_client.models.attribution.Attribution(
                                            filename = '', 
                                            values = [
                                                openapi_client.models.attribution_1_values_inner.Attribution_1_values_inner(
                                                    artist = '', 
                                                    value = 1.337, 
                                                    username = '', 
                                                    collection_name = '', 
                                                    collection_uuid = '', 
                                                    track_name = '', )
                                                ], )
                                        ], )
                                ], 
                            vocals = [
                                
                                ], 
                            bass = [
                                
                                ], 
                            drums = [
                                
                                ], ), 
                        attribution_per_track = openapi_client.models.attribution_with_stems.AttributionWithStems(), 
                        audio_attribution_analysis = openapi_client.models.analysis_history_entry_audio_attribution_analysis.AnalysisHistoryEntry_audioAttributionAnalysis(
                            master = [
                                openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner(
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner_values_inner(
                                            filename = '', 
                                            values = [
                                                openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner_values_inner.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner_values_inner_values_inner(
                                                    attribution_likelihood = [
                                                        1.337
                                                        ], 
                                                    max_attribution = [
                                                        1.337
                                                        ], 
                                                    average_attribution = [
                                                        1.337
                                                        ], 
                                                    track = '', 
                                                    filename = '', 
                                                    signed_url = '', 
                                                    is_spotify_url = True, 
                                                    username = '', 
                                                    collection_name = '', 
                                                    collection_uuid = '', 
                                                    track_name = '', )
                                                ], )
                                        ], )
                                ], 
                            instrumentals = [
                                openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner(
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner_values_inner(
                                            filename = '', 
                                            values = [
                                                openapi_client.models.analysis_history_entry_audio_attribution_analysis_master_inner_values_inner_values_inner.AnalysisHistoryEntry_audioAttributionAnalysis_master_inner_values_inner_values_inner(
                                                    attribution_likelihood = [
                                                        1.337
                                                        ], 
                                                    max_attribution = [
                                                        1.337
                                                        ], 
                                                    average_attribution = [
                                                        1.337
                                                        ], 
                                                    track = '', 
                                                    filename = '', 
                                                    signed_url = '', 
                                                    is_spotify_url = True, 
                                                    username = '', 
                                                    collection_name = '', 
                                                    collection_uuid = '', 
                                                    track_name = '', )
                                                ], )
                                        ], )
                                ], 
                            vocals = [
                                
                                ], 
                            bass = [
                                
                                ], 
                            drums = [
                                
                                ], ), 
                        opt_out_analysis = openapi_client.models.opt_out_analysis.OptOutAnalysis(), 
                        lyrics_analysis = openapi_client.models.analysis_history_entry_lyrics_analysis.AnalysisHistoryEntry_lyricsAnalysis(
                            filename = '', 
                            lyrics = '', 
                            lyrics_attribution = [
                                openapi_client.models.analysis_history_entry_lyrics_analysis_lyrics_attribution_inner.AnalysisHistoryEntry_lyricsAnalysis_lyrics_attribution_inner(
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        openapi_client.models.analysis_history_entry_lyrics_analysis_lyrics_attribution_inner_values_inner.AnalysisHistoryEntry_lyricsAnalysis_lyrics_attribution_inner_values_inner(
                                            score = [
                                                1.337
                                                ], 
                                            mean_score = 1.337, 
                                            similar_lyrics_inspected = [
                                                ''
                                                ], 
                                            similar_lyrics_original = [
                                                ''
                                                ], 
                                            track_name = '', 
                                            track = '', 
                                            is_spotify_url = True, )
                                        ], )
                                ], 
                            translated_lyrics = '', ), 
                        ai_generated_likelihood = openapi_client.models.artist_collections_inner_ai_check_results.ArtistCollections_inner_ai_check_results(
                            master = [
                                openapi_client.models.artist_collections_inner_ai_check_results_master_inner.ArtistCollections_inner_ai_check_results_master_inner(
                                    filename = '', 
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        1.337
                                        ], 
                                    average_value = 1.337, 
                                    max_value = 1.337, )
                                ], 
                            instrumentals = [
                                openapi_client.models.artist_collections_inner_ai_check_results_master_inner.ArtistCollections_inner_ai_check_results_master_inner(
                                    filename = '', 
                                    duration = 1.337, 
                                    period = 1.337, 
                                    values = [
                                        1.337
                                        ], 
                                    average_value = 1.337, 
                                    max_value = 1.337, )
                                ], 
                            vocals = [
                                
                                ], 
                            bass = [
                                
                                ], 
                            drums = [
                                
                                ], ), 
                        similar_tracks = [
                            openapi_client.models.analysis_history_entry_similar_tracks_inner.AnalysisHistoryEntry_similarTracks_inner(
                                track = '', 
                                signed_url = '', 
                                is_spotify_url = True, 
                                username = '', 
                                collection_name = '', 
                                collection_uuid = '', 
                                track_name = '', )
                            ], 
                        artist_uuid = '', )
                    ],
                last_evaluated_key = '',
        )
        """

    def testGetAnalysisHistoryResponse(self):
        """Test GetAnalysisHistoryResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
