from numba import njit
    
@njit
def f_measurement(x, p, exog=[0], order=1, ind=None):
        
    ### This code was generated by Python.
    ### Gali, Smets and Wouters model.  Application to covid-19 lockdown economic forecast.
    
    # First order derivatives are employed in most of the models to compute Jacobian.
    # Higher order derivatives are used in nonlinear rational expectations models.
    
    from scipy.special import lambertw as LambertW
    from snowdrop.src.preprocessor.functions import Heaviside,Max,Min,Abs,DiracDelta
    from snowdrop.src.preprocessor.condition import IfThenElse,IfThen,Derivative,Subs,Positive,Negative,myzif

    import numpy as np
    from numpy import exp, sin, cos, tan, sqrt, sign, log
        
    # Initialize variables
    _xi_1 = 0 
    _xi_2 = 0 
    _xi_3 = 0 
    c__ = x[26]
    inve__ = x[27]
    y__ = x[28]
    pinf__ = x[30]
    r__ = x[32]
    unempl__ = x[44]
    OBS_y__ = x[45]
    OBS_unempl__ = x[46]
    OBS_pinf__ = x[47]
    OBS_c__ = x[48]
    OBS_r__ = x[49]
    OBS_inve__ = x[50]
    RES_OBS_y__ = x[51]
    RES_OBS_unempl__ = x[52]
    RES_OBS_pinf__ = x[53]
    RES_OBS_c__ = x[54]
    RES_OBS_r__ = x[55]
    RES_OBS_inve__ = x[56]

    # Set parameters

    # Function:
    function = np.zeros(6)
    function[0] = OBS_y__ - (RES_OBS_y__ + y__)
    function[1] = OBS_unempl__ - (RES_OBS_unempl__ + unempl__)
    function[2] = OBS_pinf__ - (RES_OBS_pinf__ + pinf__)
    function[3] = OBS_c__ - (RES_OBS_c__ + c__)
    function[4] = OBS_r__ - (RES_OBS_r__ + r__)
    function[5] = OBS_inve__ - (RES_OBS_inve__ + inve__)

    if order == 0:
        return function
    
    # Jacobian: 
    jacobian = np.zeros((6,57))
    jacobian[0,28] = -1
    jacobian[0,45] = 1
    jacobian[0,51] = -1
    jacobian[1,44] = -1
    jacobian[1,46] = 1
    jacobian[1,52] = -1
    jacobian[2,30] = -1
    jacobian[2,47] = 1
    jacobian[2,53] = -1
    jacobian[3,26] = -1
    jacobian[3,48] = 1
    jacobian[3,54] = -1
    jacobian[4,32] = -1
    jacobian[4,49] = 1
    jacobian[4,55] = -1
    jacobian[5,27] = -1
    jacobian[5,50] = 1
    jacobian[5,56] = -1

    if order == 1:
        return [function, jacobian]
