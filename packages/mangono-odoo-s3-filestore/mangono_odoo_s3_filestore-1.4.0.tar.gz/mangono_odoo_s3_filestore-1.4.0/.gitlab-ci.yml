# This module is only available for the container image

include:
  - component: $CI_SERVER_FQDN/gitlab-ci/code-quality/ruff@~latest
  - component: $CI_SERVER_FQDN/python-libs/ci-component/build@~latest
  - component: $CI_SERVER_FQDN/python-libs/ci-component/pytest@~latest
    inputs:
      name: "matrix"
      python_version: "all"
  - component: $CI_SERVER_FQDN/python-libs/ci-component/upload-pypi@~latest
    rules:
      - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG == null
    inputs:
      registry_token_var: $TESTPYPI_REGISTRY_TOKEN
      dependencies: [ "build:python" ]
      registry_name: "testpypi"
      name: "pypi:test"
  - component: $CI_SERVER_FQDN/python-libs/ci-component/upload-pypi@~latest
    rules:
      - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
    inputs:
      registry_token_var: $PYPI_REGISTRY_TOKEN
      registry_name: "pypi"
      dependencies: [ "build:python" ]
  - component: $CI_SERVER_FQDN/python-libs/ci-component/upload-pypi@~latest
    rules:
      - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
    inputs:
      registry_token_var: $CI_JOB_TOKEN
      registry_name: "$CI_SERVER_HOST"
      dependencies: [ "build:python" ]
  - component: $CI_SERVER_FQDN/gitlab-ci/odoo-quality/runbot@1
    inputs:
      name: "runbot:matrix"
      odoo_version: "all"
      other_services:
        - name: minio/minio
          command: [ 'server', '/minio' ]
          alias: minio

# Only run pipeline if a merge request is open or run on a protected ref
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_REF_PROTECTED == "true"


# If we are tagging a release with a specific convention ("v" + number) and all
# previous checks succeeded, we proceed with creating a release automatically.
publish:release:
  tags: ["lint"]
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script: echo "Creating release $CI_COMMIT_TAG"
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
  release:
    tag_name: $CI_COMMIT_TAG
    description: "Release $CI_COMMIT_TAG of components repository $CI_PROJECT_PATH"

"odoo:runbot:matrix:all":
  parallel:
    matrix:
      - ODOO_VERSION:
          - "12.0"
          - "13.0"
          - "14.0"
          - "15.0"
          - "16.0"
          - "17.0"
          - "18.0"
        S3_FILESTORE_BUCKET: ["odoofs", ""]
  image:
    name: registry.mangono.io/odoo-cloud/container:$ODOO_VERSION
    entrypoint: [ "" ]
  needs:
    - "test:matrix:all"
  variables:
    # MINIO_ENV are propagated to the minio service inside the .runbot/compose.yml extra service
    MINIO_ROOT_USER: test_access_key
    MINIO_ROOT_PASSWORD: test_secret_key

    # ODOO_ENV aare propagated to the odoo service inside the runbot
    LOAD_FILESTORE_S3: odoo_filestore_s3
    S3_FILESTORE_HOST: "minio:9000"
    S3_FILESTORE_ACCESS_KEY: $MINIO_ROOT_USER
    S3_FILESTORE_SECRET_KEY: $MINIO_ROOT_PASSWORD
    ODOO_S3_SECURE: "False"

test:matrix:all:
  parallel:
    matrix:
      - PYTHON_VERSION: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
  image: "ghcr.io/astral-sh/uv:python$PYTHON_VERSION-bookworm"
  variables:
    MINIO_ROOT_USER: test_access_key
    MINIO_ROOT_PASSWORD: test_secret_key

    S3_FILESTORE_HOST: "minio:9000"
    S3_FILESTORE_ACCESS_KEY: $MINIO_ROOT_USER
    S3_FILESTORE_SECRET_KEY: $MINIO_ROOT_PASSWORD
    S3_FILESTORE_BUCKET: test-python
    ODOO_S3_SECURE: "False"
  script:
    - uv pip install unittest-xml-reporting coverage
    - uv run --no-editable python -m coverage run -m xmlrunner discover tests/
  services:
  - name: minio/minio
    command: ['server', '/minio']
    alias: minio
