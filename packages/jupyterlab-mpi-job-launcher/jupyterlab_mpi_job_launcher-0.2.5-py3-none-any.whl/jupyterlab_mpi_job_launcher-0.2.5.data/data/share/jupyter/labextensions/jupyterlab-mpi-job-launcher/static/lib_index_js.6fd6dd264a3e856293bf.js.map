{"version":3,"file":"lib_index_js.6fd6dd264a3e856293bf.js","mappings":"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","sources":["webpack://jupyterlab-mpi-job-launcher/./src/components/MpiJobLauncherComponent.tsx","webpack://jupyterlab-mpi-job-launcher/./src/handler.ts","webpack://jupyterlab-mpi-job-launcher/./src/index.ts","webpack://jupyterlab-mpi-job-launcher/./src/widgets/MpiJobLauncherWidget.tsx"],"sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogProps, DialogTitle, TextField, Typography } from '@mui/material';\nimport React from 'react'\nimport { requestAPI } from '../handler';\nimport { Notification } from '@jupyterlab/apputils';\n\nconst MpiJobLauncherComponent: React.FC = (props): JSX.Element => {\n     const [open, setOpen] = React.useState(true);\n     // const [image, setImage] = React.useState('image01');\n     const [fullWidth] = React.useState(true);\n     const [maxWidth] = React.useState<DialogProps['maxWidth']>('md');\n\n     const handleClose = () => {\n          setOpen(false);\n     };\n     return (\n          <React.Fragment>\n               <Dialog\n                    open={open}\n                    onClose={handleClose}\n                    fullWidth={fullWidth}\n                    maxWidth={maxWidth}\n                    PaperProps={{\n                         component: 'form',\n                         onSubmit: async (event: React.FormEvent<HTMLFormElement>) => {\n                              event.preventDefault();\n                              const formData = new FormData(event.currentTarget);\n                              const formJson = Object.fromEntries((formData as any).entries());\n\n                              // Se arma el payload con la estructura deseada:\n                              const payload = {\n                                   launcher: {\n                                        cpu: formJson['launcher-cpu'],\n                                        memory: formJson['launcher-memory'],\n                                        image: formJson['launcher-image'],\n                                        command: formJson['launcher-command'],\n                                   },\n                                   worker: {\n                                        cpu: formJson['worker-cpu'],\n                                        memory: formJson['worker-memory'],\n                                        image: formJson['worker-image'],\n                                        replicas: Number(formJson['worker-replicas']),\n                                   },\n                              };\n\n                              console.log(payload);\n\n                              Notification.promise(\n                                   requestAPI<any>('submit', {\n                                        method: 'POST',\n                                        body: JSON.stringify(payload),\n                                   }),\n                                   {\n                                        pending: {\n                                             message: 'Sending info to gRPC server',\n                                        },\n                                        success: {\n                                             message: (result: any, data) => result.message,\n                                             options: { autoClose: 3000 },\n                                        },\n                                        error: {\n                                             message: (reason, data) =>\n                                                  `Error sending info. Reason: ${reason}`,\n                                             options: { autoClose: 3000 },\n                                        },\n                                   }\n                              );\n\n                              handleClose();\n                         },\n                    }}\n               >\n                    <DialogTitle>Parameters</DialogTitle>\n                    <DialogContent>\n                         <DialogContentText>\n                              Please fill the form with your parameters.\n                         </DialogContentText>\n                         {/* Sección Launcher */}\n                         <Typography variant=\"h6\" style={{ marginTop: '16px' }}>\n                              Launcher\n                         </Typography>\n                         <TextField\n                              required\n                              id=\"launcher-cpu\"\n                              name=\"launcher-cpu\"\n                              label=\"Launcher CPU\"\n                              variant=\"standard\"\n                              margin=\"dense\"\n                              fullWidth\n                         />\n                         <TextField\n                              required\n                              id=\"launcher-memory\"\n                              name=\"launcher-memory\"\n                              label=\"Launcher Memory\"\n                              variant=\"standard\"\n                              margin=\"dense\"\n                              fullWidth\n                         />\n                         <TextField\n                              required\n                              id=\"launcher-image\"\n                              name=\"launcher-image\"\n                              label=\"Launcher Image\"\n                              variant=\"standard\"\n                              margin=\"dense\"\n                              fullWidth\n                         />\n                         <TextField\n                              required\n                              id=\"launcher-command\"\n                              name=\"launcher-command\"\n                              label=\"Launcher Command\"\n                              variant=\"standard\"\n                              margin=\"dense\"\n                              fullWidth\n                              multiline\n                              rows={4}\n                              sx={{\n                                   '& .MuiInputBase-input': {\n                                        overflowY: 'auto',\n                                        scrollbarWidth: 'thin',\n                                        '&::-webkit-scrollbar': {\n                                             width: '8px',\n                                        },\n                                        '&::-webkit-scrollbar-thumb': {\n                                             backgroundColor: '#ccc',\n                                             borderRadius: '4px',\n                                        },\n                                   },\n                              }}\n                         />\n\n                         {/* Sección Worker */}\n                         <Typography variant=\"h6\" style={{ marginTop: '16px' }}>\n                              Worker\n                         </Typography>\n                         <TextField\n                              required\n                              id=\"worker-cpu\"\n                              name=\"worker-cpu\"\n                              label=\"Worker CPU\"\n                              variant=\"standard\"\n                              margin=\"dense\"\n                              fullWidth\n                         />\n                         <TextField\n                              required\n                              id=\"worker-memory\"\n                              name=\"worker-memory\"\n                              label=\"Worker Memory\"\n                              variant=\"standard\"\n                              margin=\"dense\"\n                              fullWidth\n                         />\n                         <TextField\n                              required\n                              id=\"worker-image\"\n                              name=\"worker-image\"\n                              label=\"Worker Image\"\n                              variant=\"standard\"\n                              margin=\"dense\"\n                              fullWidth\n                         />\n                         <TextField\n                              required\n                              id=\"worker-replicas\"\n                              name=\"worker-replicas\"\n                              label=\"Worker Replicas\"\n                              variant=\"standard\"\n                              margin=\"dense\"\n                              fullWidth\n                              type=\"number\"\n                         />\n                    </DialogContent>\n                    <DialogActions>\n                         <Button onClick={handleClose}>Cancel</Button>\n                         <Button type=\"submit\">Send</Button>\n                    </DialogActions>\n               </Dialog>\n          </React.Fragment>);\n}\n\nexport default MpiJobLauncherComponent;","import { URLExt } from '@jupyterlab/coreutils';\n\nimport { ServerConnection } from '@jupyterlab/services';\n\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI<T>(\n  endPoint = '',\n  init: RequestInit = {}\n): Promise<T> {\n  // Make request to Jupyter API\n  const settings = ServerConnection.makeSettings();\n  const requestUrl = URLExt.join(\n    settings.baseUrl,\n    'jupyterlab-mpi-job-launcher', // API Namespace\n    endPoint\n  );\n\n  let response: Response;\n  try {\n    response = await ServerConnection.makeRequest(requestUrl, init, settings);\n  } catch (error) {\n    throw new ServerConnection.NetworkError(error as any);\n  }\n\n  let data: any = await response.text();\n\n  if (data.length > 0) {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      console.log('Not a JSON response body.', response);\n    }\n  }\n\n  if (!response.ok) {\n    throw new ServerConnection.ResponseError(response, data.message || data);\n  }\n\n  return data;\n}\n","import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n\nimport { ICommandPalette } from '@jupyterlab/apputils';\nimport { ILauncher } from '@jupyterlab/launcher';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { inspectorIcon } from '@jupyterlab/ui-components';\nimport { requestAPI } from './handler';\nimport { MpiJobLauncherWidget } from './widgets/MpiJobLauncherWidget';\nimport { Widget } from '@lumino/widgets';\n\n\nconst PLUGIN_ID = 'jupyterlab-mpi-job-launcher:plugin';\nconst PALETTE_CATEGORY = 'Admin tools';\n\nnamespace CommandIDs {\n  export const createNew = 'jupyterlab-mpi-job-launcher:open-form';\n}\n\nfunction activate(\n  app: JupyterFrontEnd,\n  settingRegistry: ISettingRegistry | null,\n  launcher: ILauncher | null,\n  palette: ICommandPalette | null\n) {\n  console.log('JupyterLab extension jupyterlab-mpi-job-launcher is activated!');\n\n  if (settingRegistry) {\n    settingRegistry\n      .load(plugin.id)\n      .then(settings => {\n        console.log('jupyterlab-mpi-job-launcher settings loaded:', settings.composite);\n      })\n      .catch(reason => {\n        console.error('Failed to load settings for jupyterlab-mpi-job-launcher.', reason);\n      });\n  }\n\n  requestAPI<any>('get-example')\n    .then(data => {\n      console.log(data);\n    })\n    .catch(reason => {\n      console.error(\n        `The jupyterlab_mpi_job_launcher server extension appears to be missing.\\n${reason}`\n      );\n    });\n\n  const { commands } = app;\n  const command = CommandIDs.createNew;\n\n  commands.addCommand(command, {\n    label: 'Launch MPI Job',\n    caption: 'Launch MPI Job',\n    icon: args => (args['isPalette'] ? undefined : inspectorIcon),\n    execute: async args => {\n      console.log('Command executed');\n\n      const widget = new MpiJobLauncherWidget();\n      widget.id = 'mpi-job-launcher-form';\n      widget.title.label = 'Launch MPI Job';\n      widget.title.closable = true;\n\n      Widget.attach(widget, document.body);\n    }\n  });\n\n  if (launcher) {\n    launcher.add({\n      command,\n      category: 'Admin tools',\n      rank: 1\n    });\n  }\n\n  if (palette) {\n    palette.addItem({\n      command,\n      args: { isPalette: true },\n      category: PALETTE_CATEGORY\n    });\n  }\n}\n\n/**\n * Initialization data for the jupyterlab-mpi-job-launcher extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: PLUGIN_ID,\n  description: 'A JupyterLab extension.',\n  autoStart: true,\n  optional: [ISettingRegistry, ILauncher, ICommandPalette],\n  activate\n};\n\nexport default plugin;","import { ReactWidget } from \"@jupyterlab/apputils\";\nimport React from 'react';\nimport MpiJobLauncherComponent from \"../components/MpiJobLauncherComponent\";\n\nexport class MpiJobLauncherWidget extends ReactWidget {\n  constructor() {\n    super()\n  }\n\n  render(): JSX.Element {\n    return (\n      <div\n        style={{\n          width: '100%',\n        }}\n      >\n        <MpiJobLauncherComponent />\n      </div>\n    )\n  }\n}"],"names":[],"sourceRoot":""}