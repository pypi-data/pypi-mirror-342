name: Publish Python Package

on:
  push:
    branches:
      - main
      - staging
    paths:
      - 'src/**'
      - 'pyproject.toml'
      - 'setup.py'
      - 'setup.cfg'
      - 'README.md'
    tags:
      - 'v*'  # Run on version tags as well
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test]
    - name: Run tests
      run: |
        pytest

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    environment: pypi-publish
    permissions:
      id-token: write  # Required for trusted publishing to PyPI
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        # Install development dependencies to ensure type stubs are available
        pip install -e .[dev,test]
    - name: Build package
      run: |
        python -m build
        twine check dist/*

    - name: Test importability
      run: |
        # Install the built package
        pip install dist/*.whl
        # Test that it can be imported correctly
        python -c "import safeguards; print(f'Successfully imported safeguards {safeguards.__version__}')"

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') || github.event_name == 'release'
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
