name: Python Tests

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        pip install -e .
        # Update setuptools to fix the known vulnerability
        pip install --upgrade setuptools>=65.5.1
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Type check with mypy (non-blocking)
      run: |
        pip install mypy types-requests types-psutil
        # Install development dependencies
        pip install -r requirements-dev.txt
        # Run mypy with the config file
        mypy --config-file mypy.ini --no-site-packages --python-version 3.10 src/safeguards || echo "Mypy checks skipped for now"
    - name: Test with pytest
      run: |
        pytest --cov=safeguards tests/
    - name: Security scan with bandit
      run: |
        pip install bandit==1.7.8
        bandit -r src/safeguards -c .bandit.yml -f json -o bandit-results.json || true
        # Run pip-audit if needed
        pip install pip-audit
        pip-audit --ignore-vuln PYSEC-2022-43012 || true
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
      if: ${{ always() }}
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: coverage.xml
      if: ${{ always() }}
