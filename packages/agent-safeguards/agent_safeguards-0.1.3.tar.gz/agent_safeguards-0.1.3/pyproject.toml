[build-system]
requires = ["hatchling", "setuptools>=65.5.1"]
build-backend = "hatchling.build"

[project]
name = "agent-safeguards"
version = "0.1.3"
description = "Safeguards for custom agents."
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [
    {name = "Dev Team @mason", email = "dev@getmason.io"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "fastapi>=0.109.0",
    "pydantic>=2.0.0",
    "uvicorn>=0.27.0",
    "python-dateutil>=2.8.0",
    "typing-extensions>=4.0.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    "scipy>=1.10.0",
    "python-dotenv>=1.0.0",
    "aiohttp>=3.8.0",
    "asyncio>=3.4.3",
    "prometheus-client>=0.17.0",
    "PyYAML>=6.0.0",
    "tenacity>=8.2.0",
    "websockets>=10.4",
    "plotly>=5.13.0",
    "requests>=2.30.0",
    "jinja2>=3.1.0",
    "psutil>=5.9.0",
    "ruff>=0.11.6",
]

[project.urls]
Homepage = "https://github.com/cirbuk/agent-safeguards"
Documentation = "https://github.com/cirbuk/agent-safeguards/tree/main/docs"
Issues = "https://github.com/cirbuk/agent-safeguards/issues"
Changelog = "https://github.com/cirbuk/agent-safeguards/blob/main/CHANGELOG.md"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.0",
]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
    "pylint>=3.0.0",
    "pre-commit>=2.15.0",
    "bandit>=1.7.0",
    "types-requests>=2.30.0",
    "types-psutil>=5.9.0",
    "setuptools>=65.5.1",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.23.0",
]

[tool.pytest.ini_options]
testpaths = ["src/safeguards"]
python_files = ["test_*.py"]
addopts = "-v --cov=safeguards"
markers = [
    "asyncio: mark a test as an asynchronous test using pytest-asyncio",
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests"
]

[tool.black]
line-length = 88
target-version = ["py310", "py311"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0330",  # bad-continuation
    "C0326",  # bad-whitespace
]

[tool.pylint.format]
max-line-length = 88

[tool.hatch.build.targets.wheel]
packages = ["src/safeguards"]
exclude = ["src/safeguards/tests", "tests", "*/tests/*", "src/safeguards/testing", "*/testing/*"]

[tool.hatch.build.targets.sdist]
exclude = ["tests", "src/safeguards/tests", "*/tests/*", "src/safeguards/testing", "*/testing/*"]

[tool.ruff]
# Enable a comprehensive set of rules
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "D",   # pydocstyle
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "ANN", # flake8-annotations
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "ERA", # eradicate
    "W",   # pycodestyle warnings
    "C90", # mccabe
    "S",   # flake8-bandit (security)
    "A",   # flake8-builtins
    "COM", # flake8-commas
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "EM",  # flake8-errmsg
    "ICN", # flake8-import-conventions
    "G",   # flake8-logging-format
    "PIE", # flake8-pie
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "TID", # flake8-tidy-imports
    "ARG", # flake8-unused-arguments
    "PL",  # pylint
    "TRY", # tryceratops
    "RUF", # ruff-specific rules
]
ignore = ["D203", "D212", "ANN101", "ANN102", "ANN401"]
line-length = 100
target-version = "py310"

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"tests/**/*.py" = ["D", "ANN"]
"*/__init__.py" = ["D"]
"scripts/**/*.py" = ["D", "ANN"]

[tool.ruff.isort]
known-first-party = ["safeguards"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
indent-size = 4
line-ending = "auto"
docstring-code-format = true

[tool.ruff.mccabe]
max-complexity = 12

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
