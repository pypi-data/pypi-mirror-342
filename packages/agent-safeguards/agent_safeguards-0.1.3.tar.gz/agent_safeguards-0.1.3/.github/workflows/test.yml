name: Test

on:
  push:
    branches: [ main, staging ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pyproject.toml'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [ main, staging ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pyproject.toml'
      - '.github/workflows/test.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    steps:
      - uses: actions/checkout@v4

      - name: Create pip cache directory
        run: mkdir -p /home/runner/.cache/pip

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv pip install --system -e ".[test]"

      - name: Run tests
        run: |
          pytest tests -v --cov=safeguards --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install security tools
      run: |
        pip install bandit==1.7.8 pip-audit
        # Update setuptools to fix the known vulnerability
        pip install --upgrade setuptools>=65.5.1

    - name: Run security scan
      run: |
        bandit -r src/safeguards -ll || true
        # Run pip-audit with an option to ignore the setuptools vulnerability if it still exists
        pip-audit --ignore-vuln PYSEC-2022-43012 || true
