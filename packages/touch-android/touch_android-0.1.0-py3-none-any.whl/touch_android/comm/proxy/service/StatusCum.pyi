from touch_android.data.EnumDefine import *
from libuseful.lib_logger import *
import grpc
from ..ProxyGRPC import ProxyGRPC, ServiceDesp
from touch_android.comm.proto import touchRP_pb2 as cApiMsg
from typing import Callable

__all__ = ['SVCstatus']

class SVCstatus(ServiceDesp):
    class ValueCB:
        result: bool
        error: EErrorDesp
        errMsg: str
        path: str
        def __init__(self, res: bool, err: cApiMsg.ErrorData, path: str = None) -> None: ...
    SVC_NAME: str
    @property
    def async_mode(self): ...
    def register(self): ...
    def ping_sync(self, chan: grpc.Channel): ...
    async def ping(self, chan: grpc.Channel): ...
    def request_StartRecord(self, func_cb: Callable[[str, bool], None]): ...
    def request_StopRecord(self, func_cb: Callable[[str, ValueCB], None], filepath: str): ...
    def request_StartPlay(self, func_cb: Callable[[str, ValueCB], None], tcs_path: str): ...
    def request_StopPlay(self, func_cb: Callable[[str, bool], None]): ...
    def request_Reset(self, func_cb: Callable[[str, bool], None]): ...
    def request_Exit(self, func_cb: Callable[[str, bool], None]): ...
    def __init__(self, proxy: ProxyGRPC, user_id: str, async_mode: bool = False) -> None: ...
