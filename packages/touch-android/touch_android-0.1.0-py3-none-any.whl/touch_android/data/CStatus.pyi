from .EnumDefine import *
from libuseful.lib_logger import *
from _typeshed import Incomplete
from typing import Any

logging: Incomplete

class CError:
    errno: EErrorDesp
    msg: str
    def __init__(self, errno: EErrorDesp, msg: str = None) -> None: ...
    def __del__(self) -> None: ...

class CStatus:
    @property
    def status(self): ...
    @property
    def error(self): ...
    @property
    def last_recorded(self): ...
    @property
    def last_played(self): ...
    def update(self, status: EStatus, path: str = None, errno: EErrorDesp = None, errmsg: str = None): ...
    def __init__(self) -> None: ...
    def __del__(self) -> None: ...
    def __eq__(self, other: Any) -> bool: ...
    def __ne__(self, other: Any) -> bool: ...
