from libuseful.exception import *
from libuseful.lib_logger import *
from .CTProperty import CTProperty as CTProperty
from _typeshed import Incomplete
from typing import Any, Callable

logger: Incomplete

class CSummaryEvt:
    class KEY:
        START_UPTIME: str
        STOP_UPTIME: str
        TOUCHES: str
    @property
    def uptime_start(self): ...
    def start(self, start: float): ...
    def update(self, touch: CTProperty, custom: Any): ...
    def stop(self, stop: float, filepath: str = None): ...
    def reset(self) -> None: ...
    def __init__(self, func_custom_parser: Callable[[Any], tuple[str, str, str]] = None) -> None: ...
    def __del__(self) -> None: ...
