# coding: utf-8

"""
    CyPerf Application API

    CyPerf REST API

    The version of the OpenAPI document: 1.0.0
    Contact: support@keysight.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cyperf.models.appsec_app_metadata import AppsecAppMetadata

class TestAppsecAppMetadata(unittest.TestCase):
    """AppsecAppMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppsecAppMetadata:
        """Test AppsecAppMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppsecAppMetadata`
        """
        model = AppsecAppMetadata()
        if include_optional:
            return AppsecAppMetadata(
                actions_metadata = [
                    cyperf.models.action_metadata.ActionMetadata(
                        flow_index = {
                            'key' : 56
                            }, 
                        flows = [
                            cyperf.models.app_flow.AppFlow(
                                display_id = '', 
                                dst_address = 'YQ==', 
                                dst_port = 56, 
                                exchanges = [
                                    cyperf.models.app_exchange.AppExchange(
                                        c2s_payload = cyperf.models.generic_file.GenericFile(
                                            content = 'YQ==', 
                                            id = '', 
                                            md5 = '', 
                                            metadata = cyperf.models.file_metadata.FileMetadata(
                                                default = True, 
                                                user_visible = True, ), 
                                            name = '', 
                                            options = {
                                                'key' : null
                                                }, 
                                            owner = '', 
                                            owner_id = '', 
                                            reference_links = {
                                                'key' : 56
                                                }, 
                                            size = 56, 
                                            type = '', ), 
                                        http_req_meta = cyperf.models.http_req_meta.HTTPReqMeta(
                                            headers = {
                                                'key' : [
                                                    ''
                                                    ]
                                                }, 
                                            hostname = '', 
                                            method = '', 
                                            size = 56, 
                                            uri = '', 
                                            version = '', ), 
                                        http_res_meta = cyperf.models.http_res_meta.HTTPResMeta(
                                            size = 56, 
                                            status = '', 
                                            status_code = 56, 
                                            version = '', ), 
                                        id = '', 
                                        name = '', 
                                        payload = cyperf.models.exchange_payload.ExchangePayload(
                                            c2s = 'YQ==', 
                                            s2c = 'YQ==', ), 
                                        s2c_payload = cyperf.models.generic_file.GenericFile(
                                            content = 'YQ==', 
                                            id = '', 
                                            md5 = '', 
                                            name = '', 
                                            owner = '', 
                                            owner_id = '', 
                                            size = 56, 
                                            type = '', ), )
                                    ], 
                                id = '', 
                                links = [
                                    cyperf.models.api_link.APILink(
                                        content_type = '', 
                                        href = '', 
                                        method = '', 
                                        name = '', 
                                        references_count = 56, 
                                        rel = '', 
                                        type = '', )
                                    ], 
                                src_address = 'YQ==', 
                                src_port = 56, 
                                transport_type = '', )
                            ], 
                        index = 56, 
                        name = '', 
                        parameters = [
                            cyperf.models.parameter.Parameter(
                                matches = [
                                    cyperf.models.parameter_match.ParameterMatch(
                                        match_location = [
                                            ''
                                            ], 
                                        match_type = '', 
                                        regex_match = cyperf.models.regex_match.RegexMatch(
                                            patterns = [
                                                ''
                                                ], ), )
                                    ], 
                                name = '', 
                                field = '', 
                                operator = '', 
                                query_param = '', )
                            ], )
                    ],
                app_parameters = [
                    cyperf.models.parameter.Parameter(
                        matches = [
                            cyperf.models.parameter_match.ParameterMatch(
                                match_location = [
                                    ''
                                    ], 
                                match_type = '', 
                                regex_match = cyperf.models.regex_match.RegexMatch(
                                    patterns = [
                                        ''
                                        ], ), )
                            ], 
                        name = '', 
                        field = '', 
                        operator = '', 
                        query_param = '', )
                    ]
            )
        else:
            return AppsecAppMetadata(
        )
        """

    def testAppsecAppMetadata(self):
        """Test AppsecAppMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
