# coding: utf-8

"""
    CyPerf Application API

    CyPerf REST API

    The version of the OpenAPI document: 1.0.0
    Contact: support@keysight.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cyperf.models.get_resources_auth_profiles200_response_one_of import GetResourcesAuthProfiles200ResponseOneOf

class TestGetResourcesAuthProfiles200ResponseOneOf(unittest.TestCase):
    """GetResourcesAuthProfiles200ResponseOneOf unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetResourcesAuthProfiles200ResponseOneOf:
        """Test GetResourcesAuthProfiles200ResponseOneOf
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetResourcesAuthProfiles200ResponseOneOf`
        """
        model = GetResourcesAuthProfiles200ResponseOneOf()
        if include_optional:
            return GetResourcesAuthProfiles200ResponseOneOf(
                data = [
                    cyperf.models.auth_profile.AuthProfile(
                        connections = [
                            cyperf.models.connection.Connection(
                                client_endpoint = '', 
                                client_port = 56, 
                                closing_end = '', 
                                disable_encryption = True, 
                                hostname = '', 
                                hostname_param = null, 
                                http_forward_proxy_mode = 'INHERIT_DUT', 
                                is_deprecated = True, 
                                max_transactions = 56, 
                                name = '', 
                                port_settings = null, 
                                readonly = True, 
                                readonly_hostname = True, 
                                readonly_max_trans = True, 
                                readonly_type = True, 
                                server_endpoint = '', 
                                server_port = 56, 
                                type = 'http', 
                                id = '', 
                                links = [
                                    cyperf.models.api_link.APILink(
                                        content_type = '', 
                                        href = '', 
                                        method = '', 
                                        name = '', 
                                        references_count = 56, 
                                        rel = '', 
                                        type = '', )
                                    ], )
                            ], 
                        data_types = [
                            cyperf.models.data_type.DataType(
                                values = [
                                    cyperf.models.data_type_values_inner.DataType_Values_inner(
                                        id = '', 
                                        value_type = '', )
                                    ], 
                                id = '', )
                            ], 
                        endpoints = [
                            cyperf.models.endpoint.Endpoint(
                                name = '', 
                                network_mapping = null, 
                                type = 'Client', 
                                id = '', )
                            ], 
                        file_name = '', 
                        metadata = cyperf.models.metadata.Metadata(
                            direction = '', 
                            is_banner = True, 
                            keywords = [
                                null
                                ], 
                            legacy_names = [
                                ''
                                ], 
                            protocol = '', 
                            rtp_profile_meta = cyperf.models.rtp_profile_meta.RTPProfileMeta(
                                custom_header_len_offset = 56, 
                                custom_header_len_size = 56, 
                                custom_header_signature = 'YQ==', 
                                custom_header_signature_offset = 56, 
                                custom_header_size = 56, 
                                encryption_mode = '', 
                                requires_rtp_profile = True, ), 
                            references = [
                                cyperf.models.reference.Reference(
                                    type = '', 
                                    value = '', )
                                ], 
                            requires_uniqueness = True, 
                            severity = '', 
                            skip_attack_generation = True, 
                            sort_severity = '', 
                            static = True, 
                            supported_apps = [
                                ''
                                ], 
                            year = '', ), 
                        parameters = [
                            cyperf.models.parameter.Parameter(
                                matches = [
                                    cyperf.models.parameter_match.ParameterMatch(
                                        match_location = [
                                            ''
                                            ], 
                                        match_type = '', 
                                        regex_match = cyperf.models.regex_match.RegexMatch(
                                            patterns = [
                                                ''
                                                ], ), )
                                    ], 
                                name = '', 
                                field = '', 
                                operator = '', 
                                query_param = '', )
                            ], 
                        description = '', 
                        id = '', 
                        links = [
                            cyperf.models.api_link.APILink(
                                content_type = '', 
                                href = '', 
                                method = '', 
                                name = '', 
                                references_count = 56, 
                                rel = '', 
                                type = '', )
                            ], 
                        type = '', )
                    ],
                total_count = 56
            )
        else:
            return GetResourcesAuthProfiles200ResponseOneOf(
        )
        """

    def testGetResourcesAuthProfiles200ResponseOneOf(self):
        """Test GetResourcesAuthProfiles200ResponseOneOf"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
