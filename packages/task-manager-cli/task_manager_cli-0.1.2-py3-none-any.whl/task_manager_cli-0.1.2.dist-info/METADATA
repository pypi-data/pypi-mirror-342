Metadata-Version: 2.4
Name: task-manager-cli
Version: 0.1.2
Summary: 一个简单但功能强大的命令行任务管理工具
Project-URL: Homepage, https://github.com/kaleozhou/tasks-manager
Project-URL: Repository, https://github.com/kaleozhou/tasks-manager.git
Project-URL: Issues, https://github.com/kaleozhou/tasks-manager/issues
Author-email: Kaleo Zhou <kaleovip@163.com>
License: MIT License
        
        Copyright (c) 2024 Kaleo Zhou (kaleovip@163.com)
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE. 
License-File: LICENSE
Keywords: cli,management,project,task,todo
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Requires-Python: >=3.7
Requires-Dist: click>=8.0.0
Requires-Dist: pydantic>=2.0.0
Requires-Dist: rich>=10.0.0
Description-Content-Type: text/markdown

# Task Manager (任务管理器)

一个简单但功能强大的命令行任务管理工具，帮助您在项目中轻松管理和追踪任务进度。

[![PyPI version](https://badge.fury.io/py/task-manager-cli.svg)](https://badge.fury.io/py/task-manager-cli)
[![GitHub](https://img.shields.io/github/license/kaleozhou/tasks-manager)](https://github.com/kaleozhou/tasks-manager)

## 特性

- 📝 任务管理：创建、更新和删除任务
- 🌲 多级子任务：支持无限层级的子任务嵌套
- 🔄 任务状态跟踪：支持多种任务状态（待处理、进行中、已完成、已阻塞、已推迟）
- ⭐ 优先级管理：高、中、低三级优先级
- 🔗 任务依赖：设置任务间的依赖关系
- 💾 本地持久化：自动保存任务数据
- 🎨 美观的终端界面：使用 Rich 提供清晰的视觉展示

## 安装

```bash
pip install task-manager-cli
```

## 详细使用说明

### 1. 添加新任务

创建一个新的主任务，可以设置标题、描述和优先级。

```bash
# 基本用法
task add "任务标题"

# 添加描述和优先级
task add "完成项目文档" -d "编写项目的README和API文档" -p high

# 优先级选项：high（高）、medium（中）、low（低）
```

### 2. 添加子任务

为任务添加子任务，支持无限层级的嵌套。

```bash
# 添加一级子任务
task add-subtask 1 "编写单元测试" -d "确保代码质量"

# 添加二级子任务
task add-subtask 1.1 "测试核心功能" -d "测试任务管理核心功能"

# 添加三级子任务
task add-subtask 1.1.1 "测试任务创建" -d "验证任务创建功能"

# 可以继续添加更深层级的子任务
task add-subtask 1.1.1.1 "参数验证测试"
```

### 3. 更新任务状态

跟踪任务的进展状态，支持更新任意层级的任务。

```bash
# 更新主任务状态
task status 1 in_progress

# 更新一级子任务状态
task status 1.1 done

# 更新二级子任务状态
task status 1.1.1 done

# 更新三级子任务状态
task status 1.1.1.1 done

# 可用状态：
# - pending（待处理）
# - in_progress（进行中）
# - done（已完成）
# - blocked（已阻塞）
# - deferred（已推迟）
```

### 4. 管理任务依赖

设置任务之间的依赖关系。

```bash
# 语法：task depend <任务ID> <依赖任务ID>
task depend 2 1  # 任务2依赖于任务1

# 被依赖的任务必须完成后，依赖任务才能开始
```

### 5. 查看任务列表

以树状结构显示所有任务及其子任务。

```bash
task list

# 示例输出：
# 📋 任务列表
# └── 1: 项目开发 (进行中) [优先级: high]
#     ├── 1.1: 核心功能 (进行中)
#     │   ├── 1.1.1: 任务管理 (已完成)
#     │   │   ├── 1.1.1.1: 创建任务 (已完成)
#     │   │   └── 1.1.1.2: 更新状态 (已完成)
#     │   └── 1.1.2: 数据存储 (进行中)
#     └── 1.2: 文档编写 (待处理)
```

### 6. 查看下一个任务

显示所有可以开始的任务（没有未完成的依赖）。

```bash
task next

# 示例输出：
#       📋 可执行的任务       
# ┏━━━━┳━━━━━━━━━━┳━━━━━━━━┓
# ┃ ID ┃ 标题     ┃ 优先级 ┃
# ┡━━━━╇━━━━━━━━━━╇━━━━━━━━┩
# │ 1  │ 项目文档 │ high   │
# └────┴──────────┴────────┘
```

## 数据存储

任务数据保存在当前项目目录下的 `tasks.json` 文件中。这种设计使得：
- 任务数据与项目代码一起版本控制
- AI 助手可以直接读取和修改任务数据
- 便于在团队中共享任务状态
- 方便查看和编辑任务数据

## 使用场景

1. **项目管理**
   - 多层级任务分解
   - 跟踪项目进度
   - 设置任务优先级

2. **团队协作**
   - 在代码仓库中管理任务
   - 通过 Git 共享任务状态
   - 跟踪依赖关系

3. **个人任务管理**
   - 待办事项分类管理
   - 进度追踪
   - 任务规划

## 开发相关

### 安装开发依赖

```bash
pip install -r requirements-dev.txt
```

### 运行测试

```bash
pytest
```

### 构建项目

```bash
python -m build
```

## 贡献

欢迎提交 Issue 和 Pull Request！

## 作者

- Kaleo Zhou ([@kaleozhou](https://github.com/kaleozhou))
- Email: kaleovip@163.com

## 许可证

本项目采用 MIT 许可证。详见 [LICENSE](LICENSE) 文件。

## 相关链接

- GitHub: https://github.com/kaleozhou/tasks-manager
- PyPI: https://pypi.org/project/task-manager-cli/
- Bug 报告: https://github.com/kaleozhou/tasks-manager/issues 