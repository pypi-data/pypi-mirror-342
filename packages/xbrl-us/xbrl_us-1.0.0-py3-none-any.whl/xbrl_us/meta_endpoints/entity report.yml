endpoints:
  '1': /entity/{entity.id}/report/search
  '2': /entity/report/search
examples:
  '1': https://api.xbrl.us/api/v1/entity/1721/report/search?fields=report.*
  '2': https://api.xbrl.us/api/v1/entity/report/search?entity.id=1721&fields=report.*
fields:
  aspect:
    searchable: 'false'
    database_field: member_local_name
  concept.balance-type:
    searchable: 'true'
    type: text
    database_field: CASE WHEN element.balance_id = 1 THEN 'debit' ELSE CASE WHEN element.balance_id
      = 2 THEN 'credit' END END
    definition: The balance type of a concept. This can be either debit, credit or
      not defined.
  concept.datatype:
    searchable: 'false'
    type: varchar
    database_field: local_name
    definition: The datatype of the concept such as monetary or string.
  concept.id:
    searchable: 'true'
    type: int
    database_field: element_id
    definition: 'A unique identification id of the concept that can be searched on.
      This is a faster way to retrieve the details of a fact, however it is namespace
      specific and will only search for the use of a concept for a specific schema. '
    format: integer
  concept.is-base:
    searchable: 'true'
    type: boolean
    database_field: is_base
    definition: Identifies if the concept is from a base published taxonomy or from
      a company extension. Avalue of true indicates that it is a base taxonomy element.
      This attribute can be used for example to search for extension elements in a
      filing.
    format: boolean
  concept.is-monetary:
    searchable: 'true'
    type: boolean
    database_field: is_monetary
    definition: Identifies if the concept is a monetary value. If yes the value is
      shown as true. A monetary value is distinguished from a numeric concept in that
      it has a currency associated with it.
    format: boolean
  concept.local-name:
    searchable: 'true'
    type: varchar
    database_field: element_local_name
    definition: The concept name in the base schema of a taxonomy excluding the namespace,
      such as Assets or Liabilities. Use this to search across multiple taxonomies
      where the local name is known to be consistent over time.
    format: concept
  concept.namespace:
    searchable: 'true'
    type: varchar
    database_field: element_namespace
    format: uri
  concept.period-type:
    searchable: 'false'
    type: text
    database_field: CASE WHEN element.period_type_id = 1 THEN 'instant' ELSE CASE
      WHEN element.period_type_id = 2 THEN 'duration' END END
    definition: The period type of the concept. This can be either duration or instant.
    format: integer
  dimension-pair:
    searchable: 'false'
    type: jsonb
    database_field: list_dimensional_qualifications_for_fact2_json_short(fact_id)
  dimension.is-base:
    searchable: 'true'
    type: boolean
    database_field: is_base(cde_base.dimension_namespace)
    definition: A boolean that indicates if the dimension concept is a base taxonomy
      element (true) or an extensions dimension concept (false).
    format: boolean
  dimension.local-name:
    searchable: 'true'
    type: varchar
    database_field: dimension_local_name
    definition: The dimension concept name in the taxonomy excluding the namespace,
      that is defined as dimension type.
    format: concept
  dimension.namespace:
    searchable: 'true'
    type: varchar
    database_field: dimension_namespace
    definition: The namespace of the dimension concept used to identify a fact.
    format: uri
  dimensions:
    searchable: 'false'
    type: jsonb
    database_field: list_dimensional_qualifications_for_fact2_json(fact_id)
    definition: Returns an array of dimensions associated with the given fact.
  dimensions.count:
    searchable: 'true'
    type: int
    database_field: dimension_count
    definition: The number of dimensional qualifiers associated with a given fact.
    format: integer
  dimensions.id:
    searchable: 'true'
    type: bytea
    database_field: dimension_hash
    definition: The unique identifier of the dimensional aspects associated with a
      fact.
  dts.entry-point:
    searchable: 'true'
    type: varchar
    database_field: document_uri
    definition: The url entry point of a discoverable taxonomy set. This is also referred
      to as the entry point for a taxonomy. A taxonomy can have multiple entry points
      and the resulting set of taxonomies of using an entry point is called a dts.
    format: uri
  dts.id:
    searchable: 'true'
    type: int
    database_field: dts_id
    definition: The dts identifier for a given group of taxonomies. XBRL facts and
      linkbases are typically associated with a given report that is associated with
      a dts.
    format: integer
  dts.target-namespace:
    searchable: 'true'
    type: varchar
    database_field: target_namespace
    definition: The target namespace of a discoverable taxonomy set. (DTS).
    format: uri
  entity.cik:
    searchable: 'true'
    type: varchar
    database_field: entity_code
    definition: The CIK is the SEC identifier used to identify a reporting entity.
      This is the CIK associated with a given fact, DTS or report.
    format: cik,cid,lei,grip
  entity.code:
    searchable: 'true'
    type: varchar
    database_field: entity_code
    definition: The entity identifier for whatever source it is associated with.  All
      entity identifiers are in this field. This is the CIK associated with a given
      fact, DTS or report.
    format: cik,cid,lei,grip
  entity.id:
    searchable: 'true'
    type: int
    database_field: entity_id
    definition: The internal identifier used to identify an entity. This will be replaced
      with the LEI when teh SEC supports the LEI standard.
    format: integer
  entity.name:
    searchable: 'false'
    type: varchar
    database_field: entity_name
    definition: The name of the entity reporting.
  entity.scheme:
    searchable: 'false'
    type: varchar
    database_field: entity_scheme
    definition: The scheme of the identifier associated with a fact, report or DTS.
      A fact could have multiple entity identifiers and this indicates the identifier
      that was used.
    format: uri
  entity.ticker:
    searchable: 'true'
    type: varchar
    database_field: entity_ticker
    definition: The stock exchange ticker of the entity filing the report. Although
      a company may have multiple tickers this returns a single value.
    format: ticker
  entity.ticker2:
    searchable: 'true'
    type: varchar
    database_field: ticker2(report_entity.entity_id)
    format: ticker
  fact.accuracy-index:
    searchable: 'true'
    type: int
    database_field: accuracy_index
    format: integer
  fact.decimals:
    searchable: 'false'
    type: text
    database_field: decimals_value
    definition: The decimal value associated with a fact. This can be either a number
      representing decimal places or be infinite. There are two values returned for
      this field the first is a decimal and the second is a boolean. The first indicates
      the decimal places if applicable and the second identifies if the value is infinite(t)
      or not (f).
  fact.has-dimensions:
    searchable: 'true'
    type: boolean
    database_field: specifies_dimensions
    definition: This boolean field indicates if the fact has any dimensions associated
      with it.
    format: boolean
  fact.hash:
    searchable: 'true'
    type: text
    database_field: fact_hash
    definition: The fact hash is derived from the aspect properties of the fact. Each
      fact will have a different hash in a given report. Over time however different
      facts may have the same hash if they are identical. The hash does not take into
      account the value reported for the fact. the fact hash is used to determine
      the ultimus index. By searching on the hash you can identify all identical facts
      that were reported.
    format: hex_hash
  fact.id:
    searchable: 'true'
    type: int
    database_field: fact_id
    definition: The unique identifier used to identify a fact.
    format: integer
  fact.inline-display-value:
    searchable: 'false'
    type: varchar
    database_field: inline_display_value
    definition: The original value that was shown in the inline filing prior to be
      transformed to an XBRL value.
  fact.inline-is-hidden:
    searchable: 'false'
    type: boolean
    database_field: inline_is_hidden
    definition: Boolean that indicates if the fact was hidden in the inline document.
    format: boolean
  fact.inline-negated:
    searchable: 'false'
    type: boolean
    database_field: inline_negated
    definition: Boolean that indicates if the fact was negated in the inline document.
    format: boolean
  fact.inline-scale:
    searchable: 'false'
    type: int
    database_field: inline_scale
    definition: Integer that indicates the scale used on the fact in the inline document.
    format: integer
  fact.is-extended:
    searchable: 'true'
    type: boolean
    database_field: is_extended
    definition: This indicates if the fact is comprised of either an extension concept,
      extension axis or extension member.
    format: boolean
  fact.numerical-value:
    searchable: 'false'
    type: numeric
    database_field: effective_value
    definition: 'The numerical value of the fact that was reported. '
  fact.text-search:
    searchable: 'true'
    type: text
    definition: Used to define text in a text search. Cannot be output as a field.
  fact.ultimus:
    searchable: 'true'
    type: boolean
    database_field: ultimus_index
    definition: A boolean that indicates if the fact is the latest value reported.  A
      value of true represents that it's the latest value reported.  A value of false
      represents that the value has been superseded with a more recent fact.
    format: boolean
  fact.ultimus-index:
    searchable: 'true'
    type: int
    database_field: ultimus_index
    definition: An integer that records the incarnation of the fact. The same fact
      is reported many times and the ultimus field captures the incarnation that was
      reported. A value of 1 indicates that this is the latest value of the fact.
      A value of 6 for example would indicate that the value has been reported 6 times
      subsequently to this fact being reported. If requesting values from a specific
      report the ultimus filed would not be used as a search parameter as you will
      not get all the fact values if there has been a subsequent report filed, as
      the ultimus value on these facts in a specific report will be updated as additional
      reports come in.
    format: integer
  fact.value:
    searchable: 'true'
    type: text
    database_field: fact_value
    definition: The value of the fact as a text value. This included numerical as
      well as non numerical values reported.
  fact.value-link:
    searchable: 'false'
    type: varchar
    database_field: '''${DISPATCH}?Task=htmlExportFact&FactID='' || fact_id'
    definition: Used to define text in a text search. Will return the actual text.
  fact.xml-id:
    searchable: 'false'
    type: varchar
    database_field: xml_id
    definition: The xml-id included in the filing. Many facts may not have this identifier
      as it is dependent ofn the filer adding it. In inline filings it can be used
      to go directly to the fact value in the filing.
  footnote.id:
    searchable: 'false'
    type: varchar
    database_field: resource_id
    definition: The unique identifier to identify a footnote.
  footnote.lang:
    searchable: 'false'
    type: varchar
    database_field: xml_lang
    definition: ThThe ISO language code used to express the footnote. i.e. en-us.
  footnote.role:
    searchable: 'false'
    type: text
    database_field: uri
    definition: The role used for the footnote.
  footnote.text:
    searchable: 'false'
    type: text
    database_field: footnote
    definition: The text content of the footnote.
  member.is-base:
    searchable: 'true'
    type: boolean
    database_field: fact_is_base_member(fact.fact_id)
    definition: A boolean value that indicates if the member is a base element in
      the reporting taxonomy or a company extension.
    format: boolean
  member.local-name:
    searchable: 'true'
    type: varchar
    database_field: member_local_name
    definition: Local name of the member.
    format: concept
  member.member-value:
    searchable: 'true'
    type: text
    database_field: COALESCE(cde.member_local_name,cde.typed_text_content)
    definition: Typed value or local-name of the member depending on the dimension
      type.
  member.namespace:
    searchable: 'true'
    type: varchar
    database_field: member_namespace
    definition: Namespace of the member.
    format: uri
  member.typed-value:
    searchable: 'true'
    type: text
    database_field: typed_text_content
    definition: Typed value of the member.
  network.arcrole-uri:
    searchable: 'true'
    type: varchar
    database_field: uri
    definition: URI that identifies the link types, such as parent-child. However,
      this is the full uri of http://www.xbrl.org/2003/arcrole/parent-child.
  network.id:
    searchable: 'true'
    type: int
    database_field: dts_network_id
    definition: Unique identifier used to identify a specific network. A different
      identifier is used for networks with the same role but different linkbase types.
    format: integer
  network.link-name:
    searchable: 'true'
    type: varchar
    database_field: local_name
    definition: Name that identifies the link type. This corresponds to a linkbase
      i.e. presentationLink, calculationLink, definitionLink.
    format: concept
  network.role-description:
    searchable: 'true'
    type: varchar
    database_field: description
    definition: The human readable description of the network role. In some filing
      regimes this is used to order the networks.
  network.role-description-like:
    searchable: 'true'
    type: varchar
    database_field: description
    definition: The human readable description of the network role. In some filing
      regimes this is used to order the networks. This is used to do a text search
      on components of the text string.
  network.role-uri:
    searchable: 'true'
    type: varchar
    database_field: uri
    definition: The URI of the network role. This would appear as a URI describing
      the reporting group i.e. http://www.bc.com/role/DisclosureBalanceSheetComponentsDetails.
    format: uri
  period.calendar-period:
    searchable: 'true'
    type: varchar
    database_field: calendar_period
    definition: The period identifier for the fact such as year(Y) quarters such as
      (Q1,Q2,Q3,Q4), cumulative quarters such as 3QCUM, and half years such as H1
      and H2. The calendar period aligns the periods with a calendar year. A company
      with a year end of 30 September would have a fiscal 4th quarter which would
      be a calendar quarter of Q3.
  period.end:
    searchable: 'false'
    type: timestamp
    database_field: period_end
    definition: Period end date of the fact if applicable
  period.fiscal-id:
    searchable: 'true'
    type: text
    database_field: fiscal_hash
    definition: 'The identifier of the fiscal period. Each period has an assigned
      hash which identifies the fiscal period. The hash can be used to search for
      periods that are identical. Periods with the same period and year in fact nay
      be different as the fiscal periods and years are approximations. '
    format: hex_hash
  period.fiscal-period:
    searchable: 'true'
    type: text
    database_field: fiscal_period
    definition: The period identifier for the fact such as year(Y) quarters such as
      (Q1,Q2,Q3,Q4), cumulative quarters such as 3QCUM, and half years such as H1
      and H2. The fiscal period aligns the periods with a fiscal year. A company with
      a year end of 30 September would have a fiscal 4th quarter which would be a
      fiscal quarter of Q4 and a calender quarter of Q3.
  period.fiscal-year:
    searchable: 'true'
    type: int
    database_field: fiscal_year
    definition: The fiscal year in which the fact is applicable.
    format: year
  period.id:
    searchable: 'true'
    type: text
    database_field: calendar_hash
    definition: 'The identifier of the calender period. Each period has an assigned
      hash which identifies the period. The hash can be used to search for periods
      that are identical. Periods with the same period and year in fact nay be different
      as the fiscal periods and years are approximations. '
    format: hex_hash
  period.instant:
    searchable: 'true'
    type: timestamp
    database_field: period_instant
    definition: Instant in time at which the fact was measured, inly applicable for
      facts with a period type of instant.
  period.start:
    searchable: 'false'
    type: timestamp
    database_field: period_start
    definition: Period start date of the fact if applicable
  period.year:
    searchable: 'true'
    type: int
    database_field: calendar_year
    definition: The calendar year in which the facy is applicable.
    format: year
  relationship.id:
    searchable: 'true'
    type: int
    database_field: dts_relationship_id
    format: integer
  relationship.order:
    searchable: 'true'
    type: decimal
    database_field: reln_order
    format: integer
  relationship.preferred-label:
    searchable: 'true'
    type: varchar
    database_field: uri
    format: uri
  relationship.source-concept-id:
    searchable: 'true'
    type: int
    database_field: from_element_id
    format: integer
  relationship.source-is-abstract:
    searchable: 'false'
    type: boolean
    database_field: abstract
    format: boolean
  relationship.source-name:
    searchable: 'true'
    type: varchar
    database_field: local_name
    format: concept
  relationship.source-namespace:
    searchable: 'true'
    type: varchar
    database_field: namespace
    format: uri
  relationship.target-concept-id:
    searchable: 'true'
    type: int
    database_field: to_element_id
    format: integer
  relationship.target-datatype:
    searchable: 'false'
    type: varchar
    database_field: local_name
    format: concept
  relationship.target-is-abstract:
    searchable: 'true'
    type: boolean
    database_field: abstract
    format: boolean
  relationship.target-label:
    searchable: 'true'
    type: varchar
    database_field: label
    format: uri
  relationship.target-name:
    searchable: 'true'
    type: varchar
    database_field: local_name
    format: concept
  relationship.target-namespace:
    searchable: 'true'
    type: varchar
    database_field: namespace
    format: uri
  relationship.tree-depth:
    searchable: 'true'
    type: int
    database_field: tree_depth
    format: integer
  relationship.tree-sequence:
    searchable: 'true'
    type: int
    database_field: tree_sequence
    format: integer
  relationship.weight:
    searchable: 'false'
    type: decimal
    database_field: calculation_weight
  report.accepted-timestamp:
    searchable: 'false'
    type: timestamp
    database_field: accepted_timestamp
    definition: Date that the report was accepted at the regulator.
  report.accession:
    searchable: 'true'
    type: text
    database_field: properties->>'filing_accession_number'
    definition: The identifier used by the SEC to identify a report.
    format: accession
  report.address:
    searchable: 'false'
    type: varchar
    database_field: properties ->>'business_address'
    definition: Physical address of the reporting entity.
  report.base-taxonomy:
    searchable: 'true'
    type: varchar
    database_field: base_taxonomy
    definition: Base taxonomy used for the filing. e.g. US-GAAP 2020.
  report.checks-run:
    searchable: 'true'
    type: boolean
    database_field: CASE WHEN consistency_check_result_id is null THEN false ELSE
      true END
    definition: Boolean flag that indicates if the Data Quality Committee checks (see
      assertion object details - dqcfiling) have run for this report.
    format: boolean
  report.creation-software:
    searchable: 'true'
    type: varchar
    database_field: creation_software
    definition: The creation software that was used to create a report/
  report.document-index:
    searchable: 'true'
    type: int
    database_field: document_index
    format: integer
  report.document-type:
    searchable: 'true'
    type: text
    database_field: properties ->>'document_type'
    definition: The document type of the report e.g. 10-K, 10-Q.
  report.documentset-num:
    searchable: 'true'
    type: int
    database_field: documentset_num
    definition: The number of inline xbrl documents associated with the filing.
    format: integer
  report.entity-name:
    searchable: 'true'
    type: varchar
    database_field: entity_name
    definition: The name of the entity submitting the report. To search enter the
      full entity name, or a portion of the entity name.
  report.entry-type:
    searchable: 'true'
    type: varchar
    database_field: entry_type
    definition: "Identifies filer size associated with the report. Can be one of the\
      \ following:\n            - Large Accelerated Filer\n            - Accelerated\
      \ Filer\n            - Non-accelerated Filer"
    format: entry_type
  report.entry-url:
    searchable: 'true'
    type: text
    database_field: entry_url
    definition: The url entry point of a discoverable taxonomy set. This is also referred
      to as the entry point for a taxonomy. This represents the DTS entry point for
      a specific report.
    format: uri
  report.event-items:
    searchable: 'true'
    type: text
    database_field: properties->'event_items'
  report.filer-category:
    searchable: 'true'
    type: varchar
    database_field: get_simple_fact_by_accession('dei','EntityFilerCategory',report.report_id,
      'text'::character varying)
    definition: The identifier used to identify a report.
  report.filing-date:
    searchable: 'false'
    type: date
    database_field: properties->>'filing_date'
    definition: The date that the filing was published.
  report.form-type:
    searchable: 'true'
    type: text
    database_field: properties ->>'document_type'
    definition: The document type of the FERC report e.g. 1, 2-A.
  report.hash:
    searchable: 'true'
    type: text
    database_field: report_hash
    definition: A hash of all the filings information, facts, footnotes, etc.  Unique
      to each filing.
    format: hex_hash
  report.html-url:
    searchable: 'true'
    type: text
    database_field: properties ->>'html_url'
    format: uri
  report.id:
    searchable: 'true'
    type: int
    database_field: report_id
    definition: The identifier used to identify a report.
    format: integer
  report.is-most-current:
    searchable: 'true'
    type: boolean
    database_field: is_most_current
    definition: A boolean indicator for whether the report is the most current (true).
    format: boolean
  report.period-end:
    searchable: 'false'
    type: date
    database_field: reporting_period_end_date
    definition: The period end date or balance date associated with a given report.
  report.period-focus:
    searchable: 'true'
    type: text
    database_field: properties->>'report_period'
    definition: The period the report was reported for.
    format: accession
  report.period-index:
    searchable: 'true'
    type: int
    database_field: period_index
    definition: Allows the retrieval of reports other than most current. A value of
      1 gets the latest report. A value of 2 gets the second to last report etc.
    format: integer
  report.phone:
    searchable: 'false'
    type: varchar
    database_field: properties ->>'business_phone'
    definition: The phone number of the submitter of the report.
  report.restated:
    searchable: 'true'
    type: boolean
    database_field: restatement_index
    definition: A boolean that indicates if the report has been subsequently restated.  A
      value of true represents that the report has been subsequently restated by another
      report.  A value of false means that this report has not been subsequently restated
      by another report.
    format: boolean
  report.restated-index:
    searchable: 'true'
    type: text
    database_field: restatement_index
    definition: A numerical indicator that can be used to identify if a report has
      been restated. If the value is 1 it indicates that this is the latest report.
      If the value is 2 it means that an updated copy of the report has been filed.
    format: submission
  report.sec-url:
    searchable: 'true'
    type: text
    database_field: properties ->>'sec_html_url'
    definition: The url at which the details of a filing can be accessed from the
      SEC Edgar system.
    format: uri
  report.sic-code:
    searchable: 'true'
    type: text
    database_field: properties ->>'standard_industrial_classification'
    definition: Integer that represents the Standard Industrial Classification (SIC)
      code used by the SEC in the United States.
    format: integer
  report.source-id:
    searchable: 'true'
    type: int
    database_field: source_id
    format: integer
  report.source-name:
    searchable: 'true'
    type: text
    database_field: source_name
    definition: Name of the source of the data such as SEC.
  report.state-of-incorporation:
    searchable: 'false'
    type: text
    database_field: properties ->>'state_of_incorporation'
    definition: The state of incorporation for the entity submitting the report.
  report.submission-type:
    searchable: 'true'
    type: text
    database_field: properties->>'submission_type'
    definition: A FERC filing identifier indicating if it's the first time it was
      filed or a subsequent one.  (O = Original; R = Restated)
    format: integer
  report.type:
    searchable: 'false'
    type: text
    database_field: entry_type
    definition: The report type indicates if the report was filed in inline XBRL or
      XBRL format. The values can be either instance or inline.
  report.year-focus:
    searchable: 'true'
    type: text
    database_field: properties->>'report_year'
    definition: The year the report was reported for.
    format: accession
  report.zip-url:
    searchable: 'true'
    type: text
    database_field: properties ->> 'zip_url'
    definition: The url where the zip containing all the files of a filing can be
      accessed from the SEC Edgar system.
    format: uri
  unit:
    searchable: 'true'
    type: text
    database_field: uom
    definition: The unit of measure associated with the fact.
  unit.denominator:
    searchable: 'false'
    type: text
    database_field: uom
    definition: The unit of measure used as the denominator for a fact
  unit.numerator:
    searchable: 'false'
    type: text
    database_field: uom
    definition: the unit of measure used as the numerator for a fact
  unit.qname:
    searchable: 'false'
    type: text
    database_field: CASE WHEN unit.unit_id IS NULL THEN NULL ELSE COALESCE( (SELECT
      string_agg( '{' || q1.namespace || '}' || q1.local_name, ' * '::varchar) AS
      uom FROM unit_measure um1 JOIN qname q1 ON um1.qname_id = q1.qname_id WHERE
      um1.location_id = 1 AND um1.unit_id = unit.unit_id), (SELECT concat_ws('/',
      (SELECT string_agg('{' || q2.namespace || '}' ||q2.local_name, ' * '::varchar)
      FROM unit_measure um2 JOIN qname q2 ON um2.qname_id = q2.qname_id WHERE um2.unit_id
      = unit.unit_id AND um2.location_id = 2), (SELECT string_agg('{' || q3.namespace
      || '}' || q3.local_name, ' * '::varchar) FROM unit_measure um3 JOIN qname q3
      ON um3.qname_id = q3.qname_id WHERE um3.unit_id = unit.unit_id AND um3.location_id
      = 3)))) END
    definition: The full qname of the unit of measure, includes the namespace of the
      unit in clark notation.
