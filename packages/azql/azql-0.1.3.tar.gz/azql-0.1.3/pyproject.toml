[project]
name = "azql"
version = "0.1.3"
description = "AZQL is a tool for converting data files (CSV, JSON) to SQL DDL (Data Definition Language) scripts."
authors = [{ name = "Markus Feiks", email = "pypi.packages@feyx.de" }]
readme = "README.md"
license.file = "LICENSE"
requires-python = ">=3.11"
dependencies = []

[dependency-groups]
dev = []


[project.scripts]
azql = "azql.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# RUFF SETTINGS
[tool.ruff]
# Target the oldest supported version in editors and default CLI
target-version = "py311"

# formatting
line-length = 91
indent-width = 4

# This file is not UTF-8
extend-exclude = []

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
ignore = ["F401", "S311"]

# For all rules see: https://docs.astral.sh/ruff/rules/
select = [
  "A",    # flake8-builtins
  "B",    # flake8-bugbear
  "BLE",  # flake8-blind-exception
  "C4",   # flake8-comprehensions
  "COM",  # #flake8-commas-com
  "E",    # pycodestyle Error
  "EM",   # flake8-errmsg
  "F",    # pyflakes
  "FIX",  # flake8-fixme
  "F404", # late-future-import
  "F811", # redefined-while-unused
  "FA",   # flake8-future-annotations
  "FLY",  # static-join-to-f-string
  "G",    # flake8-logging-format
  "I",    # isort
  "PLC",  # Pylint Convention
  "PLE",  # Pylint Error
  "PYI",  # flake8-pyi
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "S",    # flake8-bandit
  "TC",   # flake8-type-checking
  "UP",   # pyupgrade
  "W",    # pycodestyle Warning
  "YTT",  # flake8-2020

  # "ANN",  # flake8-annotations
  # "FBT",  # flake8-boolean-trap (FBT)
]

[tool.ruff.lint.per-file-ignores]

[tool.ruff.lint.isort]
combine-as-imports = false
split-on-trailing-comma = true
detect-same-package = false
