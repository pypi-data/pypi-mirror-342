#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
x-superset-image: &superset-image ${HMD_LOCAL_NS_CONTAINER_REGISTRY:-ghcr.io/neuronsphere}/hmd-inf-superset:${HMD_INF_SUPERSET_VERSION:-stable}
x-superset-env: &superset-env superset/.env-non-dev
x-superset-depends-on: &superset-depends-on
  - db
  - redis
x-superset-volumes:
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container

  # - ./superset:/app/docker
  &superset-volumes
  - ${HMD_HOME}/superset_home:/app/superset_home

version: "3.7"
services:
  redis:
    image: redis:latest
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data
    networks:
      - neuronsphere_default

  # Commented out from original in apache-superset because local-ns already has a db in it
  # db:
  #   env_file: docker/.env-non-dev
  #   image: postgres:10
  #   container_name: superset_db
  #   restart: unless-stopped
  #   volumes:
  #     - db_home:/var/lib/postgresql/data

  superset:
    env_file: *superset-env
    image: *superset-image
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    environment:
      MAPBOX_API_KEY: ${MAPBOX_API_KEY:-na}
      DATABASE_DB: ${HMD_SUPERSET_DATABASE_DB:-superset}
      DATABASE_HOST: ${HMD_SUPERSET_DATABASE_HOST:-db}
      DATABASE_PASSWORD: ${HMD_SUPERSET_DATABASE_PASSWORD:-superset}
      DATABASE_USER: ${HMD_SUPERSET_DATABASE_USER:-superset}
      DATABASE_PORT: 5432
      DATABASE_DIALECT: postgresql
      POSTGRES_DB: ${HMD_SUPERSET_DATABASE_DB:-superset}
      POSTGRES_USER: ${HMD_SUPERSET_DATABASE_USER:-superset}
      POSTGRES_PASSWORD: ${HMD_SUPERSET_DATABASE_PASSWORD:-superset}
      SECRET_KEY: ${HMD_SUPERSET_SECRET_KEY:-neuronsphere}
      PREVIOUS_SECRET_KEY: ${HMD_SUPERSET_PREV_SECRET_KEY:-CHANGE_ME_TO_A_COMPLEX_RANDOM_SECRET}
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    networks:
      - neuronsphere_default

  superset-init:
    image: *superset-image
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file: *superset-env
    environment:
      PREVIOUS_SECRET_KEY: ${HMD_SUPERSET_PREV_SECRET_KEY:-CHANGE_ME_TO_A_COMPLEX_RANDOM_SECRET}
      MAPBOX_API_KEY: ${MAPBOX_API_KEY:-na}
      DATABASE_DB: ${HMD_SUPERSET_DATABASE_DB:-superset}
      DATABASE_HOST: ${HMD_SUPERSET_DATABASE_HOST:-db}
      DATABASE_PASSWORD: ${HMD_SUPERSET_DATABASE_PASSWORD:-superset}
      DATABASE_USER: ${HMD_SUPERSET_DATABASE_USER:-superset}
      DATABASE_PORT: 5432
      DATABASE_DIALECT: postgresql
      POSTGRES_DB: ${HMD_SUPERSET_DATABASE_DB:-superset}
      POSTGRES_USER: ${HMD_SUPERSET_DATABASE_USER:-superset}
      POSTGRES_PASSWORD: ${HMD_SUPERSET_DATABASE_PASSWORD:-superset}
      SECRET_KEY: ${HMD_SUPERSET_SECRET_KEY:-neuronsphere}
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    networks:
      - neuronsphere_default

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: *superset-env
    environment:
      MAPBOX_API_KEY: ${MAPBOX_API_KEY:-na}
      DATABASE_DB: ${HMD_SUPERSET_DATABASE_DB:-superset}
      DATABASE_HOST: ${HMD_SUPERSET_DATABASE_HOST:-db}
      DATABASE_PASSWORD: ${HMD_SUPERSET_DATABASE_PASSWORD:-superset}
      DATABASE_USER: ${HMD_SUPERSET_DATABASE_USER:-superset}
      DATABASE_PORT: 5432
      DATABASE_DIALECT: postgresql
      POSTGRES_DB: ${HMD_SUPERSET_DATABASE_DB:-superset}
      POSTGRES_USER: ${HMD_SUPERSET_DATABASE_USER:-superset}
      POSTGRES_PASSWORD: ${HMD_SUPERSET_DATABASE_PASSWORD:-superset}
      SECRET_KEY: ${HMD_SUPERSET_SECRET_KEY:-neuronsphere}
      PREVIOUS_SECRET_KEY: ${HMD_SUPERSET_PREV_SECRET_KEY:-CHANGE_ME_TO_A_COMPLEX_RANDOM_SECRET}
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: *superset-env
    environment:
      MAPBOX_API_KEY: ${MAPBOX_API_KEY:-na}
      DATABASE_DB: ${HMD_SUPERSET_DATABASE_DB:-superset}
      DATABASE_HOST: ${HMD_SUPERSET_DATABASE_HOST:-db}
      DATABASE_PASSWORD: ${HMD_SUPERSET_DATABASE_PASSWORD:-superset}
      DATABASE_USER: ${HMD_SUPERSET_DATABASE_USER:-superset}
      DATABASE_PORT: 5432
      DATABASE_DIALECT: postgresql
      POSTGRES_DB: ${HMD_SUPERSET_DATABASE_DB:-superset}
      POSTGRES_USER: ${HMD_SUPERSET_DATABASE_USER:-superset}
      POSTGRES_PASSWORD: ${HMD_SUPERSET_DATABASE_PASSWORD:-superset}
      SECRET_KEY: ${HMD_SUPERSET_SECRET_KEY:-neuronsphere}
      PREVIOUS_SECRET_KEY: ${HMD_SUPERSET_PREV_SECRET_KEY:-CHANGE_ME_TO_A_COMPLEX_RANDOM_SECRET}
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    networks:
      - neuronsphere_default

volumes:
  superset_home:
    external: false
  # Commented out from original in apache-superset because local-ns already has a db in it
  # db_home:
  #   external: false
  redis:
    external: false
