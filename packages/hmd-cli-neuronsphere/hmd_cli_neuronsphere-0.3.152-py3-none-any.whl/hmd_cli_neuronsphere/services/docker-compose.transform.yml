version: "3.7"
services:
  transform:
    image: ${HMD_LOCAL_NS_CONTAINER_REGISTRY:-ghcr.io/neuronsphere}/hmd-ms-transform:${HMD_MS_TRANSFORM_VERSION:-stable}
    container_name: hmd_ms_transform
    environment:
      AIRFLOW_HOST: "http://hmd_airflow_webserver:8080"
      AWS_DEFAULT_REGION: ${AWS_REGION:-us-west-2}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-dummykey}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-dummykey}
      AWS_XRAY_SDK_ENABLED: "false"
      DD_API_KEY: ${DD_API_KEY:-dummykey}
      DD_APP_KEY: ${DD_APP_KEY:-dummykey}
      DD_FLUSH_TO_LOG: "true"
      DD_SERVERLESS_LOGS_ENABLED: "false"
      DD_LAMBDA_HANDLER: "hmd_ms_base.hmd_ms_base.handler"
      DD_TRACE_ENABLED: "false"
      DD_LOCAL_TEST: "true"
      DD_LOG_LEVEL: "debug"
      HMD_CUSTOMER_CODE: ${HMD_CUSTOMER_CODE:-none}
      HMD_DID: ${HMD_DID:-aaa}
      HMD_ENVIRONMENT: local
      HMD_HOSTNAME: ${HMD_HOSTNAME}
      HMD_INSTANCE_NAME: ms-transform
      HMD_REGION: ${HMD_REGION:-reg1}
      HMD_REPO_NAME: hmd-ms-transform
      HMD_REPO_VERSION: ${HMD_MS_TRANSFORM_VERSION:-stable}
      HMD_SVC_HOST: "http://hmd_proxy/hmd_ms_transform"
      ARTIFACT_NAME: artifact
      HMD_USE_FASTAPI: "true"
      HMD_OTEL_ENDPOINT: http://otel-collector:4317/
      LOCAL_TRANSFORM_PROJECTS: /hmd/projects
      OPERATIONS_MODULE: hmd_ms_transform.hmd_ms_transform
      SCHEMA_URI: "/schemas"
      SERVICE_CONFIG: '{"loader_config": {"ms-transform": ["hmd-lang-transform"], "artifact": ["hmd-lang-librarian", "hmd-lang-artifact-librarian"]}, "service_loader": "ms-transform", "operations_modules": ["hmd_ms_transform.hmd_ms_transform", "hmd_ms_base.crud_operations"], "hmd_db_engines": {"postgres": {"engine_type": "postgres", "engine_config": {"host": "hmd_db", "user": "hmd_ms_transform", "password": "hmd_ms_transform", "db_name": "hmd_ms_transform"}}, "graph": {"engine_type": "gremlin", "engine_config": {"db_host": "global-graph", "db_protocol": "ws", "with_strategies": false}}}, "hmd_entity_config": {"__default__": {"persistence": ["postgres", "graph"]}}}'
      TRINO_BUCKET: file:///hmd/data/trino
      SQS_ENDPOINT: http://queues:9324/
      QUERY_QUEUE: http://queues:9324/000000000000/query_queue
      INSTANCE_QUEUE: http://queues:9324/000000000000/inst_queue
      QUEUE_RELOAD_LIMIT: 0
      GRAPH_QUERY_CONFIG: ${TRANSFORM_GRAPH_QUERY_CONFIG}
      TF_ENGINES: '["airflow"]'
    expose:
      - 8080
    networks:
      - neuronsphere_default
    volumes:
      - type: bind
        source: ${HMD_PROJECTS_PATH}
        target: /hmd/projects
      - type: bind
        source: ${HMD_HOME}/data/local_transforms
        target: /hmd/data/local_transforms
      - type: bind
        source: ${HMD_HOME}/.cache
        target: /hmd/.cache
    depends_on:
      db:
        condition: service_healthy
      airflow-webserver:
        condition: service_healthy
      queues:
        condition: service_healthy
      graph-db:
        condition: service_healthy
  queues:
    image: softwaremill/elasticmq:1.4.2
    container_name: queues
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9325/"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 9324:9324
      - 9325:9325
    networks:
      - neuronsphere_default
    volumes:
      - type: bind
        source: ${HMD_HOME}/queues/queue.conf
        target: /opt/elasticmq.conf
  query_dispatcher:
    image: ${HMD_LOCAL_NS_CONTAINER_REGISTRY:-ghcr.io/neuronsphere}/hmd-lib-dispatch:${HMD_LIB_DISPATCH_VERSION:-stable}
    container_name: query_dispatcher
    environment:
      AWS_XRAY_SDK_ENABLED: "false"
      DD_API_KEY: ${DD_API_KEY:-dummykey}
      DD_APP_KEY: ${DD_APP_KEY:-dummykey}
      DD_FLUSH_TO_LOG: "true"
      DD_SERVERLESS_LOGS_ENABLED: "false"
      DD_LAMBDA_HANDLER: "main.handler"
      DD_TRACE_ENABLED: "false"
      DD_LOCAL_TEST: "true"
      DD_LOG_LEVEL: "debug"
      HMD_CUSTOMER_CODE: ${HMD_CUSTOMER_CODE:-none}
      HMD_DID: ${HMD_DID:-aaa}
      HMD_ENVIRONMENT: local
      HMD_HOSTNAME: ${HMD_HOSTNAME}
      HMD_INSTANCE_NAME: query-dispatcher
      HMD_REGION: ${HMD_REGION:-reg1}
      HMD_REPO_NAME: hmd-lib-dispatch
      HMD_REPO_VERSION: ${HMD_LIB_DISPATCH_VERSION:-stable}
      HMD_DISPATCH_CONFIG: '{"target_lambda_function": "http://hmd_proxy/hmd_ms_transform/"}'
    volumes:
      - type: bind
        source: ${HMD_HOME}/.cache
        target: /hmd/.cache
    networks:
      - neuronsphere_default
  inst_dispatcher:
    image: ${HMD_LOCAL_NS_CONTAINER_REGISTRY:-ghcr.io/neuronsphere}/hmd-lib-dispatch:${HMD_LIB_DISPATCH_VERSION:-stable}
    container_name: inst_dispatcher
    environment:
      AWS_XRAY_SDK_ENABLED: "false"
      DD_API_KEY: ${DD_API_KEY:-dummykey}
      DD_APP_KEY: ${DD_APP_KEY:-dummykey}
      DD_FLUSH_TO_LOG: "true"
      DD_SERVERLESS_LOGS_ENABLED: "false"
      DD_LAMBDA_HANDLER: "main.handler"
      DD_TRACE_ENABLED: "false"
      DD_LOCAL_TEST: "true"
      DD_LOG_LEVEL: "debug"
      HMD_CUSTOMER_CODE: ${HMD_CUSTOMER_CODE:-none}
      HMD_DID: ${HMD_DID:-aaa}
      HMD_ENVIRONMENT: local
      HMD_HOSTNAME: ${HMD_HOSTNAME}
      HMD_INSTANCE_NAME: inst-dispatcher
      HMD_REGION: ${HMD_REGION:-reg1}
      HMD_REPO_NAME: hmd-lib-dispatch
      HMD_REPO_VERSION: ${HMD_LIB_DISPATCH_VERSION:-stable}
      HMD_DISPATCH_CONFIG: '{"target_lambda_function": "http://hmd_proxy/hmd_ms_transform/"}'
    volumes:
      - type: bind
        source: ${HMD_HOME}/.cache
        target: /hmd/.cache
    networks:
      - neuronsphere_default
  queue_poll:
    image: ${HMD_LOCAL_NS_CONTAINER_REGISTRY:-ghcr.io/neuronsphere}/hmd-img-local-queue-poll:${HMD_IMG_LOCAL_QUEUE_POLL_VERSION:-stable}
    container_name: queue_poll
    environment:
      AWS_DEFAULT_REGION: ${AWS_REGION:-us-west-2}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-dummykey}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-dummykey}
      AWS_XRAY_SDK_ENABLED: "false"
      SQS_ENDPOINT: http://queues:9324/
      QUEUE_CONFIG: '{"query_queue": {"queue_url": "http://queues:9324/000000000000/query_queue", "dispatcher": "query_dispatcher"}, "inst_queue": {"queue_url": "http://queues:9324/000000000000/inst_queue", "dispatcher": "inst_dispatcher"}}'
    depends_on:
      queues:
        condition: service_healthy
    networks:
      - neuronsphere_default
