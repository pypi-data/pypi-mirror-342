version: "3.7"

services:
  proxy:
    container_name: hmd_proxy
    image: nginx:stable-alpine
    ports:
      - "80:80"
    networks:
      - neuronsphere_default
    volumes:
      - "./nginx/neuronsphere.conf:/etc/nginx/nginx.conf:ro"
  gateway:
    container_name: hmd_gateway
    image: ${HMD_LOCAL_NS_CONTAINER_REGISTRY:-ghcr.io/neuronsphere}/hmd-img-local-gateway:${HMD_IMG_LOCAL_GATEWAY_VERSION:-stable}
    environment:
      HMD_CUSTOMER_CODE: ${HMD_CUSTOMER_CODE}
      HMD_DID: ${HMD_DID:-aaa}
      HMD_ENVIRONMENT: local
      HMD_HOME: ${HMD_HOME}
      HMD_REGION: ${HMD_REGION}
    ports:
      - "8080:80"
    networks:
      - neuronsphere_default

  db:
    container_name: hmd_db
    environment:
      HMD_CUSTOMER_CODE: ${HMD_CUSTOMER_CODE}
      HMD_DID: ${HMD_DID:-aaa}
      HMD_ENVIRONMENT: local
      HMD_REGION: ${HMD_REGION}
    image: ${HMD_LOCAL_NS_CONTAINER_REGISTRY:-ghcr.io/neuronsphere}/hmd-postgres-base:${HMD_POSTGRES_BASE_VERSION:-stable}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - neuronsphere_default
    volumes:
      - type: bind
        source: ${HMD_HOME}/postgresql/data
        target: /var/lib/postgresql/data
      - type: bind
        source: ${HMD_HOME}/postgresql/scripts/always-initdb.d
        target: /docker-entrypoint-initdb.d

  ms-naming:
    image: ${HMD_LOCAL_NS_CONTAINER_REGISTRY:-ghcr.io/neuronsphere}/hmd-ms-naming:${HMD_MS_NAMING_VERSION:-stable}
    container_name: ms-naming
    environment:
      AWS_DEFAULT_REGION: ${AWS_REGION:-us-west-2}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-dummykey}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-dummykey}
      AWS_XRAY_SDK_ENABLED: "false"
      DD_API_KEY: ${DD_API_KEY:-dummykey}
      DD_APP_KEY: ${DD_APP_KEY:-dummykey}
      DD_FLUSH_TO_LOG: "true"
      DD_SERVERLESS_LOGS_ENABLED: "false"
      DD_LAMBDA_HANDLER: "hmd_ms_base.hmd_ms_base.handler"
      DD_TRACE_ENABLED: "false"
      DD_LOCAL_TEST: "true"
      DD_LOG_LEVEL: "debug"
      HMD_CUSTOMER_CODE: ${HMD_CUSTOMER_CODE:-none}
      HMD_DID: ${HMD_DID:-aaa}
      HMD_ENVIRONMENT: local
      HMD_HOSTNAME: ${HMD_HOSTNAME}
      HMD_INSTANCE_NAME: ms-naming
      HMD_REGION: ${HMD_REGION:-reg1}
      HMD_REPO_NAME: hmd-ms-naming
      HMD_REPO_VERSION: ${HMD_MS_NAMING_VERSION:-stable}
      SERVICE_CONFIG: '{"loader_config": {"naming": ["hmd-lang-naming"], "deployment": ["hmd-lang-deployment"]}, "service_loader": "naming", "operations_modules": ["hmd_ms_naming.hmd_ms_naming", "hmd_ms_base.crud_operations"], "hmd_db_engines": {"postgres": {"engine_type": "postgres", "engine_config": {"host": "hmd_db", "user": "hmd_ms_naming", "password": "hmd_ms_naming", "db_name": "hmd_ms_naming"}}}, "hmd_entity_config": {"__default__": {"persistence": ["postgres"]}}}'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - neuronsphere_default

  db_init:
    command: psql -h db --username postgres -a --dbname "postgres" -f /root/sql/db_init.sql
    container_name: hmd-ms-naming_db_init
    environment:
      HMD_CUSTOMER_CODE: hmdd2
      HMD_DID: aaa
      HMD_ENVIRONMENT: local
      HMD_REGION: reg1
      PGPASSWORD: admin
    image: ${HMD_LOCAL_NS_CONTAINER_REGISTRY}/hmd-postgres-base:${HMD_POSTGRES_BASE_VERSION:-stable}
    ports:
      - 15432:5432
    volumes:
      - source: ./naming/db_init.sql
        target: /root/sql/db_init.sql
        type: bind
    networks:
      - neuronsphere_default

networks:
  neuronsphere_default:
    name: neuronsphere_default
