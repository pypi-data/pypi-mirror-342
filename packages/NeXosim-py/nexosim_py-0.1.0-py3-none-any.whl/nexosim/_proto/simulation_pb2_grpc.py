# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from nexosim._proto import simulation_pb2 as nexosim_dot___proto_dot_simulation__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in nexosim/_proto/simulation_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SimulationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Init = channel.unary_unary(
                '/simulation.v1.Simulation/Init',
                request_serializer=nexosim_dot___proto_dot_simulation__pb2.InitRequest.SerializeToString,
                response_deserializer=nexosim_dot___proto_dot_simulation__pb2.InitReply.FromString,
                _registered_method=True)
        self.Terminate = channel.unary_unary(
                '/simulation.v1.Simulation/Terminate',
                request_serializer=nexosim_dot___proto_dot_simulation__pb2.TerminateRequest.SerializeToString,
                response_deserializer=nexosim_dot___proto_dot_simulation__pb2.TerminateReply.FromString,
                _registered_method=True)
        self.Halt = channel.unary_unary(
                '/simulation.v1.Simulation/Halt',
                request_serializer=nexosim_dot___proto_dot_simulation__pb2.HaltRequest.SerializeToString,
                response_deserializer=nexosim_dot___proto_dot_simulation__pb2.HaltReply.FromString,
                _registered_method=True)
        self.Time = channel.unary_unary(
                '/simulation.v1.Simulation/Time',
                request_serializer=nexosim_dot___proto_dot_simulation__pb2.TimeRequest.SerializeToString,
                response_deserializer=nexosim_dot___proto_dot_simulation__pb2.TimeReply.FromString,
                _registered_method=True)
        self.Step = channel.unary_unary(
                '/simulation.v1.Simulation/Step',
                request_serializer=nexosim_dot___proto_dot_simulation__pb2.StepRequest.SerializeToString,
                response_deserializer=nexosim_dot___proto_dot_simulation__pb2.StepReply.FromString,
                _registered_method=True)
        self.StepUntil = channel.unary_unary(
                '/simulation.v1.Simulation/StepUntil',
                request_serializer=nexosim_dot___proto_dot_simulation__pb2.StepUntilRequest.SerializeToString,
                response_deserializer=nexosim_dot___proto_dot_simulation__pb2.StepUntilReply.FromString,
                _registered_method=True)
        self.StepUnbounded = channel.unary_unary(
                '/simulation.v1.Simulation/StepUnbounded',
                request_serializer=nexosim_dot___proto_dot_simulation__pb2.StepUnboundedRequest.SerializeToString,
                response_deserializer=nexosim_dot___proto_dot_simulation__pb2.StepUnboundedReply.FromString,
                _registered_method=True)
        self.ScheduleEvent = channel.unary_unary(
                '/simulation.v1.Simulation/ScheduleEvent',
                request_serializer=nexosim_dot___proto_dot_simulation__pb2.ScheduleEventRequest.SerializeToString,
                response_deserializer=nexosim_dot___proto_dot_simulation__pb2.ScheduleEventReply.FromString,
                _registered_method=True)
        self.CancelEvent = channel.unary_unary(
                '/simulation.v1.Simulation/CancelEvent',
                request_serializer=nexosim_dot___proto_dot_simulation__pb2.CancelEventRequest.SerializeToString,
                response_deserializer=nexosim_dot___proto_dot_simulation__pb2.CancelEventReply.FromString,
                _registered_method=True)
        self.ProcessEvent = channel.unary_unary(
                '/simulation.v1.Simulation/ProcessEvent',
                request_serializer=nexosim_dot___proto_dot_simulation__pb2.ProcessEventRequest.SerializeToString,
                response_deserializer=nexosim_dot___proto_dot_simulation__pb2.ProcessEventReply.FromString,
                _registered_method=True)
        self.ProcessQuery = channel.unary_unary(
                '/simulation.v1.Simulation/ProcessQuery',
                request_serializer=nexosim_dot___proto_dot_simulation__pb2.ProcessQueryRequest.SerializeToString,
                response_deserializer=nexosim_dot___proto_dot_simulation__pb2.ProcessQueryReply.FromString,
                _registered_method=True)
        self.ReadEvents = channel.unary_unary(
                '/simulation.v1.Simulation/ReadEvents',
                request_serializer=nexosim_dot___proto_dot_simulation__pb2.ReadEventsRequest.SerializeToString,
                response_deserializer=nexosim_dot___proto_dot_simulation__pb2.ReadEventsReply.FromString,
                _registered_method=True)
        self.AwaitEvent = channel.unary_unary(
                '/simulation.v1.Simulation/AwaitEvent',
                request_serializer=nexosim_dot___proto_dot_simulation__pb2.AwaitEventRequest.SerializeToString,
                response_deserializer=nexosim_dot___proto_dot_simulation__pb2.AwaitEventReply.FromString,
                _registered_method=True)
        self.OpenSink = channel.unary_unary(
                '/simulation.v1.Simulation/OpenSink',
                request_serializer=nexosim_dot___proto_dot_simulation__pb2.OpenSinkRequest.SerializeToString,
                response_deserializer=nexosim_dot___proto_dot_simulation__pb2.OpenSinkReply.FromString,
                _registered_method=True)
        self.CloseSink = channel.unary_unary(
                '/simulation.v1.Simulation/CloseSink',
                request_serializer=nexosim_dot___proto_dot_simulation__pb2.CloseSinkRequest.SerializeToString,
                response_deserializer=nexosim_dot___proto_dot_simulation__pb2.CloseSinkReply.FromString,
                _registered_method=True)


class SimulationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Terminate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Halt(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Time(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Step(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StepUntil(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StepUnbounded(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScheduleEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AwaitEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenSink(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseSink(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SimulationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=nexosim_dot___proto_dot_simulation__pb2.InitRequest.FromString,
                    response_serializer=nexosim_dot___proto_dot_simulation__pb2.InitReply.SerializeToString,
            ),
            'Terminate': grpc.unary_unary_rpc_method_handler(
                    servicer.Terminate,
                    request_deserializer=nexosim_dot___proto_dot_simulation__pb2.TerminateRequest.FromString,
                    response_serializer=nexosim_dot___proto_dot_simulation__pb2.TerminateReply.SerializeToString,
            ),
            'Halt': grpc.unary_unary_rpc_method_handler(
                    servicer.Halt,
                    request_deserializer=nexosim_dot___proto_dot_simulation__pb2.HaltRequest.FromString,
                    response_serializer=nexosim_dot___proto_dot_simulation__pb2.HaltReply.SerializeToString,
            ),
            'Time': grpc.unary_unary_rpc_method_handler(
                    servicer.Time,
                    request_deserializer=nexosim_dot___proto_dot_simulation__pb2.TimeRequest.FromString,
                    response_serializer=nexosim_dot___proto_dot_simulation__pb2.TimeReply.SerializeToString,
            ),
            'Step': grpc.unary_unary_rpc_method_handler(
                    servicer.Step,
                    request_deserializer=nexosim_dot___proto_dot_simulation__pb2.StepRequest.FromString,
                    response_serializer=nexosim_dot___proto_dot_simulation__pb2.StepReply.SerializeToString,
            ),
            'StepUntil': grpc.unary_unary_rpc_method_handler(
                    servicer.StepUntil,
                    request_deserializer=nexosim_dot___proto_dot_simulation__pb2.StepUntilRequest.FromString,
                    response_serializer=nexosim_dot___proto_dot_simulation__pb2.StepUntilReply.SerializeToString,
            ),
            'StepUnbounded': grpc.unary_unary_rpc_method_handler(
                    servicer.StepUnbounded,
                    request_deserializer=nexosim_dot___proto_dot_simulation__pb2.StepUnboundedRequest.FromString,
                    response_serializer=nexosim_dot___proto_dot_simulation__pb2.StepUnboundedReply.SerializeToString,
            ),
            'ScheduleEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.ScheduleEvent,
                    request_deserializer=nexosim_dot___proto_dot_simulation__pb2.ScheduleEventRequest.FromString,
                    response_serializer=nexosim_dot___proto_dot_simulation__pb2.ScheduleEventReply.SerializeToString,
            ),
            'CancelEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelEvent,
                    request_deserializer=nexosim_dot___proto_dot_simulation__pb2.CancelEventRequest.FromString,
                    response_serializer=nexosim_dot___proto_dot_simulation__pb2.CancelEventReply.SerializeToString,
            ),
            'ProcessEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessEvent,
                    request_deserializer=nexosim_dot___proto_dot_simulation__pb2.ProcessEventRequest.FromString,
                    response_serializer=nexosim_dot___proto_dot_simulation__pb2.ProcessEventReply.SerializeToString,
            ),
            'ProcessQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessQuery,
                    request_deserializer=nexosim_dot___proto_dot_simulation__pb2.ProcessQueryRequest.FromString,
                    response_serializer=nexosim_dot___proto_dot_simulation__pb2.ProcessQueryReply.SerializeToString,
            ),
            'ReadEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadEvents,
                    request_deserializer=nexosim_dot___proto_dot_simulation__pb2.ReadEventsRequest.FromString,
                    response_serializer=nexosim_dot___proto_dot_simulation__pb2.ReadEventsReply.SerializeToString,
            ),
            'AwaitEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.AwaitEvent,
                    request_deserializer=nexosim_dot___proto_dot_simulation__pb2.AwaitEventRequest.FromString,
                    response_serializer=nexosim_dot___proto_dot_simulation__pb2.AwaitEventReply.SerializeToString,
            ),
            'OpenSink': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenSink,
                    request_deserializer=nexosim_dot___proto_dot_simulation__pb2.OpenSinkRequest.FromString,
                    response_serializer=nexosim_dot___proto_dot_simulation__pb2.OpenSinkReply.SerializeToString,
            ),
            'CloseSink': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseSink,
                    request_deserializer=nexosim_dot___proto_dot_simulation__pb2.CloseSinkRequest.FromString,
                    response_serializer=nexosim_dot___proto_dot_simulation__pb2.CloseSinkReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'simulation.v1.Simulation', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('simulation.v1.Simulation', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Simulation(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/simulation.v1.Simulation/Init',
            nexosim_dot___proto_dot_simulation__pb2.InitRequest.SerializeToString,
            nexosim_dot___proto_dot_simulation__pb2.InitReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Terminate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/simulation.v1.Simulation/Terminate',
            nexosim_dot___proto_dot_simulation__pb2.TerminateRequest.SerializeToString,
            nexosim_dot___proto_dot_simulation__pb2.TerminateReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Halt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/simulation.v1.Simulation/Halt',
            nexosim_dot___proto_dot_simulation__pb2.HaltRequest.SerializeToString,
            nexosim_dot___proto_dot_simulation__pb2.HaltReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Time(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/simulation.v1.Simulation/Time',
            nexosim_dot___proto_dot_simulation__pb2.TimeRequest.SerializeToString,
            nexosim_dot___proto_dot_simulation__pb2.TimeReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Step(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/simulation.v1.Simulation/Step',
            nexosim_dot___proto_dot_simulation__pb2.StepRequest.SerializeToString,
            nexosim_dot___proto_dot_simulation__pb2.StepReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StepUntil(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/simulation.v1.Simulation/StepUntil',
            nexosim_dot___proto_dot_simulation__pb2.StepUntilRequest.SerializeToString,
            nexosim_dot___proto_dot_simulation__pb2.StepUntilReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StepUnbounded(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/simulation.v1.Simulation/StepUnbounded',
            nexosim_dot___proto_dot_simulation__pb2.StepUnboundedRequest.SerializeToString,
            nexosim_dot___proto_dot_simulation__pb2.StepUnboundedReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ScheduleEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/simulation.v1.Simulation/ScheduleEvent',
            nexosim_dot___proto_dot_simulation__pb2.ScheduleEventRequest.SerializeToString,
            nexosim_dot___proto_dot_simulation__pb2.ScheduleEventReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/simulation.v1.Simulation/CancelEvent',
            nexosim_dot___proto_dot_simulation__pb2.CancelEventRequest.SerializeToString,
            nexosim_dot___proto_dot_simulation__pb2.CancelEventReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProcessEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/simulation.v1.Simulation/ProcessEvent',
            nexosim_dot___proto_dot_simulation__pb2.ProcessEventRequest.SerializeToString,
            nexosim_dot___proto_dot_simulation__pb2.ProcessEventReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProcessQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/simulation.v1.Simulation/ProcessQuery',
            nexosim_dot___proto_dot_simulation__pb2.ProcessQueryRequest.SerializeToString,
            nexosim_dot___proto_dot_simulation__pb2.ProcessQueryReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/simulation.v1.Simulation/ReadEvents',
            nexosim_dot___proto_dot_simulation__pb2.ReadEventsRequest.SerializeToString,
            nexosim_dot___proto_dot_simulation__pb2.ReadEventsReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AwaitEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/simulation.v1.Simulation/AwaitEvent',
            nexosim_dot___proto_dot_simulation__pb2.AwaitEventRequest.SerializeToString,
            nexosim_dot___proto_dot_simulation__pb2.AwaitEventReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OpenSink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/simulation.v1.Simulation/OpenSink',
            nexosim_dot___proto_dot_simulation__pb2.OpenSinkRequest.SerializeToString,
            nexosim_dot___proto_dot_simulation__pb2.OpenSinkReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CloseSink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/simulation.v1.Simulation/CloseSink',
            nexosim_dot___proto_dot_simulation__pb2.CloseSinkRequest.SerializeToString,
            nexosim_dot___proto_dot_simulation__pb2.CloseSinkReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
