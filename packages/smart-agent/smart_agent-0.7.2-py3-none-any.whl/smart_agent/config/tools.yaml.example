# Smart Agent Tools Configuration Example
# Copy this file to tools.yaml and update with your values

# Each tool must have:
# - enabled: Whether the tool is enabled
# - transport: The transport type for the tool:
#   - stdio_to_sse: Convert stdio to SSE using supergateway (use MCPServerSse in chat)
#   - sse_to_stdio: Convert SSE to stdio using supergateway (use MCPServerStdio in chat)
#   - stdio: Direct stdio communication (use MCPServerStdio in chat, no supergateway, no port/URL needed)
#   - sse: Remote SSE tools (use MCPServerSse in chat, no local launching needed)
# - command: The installation command for the tool (needed for 'stdio' and 'stdio_to_sse' transports, not needed for 'sse' and 'sse_to_stdio' transports)
# - url: URL to access the tool (needed for 'sse', 'sse_to_stdio', and 'stdio_to_sse' transports, not needed for 'stdio' transport)
#
# For SSE-based transports (sse, stdio_to_sse), you can configure reconnection behavior with:
# - max_reconnect_attempts: Maximum number of reconnection attempts before giving up (default: 10)
# - reconnect_base_delay: Base delay for reconnection attempts in seconds (default: 1.0)
# - reconnect_max_delay: Maximum delay between reconnection attempts in seconds (default: 60.0)
# - ping_interval: Interval between ping attempts in seconds (default: 5.0)

# Example of local tools
mcp_think_tool:
  enabled: true
  url: http://localhost:8000/sse
  command: "uvx mcp-think --sse --host 0.0.0.0"
  transport: stdio_to_sse

ddg_mcp:
  enabled: true
  url: http://localhost:{port}/sse # Dynamic port in URL (port will be assigned at runtime)
  command: "uvx --from git+https://github.com/ddkang1/ddg-mcp ddg-mcp"
  transport: stdio_to_sse

python_repl:
  enabled: true
  url: http://localhost:8002/sse
  command: "docker run -i --rm --pull=always -v ./data:/mnt/data/ ghcr.io/ddkang1/mcp-py-repl:latest"
  transport: stdio_to_sse

# Example of a stdio tool (direct stdio communication)
stdio_tool:
  enabled: true
  command: "python -m my_stdio_tool"
  transport: stdio

# Example of an sse_to_stdio tool (convert SSE to stdio)
sse_to_stdio_tool:
  enabled: true
  url: "https://mcp-server-example.supermachine.app"  # URL of the remote SSE server
  transport: sse_to_stdio
  # Note: No command is needed for sse_to_stdio transport, it will be constructed from the URL

# Example of remote tools (only for SSE)
remote_tool:
  enabled: true
  url: http://localhost:8003/sse
  transport: sse
  # Reconnection configuration (optional)
  max_reconnect_attempts: 15  # Try up to 15 times before giving up
  reconnect_base_delay: 2.0   # Start with 2 second delay
  reconnect_max_delay: 120.0  # Maximum delay of 2 minutes between attempts
  ping_interval: 10.0         # Check connection every 10 seconds

