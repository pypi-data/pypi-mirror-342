[tool.poetry]
name = "parcha-api"
version = "0.1.1"
description = "Python client for interacting with the Parcha API, providing both synchronous and asynchronous methods for various API endpoints."
authors = ["Miguel Rios <miguel@parcha.ai>"]
readme = "README.md"
packages = [{include = "parcha_api"}]
license = "Proprietary"
homepage = "https://docs.parcha.ai"
repository = "https://github.com/parcha-ai/parcha-api-python"  # Adjust if this is not the correct repo
documentation = "https://docs.parcha.ai"
keywords = ["KYB", "KYC", "API client", "Parcha", "business verification", "customer verification", "compliance"]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Financial",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]

[tool.poetry.dependencies]
python = "^3.8"
requests = "^2.32.3"
aiohttp = "^3.10.5"
pydantic = "^2.9.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.1"
black = "^23.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.extras]
test = ["pytest"]

[tool.black]
line-length = 120
