[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "claude-llm-tools"
version = "0.3.0"
description = "A library for auto-generating JSON Schema and dispatching tool calls in applications that use the Anthropic API to interact with Claude."
readme = "README.md"
requires-python = ">=3.12"
license = 'BSD-3-clause'
license-files = ["LICENSE"]
authors = [{ name = "Gavin M. Roy", email = "gavinr@aweber.com" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
dependencies = [
    "anthropic>=0.49.0,<1",
    "jsonschema-models>=1.2.1",
    "pydantic>=2.11.0,<3",
]

[project.urls]
"Homepage" = "https://github.com/gmr/claude-llm-tools"
"Bug Tracker" = "https://github.com/gmr/claude-llm-tools/issues"

[tool.hatch.build.targets.wheel]
include = ["claude_llm_tools"]

[tool.hatch.build.force-include]
"claude_llm_tools/py.typed" = "claude_llm_tools/py.typed"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"

[project.optional-dependencies]
dev = [
    "build",
    "mypy",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "ruff",
]

[tool.mypy]
plugins = ['pydantic.mypy']

[tool.ruff]
line-length = 79
respect-gitignore = true
target-version = "py312"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 40
quote-style = "single"
skip-magic-trailing-comma = true

[tool.ruff.lint]
select = [
    "ASYNC", # flake8-async
    "B", # flake8-bugbear
    "BLE", # flake8-blind-except
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "E", "W", # pycodestyle
    "F", # pyflakes
    "G", # flake8-logging-format
    "I", # isort
    "S", # flake8-bandit
    "T20", # flake8-print
    "UP", # pyupgrade
    "F401", # unused imports
    "F841", # unused variables
    "B027", # empty method in abstract base class
    "B905", # zip() without explicit strict parameter
]
ignore = [
    "RSE", # contradicts Python Style Guide
]
flake8-quotes = { inline-quotes = "single" }
isort.split-on-trailing-comma = false
